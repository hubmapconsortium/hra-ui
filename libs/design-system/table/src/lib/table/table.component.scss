@use '@angular/material' as mat;
@use '../../../../styles/utils';

:host {
  table {
    @include mat.sort-overrides(
      (
        arrow-color: var(--mat-sys-secondary),
      )
    );

    @include mat.table-overrides(
      (
        background-color: var(--mat-sys-on-primary),
        header-container-height: 2.5rem,
        row-item-container-height: 2.5rem,
        row-item-label-text-color: var(--mat-sys-primary),
        header-headline-color: var(--mat-sys-secondary),
        row-item-outline-color: var(--mat-sys-outline-variant),
      )
    );

    .mat-mdc-row .mat-mdc-cell {
      border: none;
    }

    th {
      border-bottom-color: var(--mat-sys-outline);
      background: var(--mat-sys-surface-dim);
      border-bottom: 1px;
    }

    th,
    tr > td {
      @include utils.use-font(label, medium);
    }

    .mat-sort-header-container {
      max-width: 10rem;
      .mat-sort-header-arrow {
        margin-right: 0.375rem;

        .mat-sort-header-stem {
          border-radius: 0.25rem;
          height: 0.75rem;
        }

        .mat-sort-header-pointer-left,
        .mat-sort-header-pointer-right {
          width: 0.4375rem;
        }

        .mat-sort-header-pointer-left {
          left: -0.0625rem;
          border-radius: 0.25rem 0 0 0.25rem;
        }

        .mat-sort-header-pointer-right {
          right: -0.0625rem;
          border-radius: 0 0.25rem 0.25rem 0;
        }

        .mat-sort-header-pointer-middle {
          border-radius: 0.25rem;
        }
      }
    }
  }

  table[matSort] {
    @include mat.sort-overrides(
      (
        arrow-color: var(--mat-sys-secondary),
      )
    );

    @include mat.table-overrides(
      (
        background-color: var(--mat-sys-surface-container-low),
        header-container-height: 2rem,
        row-item-container-height: 2rem,
      )
    );

    th {
      background: var(--mat-sys-surface-dim);
      border-bottom: 1px;
    }

    th,
    tr > td {
      padding: 0 0.5rem;
    }
  }

  th.numeric {
    justify-items: end;
  }

  tr > td.numeric {
    padding-right: 2.5rem;
    text-align: right;
  }

  th:first-of-type,
  td:first-of-type {
    &.numeric {
      justify-items: unset;
      padding-right: unset;
      text-align: unset;
    }
  }

  &.sortable {
    .mat-sort-header-arrow {
      pointer-events: none;
      opacity: 0;
    }

    .mat-sort-header {
      cursor: default;
    }

    &:focus-visible {
      border-color: var(--mat-sys-secondary);
    }
    .mat-sort-header-content {
      cursor: text;
    }
  }

  &.vertical-dividers {
    th:not(:first-of-type),
    td:not(:first-of-type) {
      border-left: 1px solid var(--mat-sys-outline) !important;
    }
  }

  &.hra-table-style-basic {
    border: none;

    thead {
      background: inherit;
    }

    th {
      color: var(--mat-sys-secondary);
      line-height: normal;
      border-bottom: none;
    }
  }

  &.hra-table-style-alternating {
    tr {
      border: none;
    }

    tr:nth-child(even) {
      background-color: var(--mat-sys-surface-container);
    }

    tr:nth-child(odd) {
      background-color: var(--mat-sys-surface-container-lowest);
    }
  }

  &.hra-table-style-divider {
    //
  }
}
