@use '@angular/material' as mat;
@use '../../../../../../../design-system/styles/utils';
@use '../../../../../../../design-system/styles/vars';

:host {
  display: block;
  position: relative;
  width: 100%;
  table-layout: fixed;

  @include mat.table-overrides(
    (
      header-container-height: 6rem,
      header-headline-color: vars.$secondary,
      header-headline-font: vars.$label-small-font,
      header-headline-size: vars.$label-small-size,
      header-headline-weight: vars.$label-small-weight,
      row-item-container-height: 1.75rem,
      row-item-label-text-color: vars.$primary,
      row-item-label-text-font: vars.$label-small-font,
      row-item-label-text-size: vars.$label-small-size,
      row-item-label-text-weight: vars.$label-small-weight,
    )
  );

  @include mat.button-toggle-overrides(
    (
      divider-color: 1px solid vars.$primary,
      disabled-state-text-color: utils.with-alpha(vars.$secondary, 38%),
      height: 2rem,
      label-text-font: vars.$label-medium-font,
      label-text-line-height: 1.3125rem,
      label-text-size: 0.875rem,
      label-text-weight: vars.$label-medium-weight,
      selected-state-background-color: utils.with-alpha(vars.$tertiary, 20%),
      selected-state-text-color: vars.$secondary,
    )
  );

  cdk-virtual-scroll-viewport {
    width: 100%;
  }

  .absolute-toggle {
    position: absolute;
    top: 1rem;
    left: 1rem;
    z-index: 1000;
    width: 14.625rem;
    border: 1px solid vars.$primary;
    border-radius: 6px;
    overflow: hidden;
    display: flex;

    .mat-button-toggle {
      flex: 1;
      font-weight: vars.$label-medium-weight;
      text-transform: none;
      transition: all 0.2s ease;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;

      &:not(:first-child) {
        border-left: 1px solid vars.$outline-variant;
      }

      .mat-button-toggle-label-content {
        line-height: 1;
        padding: 0;
      }
    }
  }

  .table {
    background-color: vars.$surface-container-low;
    width: 100%;

    .highlight {
      &:first-child,
      &:nth-child(2) {
        background-color: utils.with-alpha(vars.$secondary, 8%);
      }
    }

    td.type {
      text-transform: capitalize;
    }

    th {
      padding: 0;
      border-bottom: 1px solid vars.$outline-variant;
      background-color: vars.$surface-container-low;

      &:nth-child(2) {
        max-width: 150px;
        min-width: 150px;
        width: 150px;
        text-align: right;
      }
    }

    td {
      border-bottom: none;
    }

    td:first-child,
    td:nth-child(2) {
      background: vars.$surface-container-low;
    }

    td:nth-child(2) {
      padding-left: 0 !important;
      padding-right: 30px;
      max-width: 150px;
    }

    td:not(:first-child):not(:nth-child(2)) {
      background-color: vars.$on-primary;
    }

    tr:first-child td {
      max-width: 24rem;
    }
  }

  .type {
    height: 1.75rem;
    max-width: 24rem;
    white-space: nowrap;
    padding: 0 0.5rem 0 1rem;
  }

  .count {
    height: 1.75rem;
    min-width: 4.25rem;
    max-width: 6rem;
    border-right: 1px solid vars.$outline-variant;
    text-align: right;
  }

  th:first-child,
  th:nth-child(2) {
    vertical-align: bottom;
  }

  th:first-child {
    padding: 4px 12px 4px 16px !important;
  }

  th:nth-child(2) {
    padding: 4px 30px 4px 0 !important;
    max-width: 150px;
  }

  .icon-header {
    .header-column-text {
      max-width: 28px;
      writing-mode: vertical-rl;
      transform: rotate(180deg);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      margin: auto;
      max-height: calc(6rem - 16px);
    }
  }

  .icon-cell {
    .icon {
      margin: auto;
    }
  }
}

::ng-deep {
  hra-bottom-sheet hra-table tr td:first-child {
    color: vars.$secondary !important;
    border-right: 1px solid vars.$outline-variant;
  }
}
