@use 'sass:map';
@use '@angular/material' as mat;
@use '../../../../../../apps/cde-ui/src/styles/constants/palettes' as palettes;

$blue: mat.m2-define-palette(map.get(palettes.$palettes, 'blue'), 600, 500, 700);
$blue-theme: mat.m2-define-light-theme(
  (
    color: (
      primary: $blue,
      accent: $blue,
    ),
  )
);

::ng-deep {
  .celltypes-panel {
    max-width: 21rem;
  }
}

:host {
  @include mat.button-color($blue-theme);

  display: grid;
  grid:
    'cell-types . download'
    'total-cell-types total-cells total-cell-links'
    'table table table' 1fr
    / auto 1fr auto;
  align-items: start;
  row-gap: 0.75rem;
  overflow: hidden;
  padding: 0.75rem 1rem;
  border-width: 0 2px 0px 0px;
  border-style: solid;
  border-color: map.get(map.get(palettes.$palettes, 'blue'), 600);
  $button-text-color: map.get(map.get(palettes.$palettes, 'blue'), 900);
  --mat-table-background-color: white;
  --mdc-checkbox-unselected-icon-color: var(--sys-secondary);
  --mdc-checkbox-selected-icon-color: var(--sys-secondary);
  --mdc-checkbox-selected-checkmark-color: var(--sys-secondary);
  --mdc-checkbox-state-layer-size: 28px;
  --mat-sort-arrow-color: var(--sys-secondary);
  --mat-table-row-item-container-height: 1.75rem;
  --mat-table-row-item-outline-width: 0;
  --mat-table-header-headline-color: var(--mat-sort-arrow-color);
  --mdc-filled-button-container-height: 2rem;
  --mat-table-header-container-height: 2rem;
  --mat-menu-item-label-text-color: var(--sys-primary);

  &:not(:has(.total-cell-links)) {
    grid:
      'cell-types . download'
      'total-cell-types . total-cells'
      'table table table' 1fr
      / auto 1fr auto;
  }

  span.cell-types-label {
    font: var(--sys-label-medium);
    letter-spacing: var(--sys-label-medium-tracking);
    grid-area: cell-types;
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  button.download-csv {
    --mdc-filled-button-label-text-color: #{button-text-color};
    grid-area: download;
    padding: 0.3438rem 0.5rem;

    .mat-icon {
      margin-left: unset;
      margin-right: 0.125rem;
      font-size: 1.25rem;
      height: 1.25rem;
      width: 1.25rem;
    }
  }

  .total-ct-label,
  .total-cells,
  .total-cell-links {
    font: var(--sys-label-small);
    letter-spacing: var(--sys-label-medium-tracking);

    span {
      display: block;
      color: var(--sys-primary);
      font: var(--sys-label-medium);
    }
  }

  .mat-caption,
  .total-ct-label {
    grid-area: total-cell-types;
  }

  .total-cells {
    grid-area: total-cells;
    justify-self: center;
  }

  .total-cell-links {
    grid-area: total-cell-links;
  }

  .table-overflow-container {
    overflow: auto;
    grid-area: table;
    height: 100%;

    table {
      ::ng-deep {
        .mat-mdc-menu-content {
          color: var(--sys-primary);
        }

        thead {
          tr {
            font: var(--sys-label-small);
            .mat-mdc-checkbox {
              .mdc-checkbox__background {
                background-color: white;
              }
            }
          }
          .mat-sort-header-container {
            max-width: 6rem;
            .mat-sort-header-content {
              font: var(--sys-label-small);
              color: var(--sys-secondary);
            }
          }

          .mat-sort-header-arrow {
            opacity: 1 !important;
            transform: none !important;
          }

          tr th:last-child > div {
            --mat-sort-arrow-color: #4b4b5e;
            justify-content: flex-end;
            margin-right: 0.25rem;
            color: var(--sys-primary);
          }
        }

        tbody tr td.mdc-data-table__cell:nth-last-child(-n + 2) {
          text-align: end;
          padding-right: 1.5rem;
          color: var(--sys-primary);
          font: var(--sys-label-small);
        }

        tbody {
          tr,
          td {
            font: var(--sys-label-small);
          }
        }

        tr:has(.anchor) {
          background-color: #e6eaf0;

          td:first-child {
            border-top-left-radius: 0.5rem;
            border-bottom-left-radius: 0.5rem;
            border-top: solid #d5dbe3 0.0625rem;
            border-left: solid #d5dbe3 0.0625rem;
            border-bottom: solid #d5dbe3 0.0625rem;
          }

          td:not(:first-child, :last-child) {
            border-top: solid #d5dbe3 0.0625rem;
            border-bottom: solid #d5dbe3 0.0625rem;
          }

          td:last-child {
            border-top-right-radius: 0.5rem;
            border-bottom-right-radius: 0.5rem;
            border-top: solid #d5dbe3 0.0625rem;
            border-right: solid #d5dbe3 0.0625rem;
            border-bottom: solid #d5dbe3 0.0625rem;
          }
        }

        tr {
          .mat-mdc-checkbox {
            &.mat-mdc-checkbox-checked {
              .mdc-checkbox__background {
                background-color: white;
              }
            }
          }
        }
      }

      tr {
        th:first-child,
        th:last-child {
          padding-left: 0;
        }

        .mat-mdc-checkbox {
          height: 2rem;
          width: 2rem;
          align-items: center;
          justify-content: center;
          display: flex;
        }
      }

      .mat-mdc-header-row {
        & > * {
          padding-bottom: 0.25rem;
          padding-left: 0.5rem;
        }
      }

      .mdc-data-table__cell,
      .mdc-data-table__header-cell {
        padding: 0;
      }
    }
  }
}

::ng-deep {
  .mat-mdc-menu-content button {
    color: var(--sys-primary);
  }

  div.mat-mdc-menu-panel {
    max-width: 308px;
    &.info-sub-menu .mat-mdc-menu-content {
      padding: 1rem 1rem;
      color: var(--sys-primary);
    }
  }
}
