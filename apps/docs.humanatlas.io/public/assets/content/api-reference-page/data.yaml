$schema: ../../../app/schemas/content-page/content-page.schema.json
title: API Reference
subtitle: |
  The Human Reference Atlas (HRA) API provides programmatic access to the data and services of the Common Coordinate Framework (CCF). Whether you're a researcher, developer, or data scientist, you can use the HRA API to explore anatomical structures, spatial relationships, and reference data across various biological domains.

  This page guides you on how to interact with the HRA API using:
  - The **REST API** for direct HTTP requests
  - **Client libraries** for JavaScript, Angular, and Python, enabling seamless integration into your applications

  Use the HRA API to:
  - Query anatomical structures and their spatial relationships
  - Access data schemas, endpoints, and example queries
  - Integrate CCF data into custom tools, visualizations, or workflows

content:
  - component: PageSection
    tagline: Get Started
    anchor: get-started
    level: 2
    content:
      - component: Markdown
        data: |
          You can:
          - Try a quick REST API example using cURL
          - Install and use one of our client libraries for JavaScript, Angular, or Python
          - Explore the full API directory for detailed documentation

      - component: PageSection
        anchor: javascript-client
        level: 3
        tagline: JavaScript Client Library
        content:
          - component: Markdown
            data: |
              The JavaScript client library allows you to interact with the Human Reference Atlas (HRA) API in Node.js or browser environments.

              #### Installation

              Install the package via npm:

          - component: CodeBlock
            language: bash
            code: |
              $  npm install @hra-api/js-client --save

          - component: Markdown
            data: |
              #### Usage

              Here's a basic example of how to use the library:

          - component: CodeBlock
            language: javascript
            code: |
              const HraApiJsClient = require('@hra-api/js-client');

              const api = new HraApiJsClient.DsGraphApi();
              const opts = {
                token: 'your_token_here' // Replace with your authentication token if required
              };

              api.atlasD2k(opts).then(function(data) {
                console.log('API called successfully. Returned data: ' + data);
              }, function(error) {
                console.error(error);
              });

          - component: Button
            label: Learn More
            href: https://www.npmjs.com/package/@hra-api/js-client

      - component: PageSection
        anchor: angular-client
        level: 3
        tagline: Angular Client Library
        content:
          - component: Markdown
            data: |
              The Angular client library provides services and modules to integrate the HRA API into Angular applications.

              #### Installation

              Install the package via npm:

          - component: CodeBlock
            language: bash
            code: |
              npm install @hra-api/ng-client --save

          - component: Markdown
            data: |
              #### Usage

              Import the `HraApiModule` into your Angular module:

          - component: CodeBlock
            language: typescript
            code: |
              import { NgModule } from '@angular/core';
              import { HttpClientModule } from '@angular/common/http';
              import { HraApiModule } from '@hra-api/ng-client';

              @NgModule({
                imports: [
                  HttpClientModule,
                  HraApiModule
                ],
                declarations: [AppComponent],
                bootstrap: [AppComponent]
              })
              export class AppModule {}

          - component: Markdown
            data: |
              To configure the API with custom parameters:

          - component: CodeBlock
            language: typescript
            code: |
              import { HraApiModule, HraApiConfiguration, HraApiConfigurationParameters } from '@hra-api/ng-client';

              export function apiConfigFactory(): HraApiConfiguration {
                const params: HraApiConfigurationParameters = {
                  // set configuration parameters here
                };
                return new HraApiConfiguration(params);
              }

              @NgModule({
                imports: [HraApiModule.forRoot(apiConfigFactory)],
                declarations: [AppComponent],
                bootstrap: [AppComponent]
              })
              export class AppModule {}

          - component: Button
            label: Learn More
            href: https://www.npmjs.com/package/@hra-api/ng-client

      - component: PageSection
        anchor: typescript-client
        level: 3
        tagline: TypeScript Client Library
        content:
          - component: Markdown
            data: |
              The TypeScript client library, `@hra-api/ts-client`, provides a typed interface to interact with the Human Reference Atlas (HRA) API using the Fetch API. It's suitable for environments like Node.js, Webpack, and Browserify.

              #### Installation

              Install the package via npm:

          - component: CodeBlock
            language: bash
            code: |
              npm install @hra-api/ts-client --save

          - component: Markdown
            data: |
              #### Usage

              Here's a basic example of how to use the library:

          - component: CodeBlock
            language: typescript
            code: |
              import { DsGraphApi } from '@hra-api/ts-client';

              const api = new DsGraphApi();
              const opts = {
                token: 'your_token_here' // Replace with your authentication token if required
              };

              api.atlasD2k(opts).then((data) => {
                console.log('API called successfully. Returned data:', data);
              }).catch((error) => {
                console.error(error);
              });

          - component: Button
            label: Learn More
            href: https://www.npmjs.com/package/@hra-api/ts-client

      - component: PageSection
        anchor: python-client
        level: 3
        tagline: Python Client Library
        content:
          - component: Markdown
            data: |
              The Python client library, `hra-api-client`, allows you to interact with the HRA API in Python applications and notebooks.

              #### Installation

              Install the package via pip:

          - component: CodeBlock
            language: bash
            code: |
              pip install hra-api-client

          - component: Markdown
            data: |
              #### Usage

              Here's a basic example of how to use the library:

          - component: CodeBlock
            language: python
            code: |
              from hra_api_client import DsGraphApi

              api = DsGraphApi()
              response = api.atlas_d2k()
              print("API called successfully. Returned data:", response)

          - component: Button
            label: Learn More
            href: https://pypi.org/project/hra-api-client/
