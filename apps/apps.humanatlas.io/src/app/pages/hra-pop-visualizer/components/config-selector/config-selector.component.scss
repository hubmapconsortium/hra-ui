@use 'utils' as utils;
@use 'vars' as vars;
@use '@angular/material' as mat;

.graph-config-layout {
  display: flex;
  gap: 0; 
  align-items: stretch; 
  border-bottom: 0.0625rem solid vars.$outline-variant;
}

.config-column {
  display: flex;
  flex-direction: column;
  flex: 1;
  gap: 0.75rem; 
  padding: 1rem; 
  
  &:not(:last-child) {
    border-right: 0.0625rem solid vars.$outline-variant;
  }
  
  
  &:first-child {
    min-width: 16.25rem; 
    max-width: 35rem; 
    width: 16.875rem; 
  }
  
  &:nth-child(2) {
    width: 16.25rem; 
    gap: 1rem;
  }
}

.column-title {
  @include utils.use-font(title, large);
  margin: 0;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.5rem;

  // Style for the results indicator within the column title
  hra-results-indicator {
    flex-shrink: 0;
    
    // Override any default styling from the results indicator component
    ::ng-deep {
      .results-indicator {
        background-color: transparent;
        border: none;
        padding: 0;
        font-size: 0.75rem;
        font-weight: 400;
        color: vars.$on-surface-variant;
        white-space: nowrap;
        
        // Ensure proper layout for the indicator content
        .indicator-content {
          display: inline-flex;
          align-items: center;
          gap: 0.25rem;
        }
      }
    }
  }
}

.tools-count {
  @include utils.use-font(body, medium);
  margin: 0;
  color: vars.$on-surface-variant;
}

h3 {
  @include utils.use-font(title, medium);
  margin: 0;
}

.datatype-group,
.sort-group,
.organ-group {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.x-axis-group,
.y-axis-group {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  
  .toggle-group {
    border-radius: 0.25rem;
  }
}

.toggle-group {
  background-color: vars.$on-primary;

  @include mat.button-toggle-overrides(
    (
      height: 2rem,
    )
  );

  ::ng-deep .mat-button-toggle {
    flex: 1 1 50%;
    max-width: 50%;
    text-align: center;
    white-space: normal; 
    word-wrap: break-word;
    

    &:only-child {
      flex: 1 1 100%;
      max-width: 100%;
    }
    
    .mat-button-toggle-label-content {
      padding: 0.25rem;
      font-size: 0.875rem;
      line-height: 1.2;
    }
  }
}

.sex-toggle-group {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  width: 100%;
  
  .toggle-group {
    border-radius: 0.25rem; 
  }
}

.annotation-group {
  // Add proper spacing for the annotation tools section
  margin-top: 0.5rem;
}

.annotation-checkbox-column {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.annotation-option {
  padding: 0.25rem 0;
  display: flex;
  align-items: center;
  box-sizing: border-box;
  white-space: nowrap;

  &.unavailable {
    opacity: 0.6;
  }
  
  &:not(:last-child) {
    margin-bottom: 0.5rem;
  }
}

@media (max-width: 1200px) and (min-width: 768px) {
  .graph-config-layout {
    flex-direction: column;
    gap: 2rem;
  }

  .config-column {
    width: 100%;
    
    &:first-child,
    &:nth-child(2) {
      width: 100%;
    }
  }

  .config-column:nth-child(1),
  .config-column:nth-child(2) {
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1.5rem;
    
    > div {
      flex: 1 1 calc(50% - 0.75rem);
      min-width: 15rem;
    }
  }
}

@media (max-width: 767px) {
  .graph-config-layout {
    flex-direction: column;
    gap: 1.5rem;
  }

  .config-column {
    width: 100%;
    gap: 1rem;
    
    // Reset specific column widths for mobile
    &:first-child,
    &:nth-child(2) {
      width: 100%;
    }
  }

  .toggle-group {
    ::ng-deep .mat-button-toggle {
      flex: 1 1 100%;
      max-width: 100%;
      
      &:only-child {
        flex: 1 1 100%;
        max-width: 100%;
      }
    }
  }

  .annotation-checkbox-column {
    gap: 0.5rem;
  }

  .column-title {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.25rem;
    
    hra-results-indicator {
      align-self: flex-end;
    }
  }
}