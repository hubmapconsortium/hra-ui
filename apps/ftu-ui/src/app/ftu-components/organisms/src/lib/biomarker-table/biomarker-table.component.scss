@use '@angular/material' as mat;
@use 'utils';
@use 'vars';

:host {
  display: block;
  position: relative;
  height: 16rem;

  @include mat.table-overrides(
    (
      header-container-height: 6rem,
      header-headline-color: vars.$secondary,
      header-headline-font: vars.$label-small-font,
      header-headline-size: vars.$label-small-size,
      header-headline-weight: vars.$label-small-weight,
      row-item-container-height: 1.75rem,
      row-item-label-text-color: vars.$primary,
      row-item-label-text-font: vars.$label-small-font,
      row-item-label-text-size: vars.$label-small-size,
      row-item-label-text-weight: vars.$label-small-weight,
    )
  );

  @include mat.button-toggle-overrides((
    disabled-state-background-color: vars.$secondary,
    height: 2rem,
    label-text-font: vars.$label-medium-font,
    label-text-line-height: 1.3125rem,
    label-text-size: .875rem,
    label-text-weight: vars.$label-medium-weight,
    selected-state-background-color: utils.with-alpha(vars.$tertiary, 20%),
    selected-state-text-color: vars.$secondary,
    background-color: utils.with-alpha(vars.$secondary, 12%),
  ));

  cdk-virtual-scroll-viewport {
    height: 100%;
  }

  .absolute-toggle {
    position: absolute;
    top: 1rem;
    left: 1rem;
    z-index: 1000;
    width: 14.625rem;
    border: 1px solid vars.$primary;
    border-radius: 6px;
    overflow: hidden;
    display: flex;

    .mat-button-toggle {
      flex: 1;
      border: none;
      font-weight: vars.$label-medium-weight;
      text-transform: none;
      transition: all 0.2s ease;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;

      // &.mat-button-toggle-checked {
      //   // background-color: vars.$primary;
      //   // color: vars.$on-primary;
      //   font-weight: 600;
      // }

      &:not(:first-child) {
        border-left: 1px solid vars.$outline;
      }

      .mat-button-toggle-label-content {
        line-height: 1;
        padding: 0;
      }
    }
  }

  .table {
    background-color: vars.$surface-container-low;

    .highlight {
      background-color: rgba(vars.$primary, 0.1);
    }

    td.type {
      text-transform: capitalize;
    }

    // Column header row styling
    // tr.column-header-row {
    //   th.mat-header-cell {
    //     height: 2rem;
    //     padding: 0 0.5rem;
    //     background-color: vars.$surface-container;
    //     border-bottom: 1px solid vars.$outline;
    //   }
    // }

    // General table header styling
    th {
      // font-weight: 500;
      padding: 0;
      max-width: 2.75rem;
      min-width: 2.75rem;
      border-bottom: 1px solid vars.$outline;
      // overflow: hidden;
      background-color: vars.$surface-container-low;
    }

    // General table cell styling
    td {
      padding: 0 0.5rem;
      border-bottom: none;
    }

    td:not(:first-child):not(:nth-child(2)) {
      background-color: vars.$on-primary;
    }

    // First row special styling
    tr:first-child td {
      max-width: 13.5rem;
    }
  }

  // Type column styling
  .type {
    height: 1.75rem;
    max-width: 13.5rem;
    white-space: nowrap;
    padding-left: 1rem;
    padding-right: .5rem;

    &.highlight {
      font-weight: bold;
      background-color: rgba(vars.$primary, 0.1);
    }
  }

  // Count column styling
  .count {
    height: 1.75rem;
    min-width: 4.25rem;
    max-width: 6rem;
    padding-right: 1rem;
    border-right: 1px solid vars.$outline;
  }

  // First two columns padding
  th:first-child,
  th:nth-child(2) {
    padding: 0 0.5rem !important;
    vertical-align: bottom;
  }

  // Icon header styling
  .icon-header {
    .header-column-text {
      writing-mode: vertical-rl;
      transform: rotate(180deg);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      margin: 0.5rem auto;
      max-height: calc(6rem - 16px);
    }
  }
}

// Row hover effect
.mat-mdc-row:hover .mat-mdc-cell {
  background-color: rgba(vars.$primary, 0.05);
}
