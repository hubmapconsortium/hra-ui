@use '../../../styles/breakpoints' as breakpoints;

:host {
  display: block;
  background: url('../../../assets/backgrounds/create-visualization-page-background.png') no-repeat;
  background-size: 100% 100%;

  .content {
    display: flex;
    flex-direction: column;
    width: 100%;
    margin: 0 auto;
    padding: 4.5rem 26rem 6.5rem 22rem;
    gap: 2rem;

    @include breakpoints.breakpoint('xx-small', 'x-small') {
      padding: 0.5rem 1rem 3rem;
      gap: 1.5rem;
    }

    @include breakpoints.breakpoint('small') {
      padding: 1rem 1.5rem 6.5rem;
    }

    @include breakpoints.breakpoint('medium') {
      padding: 1rem 4.5rem 6.5rem;
    }

    @include breakpoints.breakpoint('large') {
      padding: 2rem 4.5rem 6.5rem;
    }

    @include breakpoints.breakpoint('x-large') {
      padding: 2rem 10rem 8rem;
    }

    @include breakpoints.breakpoint('xx-large') {
      padding: 3rem 14rem 8rem;
    }
  }

  .page-nav {
    .nav {
      display: flex;
      align-items: center;
      height: 2.0625rem;
      margin-bottom: 2rem;
      gap: 1rem;

      @include breakpoints.breakpoint('xx-small', 'x-small') {
        margin-bottom: 0.5rem;
        gap: 0.25rem;
      }

      & > :not(mat-icon) {
        padding: 0.5rem;
      }
    }

    .title {
      margin: 0;
    }
  }

  .card {
    box-shadow: 0 0.3125rem 1rem 0 rgba(32, 30, 61, 0.24);
    border-radius: 1rem;
    padding: 3.5rem 4rem;

    @include breakpoints.breakpoint('xx-small') {
      padding: 1rem;
    }

    @include breakpoints.breakpoint('x-small', 'small') {
      padding: 1.5rem;
    }

    @include breakpoints.breakpoint('medium') {
      padding: 1.5rem 2rem 3rem;
    }

    @include breakpoints.breakpoint('large') {
      padding: 2rem 2.5rem 3rem;
    }

    @include breakpoints.breakpoint('x-large') {
      padding: 3rem 3.5rem 3rem;
    }

    @include breakpoints.breakpoint('x-large', 'xx-large') {
      padding: 3rem 3.5rem 3rem;
    }

    .header {
      display: flex;
      align-items: center;
      margin-bottom: 2rem;
      gap: 1rem;

      @include breakpoints.breakpoint('xx-small', 'x-small') {
        margin-bottom: 1rem;
        gap: 0.5rem;
      }

      .step-number {
        display: flex;
        width: 3.5rem;
        height: 3.5rem;
        line-height: 3.5rem;
        border-radius: 50%;
        justify-content: center;
        align-items: center;

        @include breakpoints.breakpoint('xx-small', 'x-small') {
          width: 2rem;
          height: 2rem;
          line-height: 2rem;
        }
      }

      mat-icon {
        flex-shrink: 0;
      }
    }
  }

  .data-upload {
    display: grid;
    grid:
      'header header header header'
      'subheader-1 subheader-1 divider subheader-2'
      'subheader-required-columns subheader-optional-columns divider use-template'
      'required-columns optional-columns divider .'
      'upload-csv upload-csv divider .'
      'upload-errors upload-errors . .';
    column-gap: 6.375rem;

    @include breakpoints.breakpoint('xx-small', 'small') {
      grid:
        'header'
        'subheader-1'
        'subheader-required-columns'
        'required-columns'
        'subheader-optional-columns'
        'optional-columns'
        'upload-csv'
        'upload-errors'
        'divider'
        'subheader-2'
        'use-template';
    }

    @include breakpoints.breakpoint('x-small', 'medium', 'large', 'x-large', 'xx-large') {
      grid:
        'header header header'
        'subheader-1 subheader-1 subheader-1'
        'subheader-required-columns subheader-optional-columns .'
        'required-columns optional-columns .'
        'upload-csv upload-csv upload-csv'
        'upload-errors upload-errors upload-errors'
        'divider divider divider'
        'subheader-2 subheader-2 subheader-2'
        'use-template use-template use-template'
        / auto auto 1fr;
      column-gap: 6.375rem;
    }

    .header {
      grid-area: header;
    }

    .subheader-1 {
      grid-area: subheader-1;
      margin-bottom: 1.5rem;

      @include breakpoints.breakpoint('xx-small') {
        margin-bottom: 0.75rem;
      }

      @include breakpoints.breakpoint('x-small') {
        margin-bottom: 1rem;
      }
    }

    .subheader-required-columns {
      grid-area: subheader-required-columns;
    }

    .subheader-optional-columns {
      grid-area: subheader-optional-columns;
    }

    .subheader-required-columns,
    .subheader-optional-columns {
      margin-bottom: 0.5rem;

      @include breakpoints.breakpoint('xx-small', 'x-small') {
        margin-bottom: 0;
      }
    }

    .required-columns {
      grid-area: required-columns;
    }

    .optional-columns {
      grid-area: optional-columns;
    }

    .required-columns,
    .optional-columns {
      margin-bottom: 1.5rem;

      @include breakpoints.breakpoint('xx-small') {
        margin-bottom: 0.75rem;
      }

      @include breakpoints.breakpoint('x-small') {
        margin-bottom: 1rem;
      }
    }

    .upload-csv {
      grid-area: upload-csv;
    }

    .divider {
      grid-area: divider;
    }

    .subheader-2 {
      grid-area: subheader-2;
      margin-bottom: 1rem;

      @include breakpoints.breakpoint('xx-small') {
        margin-bottom: 0rem;
      }

      @include breakpoints.breakpoint('x-small') {
        margin-bottom: 0.25rem;
      }
    }
  }

  .anchor-selection {
    .header {
      margin-bottom: 0.5rem;
    }

    .select-form {
      margin: 1.5rem 0;
      max-width: 28rem;

      @include breakpoints.breakpoint('xx-small', 'x-small') {
        margin: 1.25rem 0;
      }
    }
  }

  .metadata {
    display: grid;
    grid: 'header header header';
    column-gap: 5rem;

    @include breakpoints.breakpoint('xx-small', 'x-small', 'small', 'medium') {
      grid: 'header';
    }

    @include breakpoints.breakpoint('large', 'x-large', 'xx-large') {
      grid: 'header header';
      column-gap: 2.5rem;
    }

    .header {
      grid-area: header;
      margin-bottom: 2rem;

      @include breakpoints.breakpoint('xx-small', 'x-small') {
        margin-bottom: 0.5rem;
      }
    }

    mat-form-field {
      margin: 1.5rem 0;
    }
  }

  .color-config {
    @include breakpoints.breakpoint('xxx-large') {
      display: grid;
      grid:
        'header header header .'
        'toggle toggle . .'
        'upload-colormap divider template .'
        'upload-colormap divider use-template .'
        'upload-errors upload-errors . .'
        / auto auto auto 1fr;
      column-gap: 6.5rem;

      mat-button-toggle-group {
        width: fit-content;
      }
    }

    mat-button-toggle-group {
      grid-area: toggle;
      --mat-standard-button-toggle-label-text-size: 14px;
      --mat-standard-button-toggle-height: 40px;

      ::ng-deep .mat-button-toggle-label-content {
        padding: 0 1.5rem;
      }

      @include breakpoints.breakpoint('xx-small', 'x-small') {
        width: 100%;
        max-width: 23.75rem;
      }

      @include breakpoints.breakpoint('xx-small', 'x-small', 'small') {
        --mat-standard-button-toggle-label-text-size: 11px;
      }
    }

    .divider {
      grid-area: divider;
    }

    .upload-colormap {
      grid-area: upload-colormap;
      margin-top: 1rem;
    }

    .template {
      grid-area: template;
      margin: 0;
    }
  }

  .data-upload,
  .color-config {
    .use-template {
      grid-area: use-template;
      width: fit-content;
      height: 2.6875rem;

      @include breakpoints.breakpoint('xx-small', 'x-small') {
        height: 2rem;
      }
    }
  }

  h3 {
    margin-bottom: 0.75rem;
  }

  h4 {
    margin-bottom: 0;
  }

  mat-form-field {
    width: 100%;
    max-width: 23.75rem;
    box-shadow: 0px 0.3125rem 1rem 0px #201e3d3d;
    border-radius: 1rem;

    --mat-form-field-container-height: 3.625rem;
    --mat-form-field-filled-with-label-container-padding-top: 1.5rem;
    --mat-form-field-filled-with-label-container-padding-bottom: 0;

    @include breakpoints.breakpoint('xx-small', 'x-small') {
      --mat-form-field-container-height: 2.5rem;
      --mat-form-field-filled-with-label-container-padding-top: 1rem;
      --mat-form-field-filled-with-label-container-padding-bottom: 0;
    }

    ::ng-deep .mat-mdc-text-field-wrapper {
      border-radius: 1rem;
    }

    ::ng-deep .mat-mdc-form-field-subscript-wrapper {
      display: none;
    }

    ::ng-deep .mdc-line-ripple {
      &::before,
      &::after {
        display: none;
      }
    }
  }

  .mat-divider-horizontal {
    margin: 2rem 0;

    @include breakpoints.breakpoint('xx-small') {
      margin: 1rem 0;
    }

    @include breakpoints.breakpoint('x-small') {
      margin: 1.5rem 0;
    }
  }

  .upload-errors {
    display: flex;
    flex-direction: column;
    grid-area: upload-errors;
    margin-top: 1.5rem;
  }
}

::ng-deep .info-tooltip-panel {
  display: flex;
  flex-direction: column;
  max-width: min(calc(100vw - 1rem), 40rem);
  padding: 1rem;
  box-shadow: 0px 0.3125rem 1rem 0px #201e3d3d;
  border-radius: 0.5rem;
}

::ng-deep .select-panel {
  border-radius: 0.5rem !important;
  box-shadow: 0px 0.3125rem 1rem 0px #201e3d3d !important;
}
