(self.webpackChunkhra_ui=self.webpackChunkhra_ui||[]).push([[815],{"./libs/components/atoms/src/lib/label-box/label-box.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: flex;\n  align-items: center;\n  padding: 0.75rem 2rem;\n  background: rgba(var(--palette-primary-100));\n  border-bottom: 1px solid rgba(var(--light-dividers));\n  font-size: 1rem;\n}\n:host .filler {\n  flex-grow: 1;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./libs/components/atoms/src/lib/label-box/label-box.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,WithIconAtEnd:()=>WithIconAtEnd,__namedExportsOrder:()=>__namedExportsOrder,default:()=>label_box_component_stories});var core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),dom_tokens_CNpAxedO=__webpack_require__("./node_modules/@angular/common/fesm2022/dom_tokens-CNpAxedO.mjs"),Subscription=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subscription.js"),take=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/take.js"),module_Bnny_XF2=__webpack_require__("./node_modules/@angular/common/fesm2022/module-Bnny_XF2.mjs"),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),throwError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/throwError.js"),forkJoin=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/forkJoin.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),catchError=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/catchError.js"),finalize=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/finalize.js"),share=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/share.js");let policy;function trustedHTMLFromString(html){return function getPolicy(){if(void 0===policy&&(policy=null,"undefined"!=typeof window)){const ttWindow=window;void 0!==ttWindow.trustedTypes&&(policy=ttWindow.trustedTypes.createPolicy("angular#components",{createHTML:s=>s}))}return policy}()?.createHTML(html)||html}function getMatIconNameNotFoundError(iconName){return Error(`Unable to find icon with the name "${iconName}"`)}function getMatIconFailedToSanitizeUrlError(url){return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${url}".`)}function getMatIconFailedToSanitizeLiteralError(literal){return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${literal}".`)}class SvgIconConfig{url;svgText;options;svgElement;constructor(url,svgText,options){this.url=url,this.svgText=svgText,this.options=options}}class MatIconRegistry{_httpClient;_sanitizer;_errorHandler;_document;_svgIconConfigs=new Map;_iconSetConfigs=new Map;_cachedIconsByUrl=new Map;_inProgressUrlFetches=new Map;_fontCssClassesByAlias=new Map;_resolvers=[];_defaultFontSetClass=["material-icons","mat-ligature-font"];constructor(_httpClient,_sanitizer,document,_errorHandler){this._httpClient=_httpClient,this._sanitizer=_sanitizer,this._errorHandler=_errorHandler,this._document=document}addSvgIcon(iconName,url,options){return this.addSvgIconInNamespace("",iconName,url,options)}addSvgIconLiteral(iconName,literal,options){return this.addSvgIconLiteralInNamespace("",iconName,literal,options)}addSvgIconInNamespace(namespace,iconName,url,options){return this._addSvgIconConfig(namespace,iconName,new SvgIconConfig(url,null,options))}addSvgIconResolver(resolver){return this._resolvers.push(resolver),this}addSvgIconLiteralInNamespace(namespace,iconName,literal,options){const cleanLiteral=this._sanitizer.sanitize(core.SecurityContext.HTML,literal);if(!cleanLiteral)throw getMatIconFailedToSanitizeLiteralError(literal);const trustedLiteral=trustedHTMLFromString(cleanLiteral);return this._addSvgIconConfig(namespace,iconName,new SvgIconConfig("",trustedLiteral,options))}addSvgIconSet(url,options){return this.addSvgIconSetInNamespace("",url,options)}addSvgIconSetLiteral(literal,options){return this.addSvgIconSetLiteralInNamespace("",literal,options)}addSvgIconSetInNamespace(namespace,url,options){return this._addSvgIconSetConfig(namespace,new SvgIconConfig(url,null,options))}addSvgIconSetLiteralInNamespace(namespace,literal,options){const cleanLiteral=this._sanitizer.sanitize(core.SecurityContext.HTML,literal);if(!cleanLiteral)throw getMatIconFailedToSanitizeLiteralError(literal);const trustedLiteral=trustedHTMLFromString(cleanLiteral);return this._addSvgIconSetConfig(namespace,new SvgIconConfig("",trustedLiteral,options))}registerFontClassAlias(alias,classNames=alias){return this._fontCssClassesByAlias.set(alias,classNames),this}classNameForFontAlias(alias){return this._fontCssClassesByAlias.get(alias)||alias}setDefaultFontSetClass(...classNames){return this._defaultFontSetClass=classNames,this}getDefaultFontSetClass(){return this._defaultFontSetClass}getSvgIconFromUrl(safeUrl){const url=this._sanitizer.sanitize(core.SecurityContext.RESOURCE_URL,safeUrl);if(!url)throw getMatIconFailedToSanitizeUrlError(safeUrl);const cachedIcon=this._cachedIconsByUrl.get(url);return cachedIcon?(0,of.of)(cloneSvg(cachedIcon)):this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl,null)).pipe((0,tap.M)((svg=>this._cachedIconsByUrl.set(url,svg))),(0,map.T)((svg=>cloneSvg(svg))))}getNamedSvgIcon(name,namespace=""){const key=iconKey(namespace,name);let config=this._svgIconConfigs.get(key);if(config)return this._getSvgFromConfig(config);if(config=this._getIconConfigFromResolvers(namespace,name),config)return this._svgIconConfigs.set(key,config),this._getSvgFromConfig(config);const iconSetConfigs=this._iconSetConfigs.get(namespace);return iconSetConfigs?this._getSvgFromIconSetConfigs(name,iconSetConfigs):(0,throwError.$)(getMatIconNameNotFoundError(key))}ngOnDestroy(){this._resolvers=[],this._svgIconConfigs.clear(),this._iconSetConfigs.clear(),this._cachedIconsByUrl.clear()}_getSvgFromConfig(config){return config.svgText?(0,of.of)(cloneSvg(this._svgElementFromConfig(config))):this._loadSvgIconFromConfig(config).pipe((0,map.T)((svg=>cloneSvg(svg))))}_getSvgFromIconSetConfigs(name,iconSetConfigs){const namedIcon=this._extractIconWithNameFromAnySet(name,iconSetConfigs);if(namedIcon)return(0,of.of)(namedIcon);const iconSetFetchRequests=iconSetConfigs.filter((iconSetConfig=>!iconSetConfig.svgText)).map((iconSetConfig=>this._loadSvgIconSetFromConfig(iconSetConfig).pipe((0,catchError.W)((err=>{const errorMessage=`Loading icon set URL: ${this._sanitizer.sanitize(core.SecurityContext.RESOURCE_URL,iconSetConfig.url)} failed: ${err.message}`;return this._errorHandler.handleError(new Error(errorMessage)),(0,of.of)(null)})))));return(0,forkJoin.p)(iconSetFetchRequests).pipe((0,map.T)((()=>{const foundIcon=this._extractIconWithNameFromAnySet(name,iconSetConfigs);if(!foundIcon)throw getMatIconNameNotFoundError(name);return foundIcon})))}_extractIconWithNameFromAnySet(iconName,iconSetConfigs){for(let i=iconSetConfigs.length-1;i>=0;i--){const config=iconSetConfigs[i];if(config.svgText&&config.svgText.toString().indexOf(iconName)>-1){const svg=this._svgElementFromConfig(config),foundIcon=this._extractSvgIconFromSet(svg,iconName,config.options);if(foundIcon)return foundIcon}}return null}_loadSvgIconFromConfig(config){return this._fetchIcon(config).pipe((0,tap.M)((svgText=>config.svgText=svgText)),(0,map.T)((()=>this._svgElementFromConfig(config))))}_loadSvgIconSetFromConfig(config){return config.svgText?(0,of.of)(null):this._fetchIcon(config).pipe((0,tap.M)((svgText=>config.svgText=svgText)))}_extractSvgIconFromSet(iconSet,iconName,options){const iconSource=iconSet.querySelector(`[id="${iconName}"]`);if(!iconSource)return null;const iconElement=iconSource.cloneNode(!0);if(iconElement.removeAttribute("id"),"svg"===iconElement.nodeName.toLowerCase())return this._setSvgAttributes(iconElement,options);if("symbol"===iconElement.nodeName.toLowerCase())return this._setSvgAttributes(this._toSvgElement(iconElement),options);const svg=this._svgElementFromString(trustedHTMLFromString("<svg></svg>"));return svg.appendChild(iconElement),this._setSvgAttributes(svg,options)}_svgElementFromString(str){const div=this._document.createElement("DIV");div.innerHTML=str;const svg=div.querySelector("svg");if(!svg)throw Error("<svg> tag not found");return svg}_toSvgElement(element){const svg=this._svgElementFromString(trustedHTMLFromString("<svg></svg>")),attributes=element.attributes;for(let i=0;i<attributes.length;i++){const{name,value}=attributes[i];"id"!==name&&svg.setAttribute(name,value)}for(let i=0;i<element.childNodes.length;i++)element.childNodes[i].nodeType===this._document.ELEMENT_NODE&&svg.appendChild(element.childNodes[i].cloneNode(!0));return svg}_setSvgAttributes(svg,options){return svg.setAttribute("fit",""),svg.setAttribute("height","100%"),svg.setAttribute("width","100%"),svg.setAttribute("preserveAspectRatio","xMidYMid meet"),svg.setAttribute("focusable","false"),options&&options.viewBox&&svg.setAttribute("viewBox",options.viewBox),svg}_fetchIcon(iconConfig){const{url:safeUrl,options}=iconConfig,withCredentials=options?.withCredentials??!1;if(!this._httpClient)throw function getMatIconNoHttpProviderError(){return Error("Could not find HttpClient for use with Angular Material icons. Please add provideHttpClient() to your providers.")}();if(null==safeUrl)throw Error(`Cannot fetch icon from URL "${safeUrl}".`);const url=this._sanitizer.sanitize(core.SecurityContext.RESOURCE_URL,safeUrl);if(!url)throw getMatIconFailedToSanitizeUrlError(safeUrl);const inProgressFetch=this._inProgressUrlFetches.get(url);if(inProgressFetch)return inProgressFetch;const req=this._httpClient.get(url,{responseType:"text",withCredentials}).pipe((0,map.T)((svg=>trustedHTMLFromString(svg))),(0,finalize.j)((()=>this._inProgressUrlFetches.delete(url))),(0,share.u)());return this._inProgressUrlFetches.set(url,req),req}_addSvgIconConfig(namespace,iconName,config){return this._svgIconConfigs.set(iconKey(namespace,iconName),config),this}_addSvgIconSetConfig(namespace,config){const configNamespace=this._iconSetConfigs.get(namespace);return configNamespace?configNamespace.push(config):this._iconSetConfigs.set(namespace,[config]),this}_svgElementFromConfig(config){if(!config.svgElement){const svg=this._svgElementFromString(config.svgText);this._setSvgAttributes(svg,config.options),config.svgElement=svg}return config.svgElement}_getIconConfigFromResolvers(namespace,name){for(let i=0;i<this._resolvers.length;i++){const result=this._resolvers[i](name,namespace);if(result)return(value=result).url&&value.options?new SvgIconConfig(result.url,null,result.options):new SvgIconConfig(result,null)}var value}static ɵfac=function MatIconRegistry_Factory(__ngFactoryType__){return new(__ngFactoryType__||MatIconRegistry)(core["ɵɵinject"](module_Bnny_XF2.a,8),core["ɵɵinject"](platform_browser.DomSanitizer),core["ɵɵinject"](dom_tokens_CNpAxedO.D,8),core["ɵɵinject"](core.ErrorHandler))};static ɵprov=core["ɵɵdefineInjectable"]({token:MatIconRegistry,factory:MatIconRegistry.ɵfac,providedIn:"root"})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](MatIconRegistry,[{type:core.Injectable,args:[{providedIn:"root"}]}],(()=>[{type:module_Bnny_XF2.a,decorators:[{type:core.Optional}]},{type:platform_browser.DomSanitizer},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[dom_tokens_CNpAxedO.D]}]},{type:core.ErrorHandler}]),null);new core.Optional,new core.SkipSelf,new core.Optional,module_Bnny_XF2.a,platform_browser.DomSanitizer,core.ErrorHandler,new core.Optional,dom_tokens_CNpAxedO.D;function cloneSvg(svg){return svg.cloneNode(!0)}function iconKey(namespace,name){return namespace+":"+name}var common_module_5a9c16bb=__webpack_require__("./node_modules/@angular/material/fesm2022/common-module-5a9c16bb.mjs");const _c0=["*"],MAT_ICON_DEFAULT_OPTIONS=new core.InjectionToken("MAT_ICON_DEFAULT_OPTIONS"),MAT_ICON_LOCATION=new core.InjectionToken("mat-icon-location",{providedIn:"root",factory:function MAT_ICON_LOCATION_FACTORY(){const _document=(0,core.inject)(dom_tokens_CNpAxedO.D),_location=_document?_document.location:null;return{getPathname:()=>_location?_location.pathname+_location.search:""}}});const funcIriAttributes=["clip-path","color-profile","src","cursor","fill","filter","marker","marker-start","marker-mid","marker-end","mask","stroke"],funcIriAttributeSelector=funcIriAttributes.map((attr=>`[${attr}]`)).join(", "),funcIriPattern=/^url\(['"]?#(.*?)['"]?\)$/;class MatIcon{_elementRef=(0,core.inject)(core.ElementRef);_iconRegistry=(0,core.inject)(MatIconRegistry);_location=(0,core.inject)(MAT_ICON_LOCATION);_errorHandler=(0,core.inject)(core.ErrorHandler);_defaultColor;get color(){return this._color||this._defaultColor}set color(value){this._color=value}_color;inline=!1;get svgIcon(){return this._svgIcon}set svgIcon(value){value!==this._svgIcon&&(value?this._updateSvgIcon(value):this._svgIcon&&this._clearSvgElement(),this._svgIcon=value)}_svgIcon;get fontSet(){return this._fontSet}set fontSet(value){const newValue=this._cleanupFontValue(value);newValue!==this._fontSet&&(this._fontSet=newValue,this._updateFontIconClasses())}_fontSet;get fontIcon(){return this._fontIcon}set fontIcon(value){const newValue=this._cleanupFontValue(value);newValue!==this._fontIcon&&(this._fontIcon=newValue,this._updateFontIconClasses())}_fontIcon;_previousFontSetClass=[];_previousFontIconClass;_svgName;_svgNamespace;_previousPath;_elementsWithExternalReferences;_currentIconFetch=Subscription.yU.EMPTY;constructor(){const ariaHidden=(0,core.inject)(new core.HostAttributeToken("aria-hidden"),{optional:!0}),defaults=(0,core.inject)(MAT_ICON_DEFAULT_OPTIONS,{optional:!0});defaults&&(defaults.color&&(this.color=this._defaultColor=defaults.color),defaults.fontSet&&(this.fontSet=defaults.fontSet)),ariaHidden||this._elementRef.nativeElement.setAttribute("aria-hidden","true")}_splitIconName(iconName){if(!iconName)return["",""];const parts=iconName.split(":");switch(parts.length){case 1:return["",parts[0]];case 2:return parts;default:throw Error(`Invalid icon name: "${iconName}"`)}}ngOnInit(){this._updateFontIconClasses()}ngAfterViewChecked(){const cachedElements=this._elementsWithExternalReferences;if(cachedElements&&cachedElements.size){const newPath=this._location.getPathname();newPath!==this._previousPath&&(this._previousPath=newPath,this._prependPathToReferences(newPath))}}ngOnDestroy(){this._currentIconFetch.unsubscribe(),this._elementsWithExternalReferences&&this._elementsWithExternalReferences.clear()}_usingFontIcon(){return!this.svgIcon}_setSvgElement(svg){this._clearSvgElement();const path=this._location.getPathname();this._previousPath=path,this._cacheChildrenWithExternalReferences(svg),this._prependPathToReferences(path),this._elementRef.nativeElement.appendChild(svg)}_clearSvgElement(){const layoutElement=this._elementRef.nativeElement;let childCount=layoutElement.childNodes.length;for(this._elementsWithExternalReferences&&this._elementsWithExternalReferences.clear();childCount--;){const child=layoutElement.childNodes[childCount];1===child.nodeType&&"svg"!==child.nodeName.toLowerCase()||child.remove()}}_updateFontIconClasses(){if(!this._usingFontIcon())return;const elem=this._elementRef.nativeElement,fontSetClasses=(this.fontSet?this._iconRegistry.classNameForFontAlias(this.fontSet).split(/ +/):this._iconRegistry.getDefaultFontSetClass()).filter((className=>className.length>0));this._previousFontSetClass.forEach((className=>elem.classList.remove(className))),fontSetClasses.forEach((className=>elem.classList.add(className))),this._previousFontSetClass=fontSetClasses,this.fontIcon===this._previousFontIconClass||fontSetClasses.includes("mat-ligature-font")||(this._previousFontIconClass&&elem.classList.remove(this._previousFontIconClass),this.fontIcon&&elem.classList.add(this.fontIcon),this._previousFontIconClass=this.fontIcon)}_cleanupFontValue(value){return"string"==typeof value?value.trim().split(" ")[0]:value}_prependPathToReferences(path){const elements=this._elementsWithExternalReferences;elements&&elements.forEach(((attrs,element)=>{attrs.forEach((attr=>{element.setAttribute(attr.name,`url('${path}#${attr.value}')`)}))}))}_cacheChildrenWithExternalReferences(element){const elementsWithFuncIri=element.querySelectorAll(funcIriAttributeSelector),elements=this._elementsWithExternalReferences=this._elementsWithExternalReferences||new Map;for(let i=0;i<elementsWithFuncIri.length;i++)funcIriAttributes.forEach((attr=>{const elementWithReference=elementsWithFuncIri[i],value=elementWithReference.getAttribute(attr),match=value?value.match(funcIriPattern):null;if(match){let attributes=elements.get(elementWithReference);attributes||(attributes=[],elements.set(elementWithReference,attributes)),attributes.push({name:attr,value:match[1]})}}))}_updateSvgIcon(rawName){if(this._svgNamespace=null,this._svgName=null,this._currentIconFetch.unsubscribe(),rawName){const[namespace,iconName]=this._splitIconName(rawName);namespace&&(this._svgNamespace=namespace),iconName&&(this._svgName=iconName),this._currentIconFetch=this._iconRegistry.getNamedSvgIcon(iconName,namespace).pipe((0,take.s)(1)).subscribe((svg=>this._setSvgElement(svg)),(err=>{const errorMessage=`Error retrieving icon ${namespace}:${iconName}! ${err.message}`;this._errorHandler.handleError(new Error(errorMessage))}))}}static ɵfac=function MatIcon_Factory(__ngFactoryType__){return new(__ngFactoryType__||MatIcon)};static ɵcmp=core["ɵɵdefineComponent"]({type:MatIcon,selectors:[["mat-icon"]],hostAttrs:["role","img",1,"mat-icon","notranslate"],hostVars:10,hostBindings:function MatIcon_HostBindings(rf,ctx){2&rf&&(core["ɵɵattribute"]("data-mat-icon-type",ctx._usingFontIcon()?"font":"svg")("data-mat-icon-name",ctx._svgName||ctx.fontIcon)("data-mat-icon-namespace",ctx._svgNamespace||ctx.fontSet)("fontIcon",ctx._usingFontIcon()?ctx.fontIcon:null),core["ɵɵclassMap"](ctx.color?"mat-"+ctx.color:""),core["ɵɵclassProp"]("mat-icon-inline",ctx.inline)("mat-icon-no-color","primary"!==ctx.color&&"accent"!==ctx.color&&"warn"!==ctx.color))},inputs:{color:"color",inline:[2,"inline","inline",core.booleanAttribute],svgIcon:"svgIcon",fontSet:"fontSet",fontIcon:"fontIcon"},exportAs:["matIcon"],ngContentSelectors:_c0,decls:1,vars:0,template:function MatIcon_Template(rf,ctx){1&rf&&(core["ɵɵprojectionDef"](),core["ɵɵprojection"](0))},styles:["mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color, inherit)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}"],encapsulation:2,changeDetection:0})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](MatIcon,[{type:core.Component,args:[{template:"<ng-content></ng-content>",selector:"mat-icon",exportAs:"matIcon",host:{role:"img",class:"mat-icon notranslate","[class]":'color ? "mat-" + color : ""',"[attr.data-mat-icon-type]":'_usingFontIcon() ? "font" : "svg"',"[attr.data-mat-icon-name]":"_svgName || fontIcon","[attr.data-mat-icon-namespace]":"_svgNamespace || fontSet","[attr.fontIcon]":"_usingFontIcon() ? fontIcon : null","[class.mat-icon-inline]":"inline","[class.mat-icon-no-color]":'color !== "primary" && color !== "accent" && color !== "warn"'},encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,styles:["mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color, inherit)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}"]}]}],(()=>[]),{color:[{type:core.Input}],inline:[{type:core.Input,args:[{transform:core.booleanAttribute}]}],svgIcon:[{type:core.Input}],fontSet:[{type:core.Input}],fontIcon:[{type:core.Input}]});class MatIconModule{static ɵfac=function MatIconModule_Factory(__ngFactoryType__){return new(__ngFactoryType__||MatIconModule)};static ɵmod=core["ɵɵdefineNgModule"]({type:MatIconModule,imports:[common_module_5a9c16bb.M,MatIcon],exports:[MatIcon,common_module_5a9c16bb.M]});static ɵinj=core["ɵɵdefineInjector"]({imports:[common_module_5a9c16bb.M,common_module_5a9c16bb.M]})}("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](MatIconModule,[{type:core.NgModule,args:[{imports:[common_module_5a9c16bb.M,MatIcon],exports:[MatIcon,common_module_5a9c16bb.M]}]}],null,null);var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var label_box_componentngResource=__webpack_require__("./libs/components/atoms/src/lib/label-box/label-box.component.scss?ngResource"),label_box_componentngResource_default=__webpack_require__.n(label_box_componentngResource),common_module_D8YipLWl=__webpack_require__("./node_modules/@angular/common/fesm2022/common_module-D8YipLWl.mjs");let LabelBoxComponent=class LabelBoxComponent{};LabelBoxComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"hra-label-box",imports:[common_module_D8YipLWl.D],template:'<ng-content></ng-content>\n\n<div class="filler"></div>\n\n<ng-content select=".end"></ng-content>\n',changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[label_box_componentngResource_default()]})],LabelBoxComponent);const label_box_component_stories={title:"LabelBoxComponent",component:LabelBoxComponent,decorators:[(0,dist.moduleMetadata)({imports:[MatIconModule]})]},Template=(content="")=>args=>({props:args,template:`\n    <hra-label-box>\n      ${content}\n    </hra-label-box>\n  `,styles:["\n      hra-label-box {\n        max-width: 400px;\n      }\n    "]}),Primary=Template("FTU Library"),WithIconAtEnd=Template('\n  Percentage of Cells in FTU\n  <mat-icon class="end">info_outline</mat-icon>\n'),__namedExportsOrder=["Primary","WithIconAtEnd"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"Template('FTU Library')",...Primary.parameters?.docs?.source}}},WithIconAtEnd.parameters={...WithIconAtEnd.parameters,docs:{...WithIconAtEnd.parameters?.docs,source:{originalSource:'Template(`\n  Percentage of Cells in FTU\n  <mat-icon class="end">info_outline</mat-icon>\n`)',...WithIconAtEnd.parameters?.docs?.source}}}}}]);