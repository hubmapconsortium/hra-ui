(self.webpackChunkhra_ui=self.webpackChunkhra_ui||[]).push([[792],{"./libs/components/behavioral lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/libs\\/components\\/behavioral(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$":module=>{function webpackEmptyAsyncContext(req){return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}))}webpackEmptyAsyncContext.keys=()=>[],webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id="./libs/components/behavioral lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/libs\\/components\\/behavioral(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$",module.exports=webpackEmptyAsyncContext},"./libs/components/behavioral lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/libs\\/components\\/behavioral(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./src/lib/biomarker-details/biomarker-details.component.stories":["./libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.stories.ts",115,687,31,502,19,327,862,823,133,996,715],"./src/lib/biomarker-details/biomarker-details.component.stories.ts":["./libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.stories.ts",115,687,31,502,19,327,862,823,133,996,715],"./src/lib/contact-behavior/contact-behavior.component.stories":["./libs/components/behavioral/src/lib/contact-behavior/contact-behavior.component.stories.ts",115,687,31,502,19,823,133,551],"./src/lib/contact-behavior/contact-behavior.component.stories.ts":["./libs/components/behavioral/src/lib/contact-behavior/contact-behavior.component.stories.ts",115,687,31,502,19,823,133,551],"./src/lib/footer-behavior/footer-behavior.component.stories":["./libs/components/behavioral/src/lib/footer-behavior/footer-behavior.component.stories.ts",115,687,31,502,19,327,795,823,133,811],"./src/lib/footer-behavior/footer-behavior.component.stories.ts":["./libs/components/behavioral/src/lib/footer-behavior/footer-behavior.component.stories.ts",115,687,31,502,19,327,795,823,133,811],"./src/lib/header-behavior/header-behavior.component.stories":["./libs/components/behavioral/src/lib/header-behavior/header-behavior.component.stories.ts",115,687,31,502,19,823,133,835],"./src/lib/header-behavior/header-behavior.component.stories.ts":["./libs/components/behavioral/src/lib/header-behavior/header-behavior.component.stories.ts",115,687,31,502,19,823,133,835],"./src/lib/hra-landing-page-intro-wc-behaviour/landing-page-content.component.stories":["./libs/components/behavioral/src/lib/hra-landing-page-intro-wc-behaviour/landing-page-content.component.stories.ts",823,803],"./src/lib/hra-landing-page-intro-wc-behaviour/landing-page-content.component.stories.ts":["./libs/components/behavioral/src/lib/hra-landing-page-intro-wc-behaviour/landing-page-content.component.stories.ts",823,803],"./src/lib/landing-page-content/landing-page-content.component.stories":["./libs/components/behavioral/src/lib/landing-page-content/landing-page-content.component.stories.ts",115,687,823,519],"./src/lib/landing-page-content/landing-page-content.component.stories.ts":["./libs/components/behavioral/src/lib/landing-page-content/landing-page-content.component.stories.ts",115,687,823,519],"./src/lib/medical-illustration-behavior/medical-illustration-behavior.component.stories":["./libs/components/behavioral/src/lib/medical-illustration-behavior/medical-illustration-behavior.component.stories.ts",115,31,502,171,996,535],"./src/lib/medical-illustration-behavior/medical-illustration-behavior.component.stories.ts":["./libs/components/behavioral/src/lib/medical-illustration-behavior/medical-illustration-behavior.component.stories.ts",115,31,502,171,996,535],"./src/lib/tissue-library-behavior/tissue-library-behavior.component.stories":["./libs/components/behavioral/src/lib/tissue-library-behavior/tissue-library-behavior.component.stories.ts",115,687,31,327,824,996,63],"./src/lib/tissue-library-behavior/tissue-library-behavior.component.stories.ts":["./libs/components/behavioral/src/lib/tissue-library-behavior/tissue-library-behavior.component.stories.ts",115,687,31,327,824,996,63]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./libs/components/behavioral lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/libs\\/components\\/behavioral(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$",module.exports=webpackAsyncContext},"./libs/components/behavioral/.storybook/preview.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{argTypesEnhancers:()=>argTypesEnhancers,decorators:()=>decorators,parameters:()=>parameters});var angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js");__webpack_require__("./node_modules/zone.js/fesm2015/zone.js");const documentation_namespaceObject=JSON.parse('{"pipes":[],"interfaces":[],"injectables":[],"guards":[],"interceptors":[],"classes":[],"directives":[],"components":[{"name":"BiomarkerDetailsComponent","id":"component-BiomarkerDetailsComponent-22cdd90ab131f5751c3b7c835dc675a11b8c61af6077063d643338cd560ed8a5817c06c10699f237099f550704777ee1445460479377a0b426746faabdfdfa20","file":"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ftu-biomarker-details","styleUrls":["./biomarker-details.component.scss"],"styles":[],"templateUrl":["./biomarker-details.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"collaborateText","defaultValue":"\'Collaborate with the HRA Team\'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"<p>button text of empty biomarker component.</p>\\n","line":152,"rawdescription":"\\n\\nbutton text of empty biomarker component.\\n","modifierKind":[148]},{"name":"dialog","defaultValue":"inject(MatDialog)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>A dialog box which shows contact modal after clicking on contact</p>\\n","line":164,"rawdescription":"\\nA dialog box which shows contact modal after clicking on contact","modifierKind":[123,148]},{"name":"ga","defaultValue":"inject(GoogleAnalyticsService)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Google analytics tracking service</p>\\n","line":167,"rawdescription":"\\nGoogle analytics tracking service","modifierKind":[123,148]},{"name":"getTabs","defaultValue":"selectSnapshot(CellSummarySelectors.aggregates)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Table tabs</p>\\n","line":70,"rawdescription":"\\nTable tabs","modifierKind":[148]},{"name":"gradientHoverInfo","defaultValue":"selectQuerySnapshot(RR.anyText, Ids.GradientLegendInfo)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Info to be shown on the tooltip for Gradient Legend</p>\\n","line":73,"rawdescription":"\\nInfo to be shown on the tooltip for Gradient Legend","modifierKind":[148]},{"name":"gradients","defaultValue":"selectQuerySnapshot(RR.field, Ids.GradientLegend, RTypes.Gradient, \'points\' as const, [])<\\n    GradientPoint[]\\n  >","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Gradient colors along with their stop points</p>\\n","line":82,"rawdescription":"\\nGradient colors along with their stop points","modifierKind":[148]},{"name":"highlightCell","defaultValue":"dispatch(IllustratorActions.HighlightCellType)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Action to highlight a cell type</p>\\n","line":109,"rawdescription":"\\nAction to highlight a cell type","modifierKind":[148]},{"name":"illustrationIds_","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","indexKey":"","optional":false,"description":"<p>Illustration ids reference</p>\\n","line":174,"rawdescription":"\\nIllustration ids reference","modifierKind":[123]},{"name":"iri","defaultValue":"selectSnapshot(ActiveFtuSelectors.iri)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Iri  of medical illustration behavior component</p>\\n","line":95,"rawdescription":"\\n\\nIri  of medical illustration behavior component\\n","modifierKind":[148]},{"name":"isTableFullScreen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Indicates if the table is fully shown, defaults to false</p>\\n","line":79,"rawdescription":"\\nIndicates if the table is fully shown, defaults to false"},{"name":"mapping","defaultValue":"selectSnapshot(IllustratorSelectors.mapping)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Illustration mapping data</p>\\n","line":106,"rawdescription":"\\nIllustration mapping data","modifierKind":[148]},{"name":"mapping_","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IllustrationMappingItem[]","indexKey":"","optional":false,"description":"<p>Mapping items reference</p>\\n","line":172,"rawdescription":"\\nMapping items reference","modifierKind":[123]},{"name":"message","defaultValue":"`We currently do not have cell type data for this biomarker.\\n  <br><br> Please contact us to discuss your dataset.`","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>message markdown of empty biomarker component.</p>\\n","line":157,"rawdescription":"\\n\\nmessage markdown of empty biomarker component.\\n","modifierKind":[148]},{"name":"selectedOnHovered","defaultValue":"selectSnapshot(IllustratorSelectors.selectedOnHovered)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Selects the cells hovered currently to highlight in table</p>\\n","line":103,"rawdescription":"\\nSelects the cells hovered currently to highlight in table","modifierKind":[148]},{"name":"setScreenMode","defaultValue":"dispatch(ScreenModeAction.Set)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>A dispatcher function to set the screen mode</p>\\n","line":161,"rawdescription":"\\nA dispatcher function to set the screen mode","modifierKind":[123,148]},{"name":"setSelectedSources","defaultValue":"dispatch(SourceRefsActions.SetSelectedSources)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Action to set selected sources</p>\\n","line":112,"rawdescription":"\\nAction to set selected sources","modifierKind":[148]},{"name":"sizeHoverInfo","defaultValue":"selectQuerySnapshot(RR.anyText, Ids.SizeLegendInfo)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Info to be shown on the tooltip for Size Legend</p>\\n","line":76,"rawdescription":"\\nInfo to be shown on the tooltip for Size Legend","modifierKind":[148]},{"name":"sizes","defaultValue":"selectQuerySnapshot(RR.field, Ids.SizeLegend, RTypes.Size, \'sizes\' as const, [])<SizeLegend[]>","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Taking input for the radius of the circle and the label to be displayed.</p>\\n","line":87,"rawdescription":"\\nTaking input for the radius of the circle and the label to be displayed.","modifierKind":[148]},{"name":"source","defaultValue":"selectSnapshot(SourceRefsSelectors.sourceReferences)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>List of sources with titles and links displayed to the user</p>\\n","line":90,"rawdescription":"\\nList of sources with titles and links displayed to the user","modifierKind":[148]},{"name":"table","deprecated":false,"deprecationMessage":"","type":"BiomarkerTableComponent<DataCell>","indexKey":"","optional":false,"description":"<p>Reference to biomarker table</p>\\n","line":67,"rawdescription":"\\nReference to biomarker table","decorators":[{"name":"ViewChild","stringifiedArguments":"\'table\'"}],"modifierKind":[170]},{"name":"tabs_","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"CellSummaryAggregate[]","indexKey":"","optional":false,"description":"<p>Table tabs</p>\\n","line":170,"rawdescription":"\\nTable tabs","modifierKind":[123]},{"name":"tissues","defaultValue":"selectSnapshot(TissueLibrarySelectors.tissues)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Get all tissues</p>\\n","line":100,"rawdescription":"\\n\\nGet all tissues\\n","modifierKind":[148]}],"methodsClass":[{"name":"collaborate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":199,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nA function which opens the contact modal dialog box","description":"<p>A function which opens the contact modal dialog box</p>\\n"},{"name":"highlightCells","args":[{"name":"label","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":210,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHighlights cells matching the label\\n","description":"<p>Highlights cells matching the label</p>\\n","jsdoctags":[{"name":"label","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"logTabChange","args":[{"name":"event","type":"MatTabChangeEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":218,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLogs tab change event\\n","description":"<p>Logs tab change event</p>\\n","jsdoctags":[{"name":{"pos":6724,"end":6729,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"event"},"type":"MatTabChangeEvent","deprecated":false,"deprecationMessage":"","tagName":{"pos":6718,"end":6723,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>tab change event</p>\\n"}]},{"name":"toggleFullscreen","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":189,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nA function that toggles isTableFullScreen and\\ncalls the setScreenMode function.\\n","description":"<p>A function that toggles isTableFullScreen and\\ncalls the setScreenMode function.</p>\\n"},{"name":"trackByLabel","args":[{"name":"_index","type":"number","deprecated":false,"deprecationMessage":""},{"name":"tab","type":"CellSummaryAggregate","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":182,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTrack a tab by it\'s label\\n\\n","description":"<p>Track a tab by it&#39;s label</p>\\n","jsdoctags":[{"name":{"pos":5790,"end":5796,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"_index"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":5784,"end":5789,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>Unused index of tab</p>\\n"},{"name":{"pos":5829,"end":5832,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"tab"},"type":"CellSummaryAggregate","deprecated":false,"deprecationMessage":"","tagName":{"pos":5823,"end":5828,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>Tab data</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"MatIconModule","type":"module"},{"name":"MatTabsModule","type":"module"},{"name":"MatDialogModule","type":"module"},{"name":"BiomarkerTableComponent","type":"component"},{"name":"GradientLegendComponent","type":"component"},{"name":"HoverDirective","type":"directive"},{"name":"LabelBoxComponent","type":"component"},{"name":"SizeLegendComponent","type":"component"},{"name":"SourceListComponent","type":"component"},{"name":"EmptyBiomarkerComponent","type":"component"}],"description":"<p>The component displays the biomarker details which includes the details, gradient legends, size legends and source lists</p>\\n","rawdescription":"\\nThe component displays the biomarker details which includes the details, gradient legends, size legends and source lists","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { ChangeDetectionStrategy, Component, inject, ViewChild } from \'@angular/core\';\\nimport { MatDialog, MatDialogConfig, MatDialogModule } from \'@angular/material/dialog\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatTabChangeEvent, MatTabsModule } from \'@angular/material/tabs\';\\nimport { HoverDirective } from \'@hra-ui/cdk\';\\nimport { dispatch, selectQuerySnapshot, selectSnapshot } from \'@hra-ui/cdk/injectors\';\\nimport { ResourceRegistrySelectors as RR } from \'@hra-ui/cdk/state\';\\nimport {\\n  EmptyBiomarkerComponent,\\n  GradientLegendComponent,\\n  GradientPoint,\\n  LabelBoxComponent,\\n  SizeLegend,\\n  SizeLegendComponent,\\n} from \'@hra-ui/components/atoms\';\\nimport { SourceListComponent } from \'@hra-ui/components/molecules\';\\nimport { BiomarkerTableComponent, DataCell, TissueInfo } from \'@hra-ui/components/organisms\';\\nimport { IllustrationMappingItem } from \'@hra-ui/services\';\\nimport {\\n  ActiveFtuSelectors,\\n  CellSummaryAggregate,\\n  CellSummarySelectors,\\n  ResourceIds as Ids,\\n  IllustratorActions,\\n  IllustratorSelectors,\\n  ResourceTypes as RTypes,\\n  ScreenModeAction,\\n  SourceRefsActions,\\n  SourceRefsSelectors,\\n  TissueLibrarySelectors,\\n} from \'@hra-ui/state\';\\nimport { GoogleAnalyticsService } from \'ngx-google-analytics\';\\n\\nimport { ContactBehaviorComponent } from \'../contact-behavior/contact-behavior.component\';\\n\\n/**\\n * PlaceHolder for Empty Tissue Info\\n */\\nconst EMPTY_TISSUE_INFO: TissueInfo = {\\n  id: \'\',\\n  label: \'\',\\n};\\n\\n/** The component displays the biomarker details which includes the details, gradient legends, size legends and source lists*/\\n@Component({\\n  selector: \'ftu-biomarker-details\',\\n  imports: [\\n    CommonModule,\\n    MatIconModule,\\n    MatTabsModule,\\n    MatDialogModule,\\n    BiomarkerTableComponent,\\n    GradientLegendComponent,\\n    HoverDirective,\\n    LabelBoxComponent,\\n    SizeLegendComponent,\\n    SourceListComponent,\\n    EmptyBiomarkerComponent,\\n  ],\\n  templateUrl: \'./biomarker-details.component.html\',\\n  styleUrls: [\'./biomarker-details.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class BiomarkerDetailsComponent {\\n  /** Reference to biomarker table */\\n  @ViewChild(\'table\') table!: BiomarkerTableComponent<DataCell>;\\n\\n  /** Table tabs */\\n  readonly getTabs = selectSnapshot(CellSummarySelectors.aggregates);\\n\\n  /** Info to be shown on the tooltip for Gradient Legend */\\n  readonly gradientHoverInfo = selectQuerySnapshot(RR.anyText, Ids.GradientLegendInfo);\\n\\n  /** Info to be shown on the tooltip for Size Legend */\\n  readonly sizeHoverInfo = selectQuerySnapshot(RR.anyText, Ids.SizeLegendInfo);\\n\\n  /** Indicates if the table is fully shown, defaults to false*/\\n  isTableFullScreen = false;\\n\\n  /** Gradient colors along with their stop points */\\n  readonly gradients = selectQuerySnapshot(RR.field, Ids.GradientLegend, RTypes.Gradient, \'points\' as const, [])<\\n    GradientPoint[]\\n  >;\\n\\n  /** Taking input for the radius of the circle and the label to be displayed. */\\n  readonly sizes = selectQuerySnapshot(RR.field, Ids.SizeLegend, RTypes.Size, \'sizes\' as const, [])<SizeLegend[]>;\\n\\n  /** List of sources with titles and links displayed to the user */\\n  readonly source = selectSnapshot(SourceRefsSelectors.sourceReferences);\\n\\n  /**\\n   * Iri  of medical illustration behavior component\\n   */\\n  readonly iri = selectSnapshot(ActiveFtuSelectors.iri);\\n\\n  /**\\n   * Get all tissues\\n   */\\n  readonly tissues = selectSnapshot(TissueLibrarySelectors.tissues);\\n\\n  /** Selects the cells hovered currently to highlight in table */\\n  readonly selectedOnHovered = selectSnapshot(IllustratorSelectors.selectedOnHovered);\\n\\n  /** Illustration mapping data */\\n  readonly mapping = selectSnapshot(IllustratorSelectors.mapping);\\n\\n  /** Action to highlight a cell type */\\n  readonly highlightCell = dispatch(IllustratorActions.HighlightCellType);\\n\\n  /** Action to set selected sources */\\n  readonly setSelectedSources = dispatch(SourceRefsActions.SetSelectedSources);\\n\\n  /** Table tabs */\\n  get tabs(): CellSummaryAggregate[] {\\n    const tabs = this.getTabs();\\n    if (tabs.length !== 0) {\\n      this.tabs_ = tabs;\\n    }\\n    return this.tabs_;\\n  }\\n\\n  /**\\n   * Gets tissue title from the list of tissues\\n   */\\n  get tissueInfo(): TissueInfo {\\n    const iri = this.iri();\\n    const tissues = this.tissues();\\n    if (iri === undefined || tissues === undefined) {\\n      return EMPTY_TISSUE_INFO;\\n    }\\n    const { id, label } = tissues[iri];\\n    return { id, label };\\n  }\\n\\n  /**\\n   * Gets ids for cells in the illustration\\n   */\\n  get illustrationIds(): string[] {\\n    const mapping = this.mapping();\\n    if (mapping !== this.mapping_) {\\n      this.mapping_ = mapping;\\n      this.illustrationIds_ = Array.from(new Set(this.mapping().map((data) => data.ontologyId)));\\n    }\\n\\n    return this.illustrationIds_;\\n  }\\n\\n  /**\\n   * button text of empty biomarker component.\\n   */\\n  readonly collaborateText = \'Collaborate with the HRA Team\';\\n\\n  /**\\n   * message markdown of empty biomarker component.\\n   */\\n  readonly message = `We currently do not have cell type data for this biomarker.\\n  <br><br> Please contact us to discuss your dataset.`;\\n\\n  /** A dispatcher function to set the screen mode */\\n  private readonly setScreenMode = dispatch(ScreenModeAction.Set);\\n\\n  /** A dialog box which shows contact modal after clicking on contact */\\n  private readonly dialog = inject(MatDialog);\\n\\n  /** Google analytics tracking service */\\n  private readonly ga = inject(GoogleAnalyticsService);\\n\\n  /** Table tabs */\\n  private tabs_: CellSummaryAggregate[] = [];\\n  /** Mapping items reference */\\n  private mapping_: IllustrationMappingItem[] = [];\\n  /** Illustration ids reference */\\n  private illustrationIds_: string[] = [];\\n\\n  /**\\n   * Track a tab by it\'s label\\n   *\\n   * @param _index Unused index of tab\\n   * @param tab Tab data\\n   */\\n  trackByLabel(_index: number, tab: CellSummaryAggregate): string {\\n    return tab.label;\\n  }\\n\\n  /** A function that toggles isTableFullScreen and\\n   * calls the setScreenMode function.\\n   */\\n  toggleFullscreen(): void {\\n    setTimeout(() => {\\n      this.table.checkDisplayedColumns();\\n    }, 250);\\n\\n    this.isTableFullScreen = !this.isTableFullScreen;\\n    this.setScreenMode(this.isTableFullScreen);\\n  }\\n\\n  /** A function which opens the contact modal dialog box */\\n  collaborate(): void {\\n    const dialogConfig = new MatDialogConfig();\\n    dialogConfig.disableClose = true;\\n    this.ga.event(\'contact_open\', \'modal\');\\n    this.dialog.open(ContactBehaviorComponent, dialogConfig);\\n  }\\n\\n  /**\\n   * Highlights cells matching the label\\n   * @param event\\n   */\\n  highlightCells(label?: string) {\\n    this.highlightCell(label);\\n  }\\n\\n  /**\\n   * Logs tab change event\\n   * @param event tab change event\\n   */\\n  logTabChange(event: MatTabChangeEvent) {\\n    this.ga.event(\'biomarker_tab_change\', event.tab ? event.tab.textLabel : \'\');\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@use \'variables\' as vars;\\n\\n:host {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr auto;\\n  grid-template-rows: auto 2rem 69px min-content;\\n  grid-template-areas:\\n    \'table table table\'\\n    \'gradient-legend-header size-legend-header size-legend-header\'\\n    \'gradient-legend size-legend .\'\\n    \'source-list source-list source-list\';\\n\\n  ::ng-deep .table-tab-header {\\n    height: 39px !important;\\n    background-color: white;\\n    font-weight: 400;\\n    letter-spacing: 0;\\n    font-size: 0.75rem;\\n\\n    &:hover {\\n      background: rgba(vars.$primary-lighter);\\n    }\\n  }\\n\\n  @media (min-height: 49.5rem) {\\n    grid-template-rows: auto 37px 69px min-content;\\n    ::ng-deep .table-tab-header {\\n      height: calc(3rem - 1px) !important;\\n    }\\n  }\\n\\n  @media (min-height: 60.75rem) {\\n    grid-template-rows: auto 3rem 5rem min-content;\\n  }\\n\\n  .cursor {\\n    cursor: pointer;\\n    position: fixed;\\n    top: 4.5rem;\\n    right: 2rem;\\n    z-index: 3;\\n\\n    @media (min-height: 49.5rem) {\\n      top: 5.25rem;\\n    }\\n  }\\n\\n  .table {\\n    grid-area: table;\\n    max-width: 100%;\\n    border-bottom: 1px solid rgba(vars.$light-dividers);\\n\\n    ::ng-deep .mat-mdc-tab-body-wrapper {\\n      height: 100%;\\n      border-top: 1px solid rgba(vars.$light-dividers);\\n    }\\n\\n    ::ng-deep .mat-mdc-tab {\\n      max-width: 14rem;\\n    }\\n  }\\n\\n  ::ng-deep {\\n    .table-tab-header > .mdc-tab__content > span {\\n      color: rgba(vars.$primary-600);\\n      user-select: none;\\n      font-weight: 500;\\n    }\\n\\n    .mat-mdc-tab-group.mat-accent .mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active {\\n      color: vars.$primary;\\n      user-select: none;\\n    }\\n\\n    .mdc-tab-indicator__content--underline {\\n      border-color: rgba(vars.$accent-lighter) !important;\\n    }\\n  }\\n\\n  .legend-header {\\n    color: vars.$dark-primary-text;\\n    border-bottom: 1px solid rgba(vars.$light-dividers);\\n    gap: 0.5rem;\\n    min-width: max-content;\\n    line-height: normal;\\n\\n    &.gradient {\\n      grid-area: gradient-legend-header;\\n      border-right: 1px solid rgba(vars.$light-dividers);\\n    }\\n\\n    &.size {\\n      grid-area: size-legend-header;\\n    }\\n\\n    .icon {\\n      font-size: 1.125rem;\\n      height: 1.125rem;\\n      width: 1.125rem;\\n    }\\n  }\\n\\n  .legend {\\n    padding: 1rem 1.5rem;\\n\\n    &.gradient {\\n      grid-area: gradient-legend;\\n      border-right: 1px solid rgba(vars.$light-dividers);\\n\\n      .content {\\n        width: 10rem;\\n      }\\n    }\\n\\n    &.size {\\n      grid-area: size-legend;\\n    }\\n  }\\n\\n  .source-list {\\n    height: min-content;\\n    grid-area: source-list;\\n    overflow: hidden;\\n    max-height: 276px;\\n  }\\n\\n  hra-biomarker-table {\\n    height: 100%;\\n\\n    &.small {\\n      min-height: fit-content;\\n    }\\n  }\\n\\n  hra-label-box {\\n    font-size: 0.875rem;\\n    padding-left: 1.5rem;\\n  }\\n}\\n\\n::ng-deep .biomarker-details.info-tooltip {\\n  display: flex;\\n  padding: 1rem 1.5rem;\\n  border-radius: 0.5rem;\\n  box-shadow: 1px 0.125rem 1rem 0.125rem rgba(0, 0, 0, 0.16);\\n  background-color: vars.$primary-contrast-rgb;\\n  max-width: 21rem;\\n  font-family: Metropolis;\\n  font-weight: 500;\\n  font-size: 0.75rem;\\n  line-height: 1.375rem;\\n}\\n\\n::ng-deep .mdc-tab__ripple::before {\\n  opacity: 0 !important;\\n}\\n\\n::ng-deep .biomarker-table-hover.full-column-name {\\n  display: flex;\\n  padding: 1rem 1.5rem;\\n  border-radius: 0.5rem;\\n  box-shadow: 1px 0.125rem 1rem 0.125rem rgba(0, 0, 0, 0.16);\\n  background-color: vars.$primary-contrast-rgb;\\n  overflow: auto;\\n  max-width: fit-content;\\n  font-family: Metropolis;\\n  font-size: 0.75rem;\\n\\n  &.empty {\\n    display: none;\\n  }\\n}\\n","styleUrl":"./biomarker-details.component.scss"}],"stylesData":"","extends":[],"accessors":{"tabs":{"name":"tabs","getSignature":{"name":"tabs","type":"[]","returnType":"CellSummaryAggregate[]","line":115,"rawdescription":"\\nTable tabs","description":"<p>Table tabs</p>\\n"}},"tissueInfo":{"name":"tissueInfo","getSignature":{"name":"tissueInfo","type":"","returnType":"TissueInfo","line":126,"rawdescription":"\\n\\nGets tissue title from the list of tissues\\n","description":"<p>Gets tissue title from the list of tissues</p>\\n"}},"illustrationIds":{"name":"illustrationIds","getSignature":{"name":"illustrationIds","type":"[]","returnType":"string[]","line":139,"rawdescription":"\\n\\nGets ids for cells in the illustration\\n","description":"<p>Gets ids for cells in the illustration</p>\\n"}}},"templateData":"<span (click)=\\"toggleFullscreen()\\" class=\\"end material-symbols-outlined cursor\\">\\n  {{ isTableFullScreen ? \'close_fullscreen\' : \'open_in_full\' }}\\n</span>\\n\\n<mat-tab-group\\n  class=\\"table\\"\\n  [class.table-fullscreen]=\\"isTableFullScreen\\"\\n  mat-stretch-tabs=\\"true\\"\\n  color=\\"accent\\"\\n  (selectedTabChange)=\\"logTabChange($event)\\"\\n  disablePagination=\\"true\\"\\n  disableRipple=\\"true\\"\\n>\\n  <mat-tab\\n    *ngFor=\\"let tab of tabs; trackBy: trackByLabel\\"\\n    labelClass=\\"table-tab-header\\"\\n    [label]=\\"\'Cell Types by \' + tab.label\\"\\n  >\\n    <hra-biomarker-table\\n      #table\\n      *ngIf=\\"tab.rows.length !== 0\\"\\n      [class.small]=\\"tab.rows.length < 10\\"\\n      [data]=\\"$any(tab.rows)\\"\\n      [columns]=\\"tab.columns\\"\\n      [gradient]=\\"gradients()\\"\\n      [sizes]=\\"sizes()\\"\\n      [tissueInfo]=\\"tissueInfo\\"\\n      [illustrationIds]=\\"illustrationIds\\"\\n      [dataSources]=\\"source()\\"\\n      [highlightedCellId]=\\"selectedOnHovered()?.ontologyId ?? \'\'\\"\\n      (rowHover)=\\"highlightCells($event)\\"\\n    ></hra-biomarker-table>\\n    <hra-empty-biomarker\\n      *ngIf=\\"tab.rows.length === 0\\"\\n      [collaborateText]=\\"collaborateText\\"\\n      [message]=\\"message\\"\\n      (collaborateClick)=\\"collaborate()\\"\\n    ></hra-empty-biomarker>\\n  </mat-tab>\\n</mat-tab-group>\\n\\n<hra-label-box class=\\"legend-header gradient\\">\\n  <mat-icon class=\\"icon\\" [hraHover]=\\"infoTooltip\\" [hraHoverData]=\\"gradientHoverInfo()\\">info_outlined</mat-icon>\\n  Biomarker Expression Mean in FTU\\n</hra-label-box>\\n<div class=\\"legend gradient\\">\\n  <hra-gradient-legend [gradient]=\\"gradients()\\" class=\\"content\\"></hra-gradient-legend>\\n</div>\\n\\n<hra-label-box class=\\"legend-header size\\">\\n  <mat-icon class=\\"icon\\" [hraHover]=\\"infoTooltip\\" [hraHoverData]=\\"sizeHoverInfo()\\">info_outlined</mat-icon>\\n  Percentage of Cells in FTU\\n</hra-label-box>\\n<div class=\\"legend size\\">\\n  <hra-size-legend [sizes]=\\"sizes()\\" class=\\"content\\"></hra-size-legend>\\n</div>\\n\\n<div class=\\"source-list\\">\\n  <hra-source-list\\n    [collaborateText]=\\"collaborateText\\"\\n    [message]=\\"message\\"\\n    (collaborateClick)=\\"collaborate()\\"\\n    [sources]=\\"source()\\"\\n    (selectionChanged)=\\"setSelectedSources($event)\\"\\n    class=\\"content\\"\\n  ></hra-source-list>\\n</div>\\n\\n<ng-template #infoTooltip let-tooltip>\\n  <div class=\\"biomarker-details info-tooltip\\">\\n    {{ tooltip }}\\n  </div>\\n</ng-template>\\n"},{"name":"BiomarkerDetailsWcComponent","id":"component-BiomarkerDetailsWcComponent-2c72d9dfca9e7dd06ac8013f7efd0c97e07d6abce462261bb9beb6f475c116d9b71411d9f0016a3c269ceebb864ee6e20ef922c64f354ddd347436d9308165e4","file":"libs/components/behavioral/src/lib/biomarker-details-wc/biomarker-details-wc.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ftu-wc-biomarker-details","styleUrls":["./biomarker-details-wc.component.scss"],"styles":[],"templateUrl":["./biomarker-details-wc.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"collaborateText","defaultValue":"\'Collaborate with the HRA Team\'","deprecated":false,"deprecationMessage":"","type":"string","indexKey":"","optional":false,"description":"<p>button text of empty biomarker component.</p>\\n","line":179,"rawdescription":"\\n\\nbutton text of empty biomarker component.\\n","modifierKind":[148]},{"name":"currentUrl","defaultValue":"selectSnapshot(IllustratorSelectors.url)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Current illustration url</p>\\n","line":79,"rawdescription":"\\n\\nCurrent illustration url\\n","modifierKind":[148]},{"name":"dialog","defaultValue":"inject(MatDialog)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>A dialog box which shows contact modal after clicking on contact</p>\\n","line":194,"rawdescription":"\\nA dialog box which shows contact modal after clicking on contact","modifierKind":[123,148]},{"name":"ga","defaultValue":"inject(GoogleAnalyticsService)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Google analytics tracking service</p>\\n","line":197,"rawdescription":"\\nGoogle analytics tracking service","modifierKind":[123,148]},{"name":"getTabs","defaultValue":"selectSnapshot(CellSummarySelectors.aggregates)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Table tabs</p>\\n","line":116,"rawdescription":"\\nTable tabs","modifierKind":[148]},{"name":"gradientHoverInfo","defaultValue":"selectQuerySnapshot(RR.anyText, Ids.GradientLegendInfo)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Info to be shown on the tooltip for Gradient Legend</p>\\n","line":119,"rawdescription":"\\nInfo to be shown on the tooltip for Gradient Legend","modifierKind":[148]},{"name":"gradients","defaultValue":"selectQuerySnapshot(RR.field, Ids.GradientLegend, RTypes.Gradient, \'points\' as const, [])<\\n    GradientPoint[]\\n  >","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Gradient colors along with their stop points</p>\\n","line":128,"rawdescription":"\\nGradient colors along with their stop points","modifierKind":[148]},{"name":"illustrationIds_","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","indexKey":"","optional":false,"description":"<p>Illustration ids reference</p>\\n","line":202,"rawdescription":"\\nIllustration ids reference","modifierKind":[123]},{"name":"iri","defaultValue":"selectSnapshot(ActiveFtuSelectors.iri)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Iri  of medical illustration behavior component</p>\\n","line":89,"rawdescription":"\\n\\nIri  of medical illustration behavior component\\n","modifierKind":[148]},{"name":"isTableFullScreen","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Indicates if the table is fully shown, defaults to false</p>\\n","line":125,"rawdescription":"\\nIndicates if the table is fully shown, defaults to false"},{"name":"mapping","defaultValue":"selectSnapshot(IllustratorSelectors.mapping)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Current mapping file</p>\\n","line":84,"rawdescription":"\\n\\nCurrent mapping file\\n","modifierKind":[148]},{"name":"mapping_","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"IllustrationMappingItem[]","indexKey":"","optional":false,"description":"<p>Mapping item reference</p>\\n","line":200,"rawdescription":"\\nMapping item reference","modifierKind":[123]},{"name":"message","defaultValue":"`We currently do not have cell type data for this biomarker.\\n<br><br> Please contact us to discuss your dataset.`","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>message markdown of empty biomarker component.</p>\\n","line":184,"rawdescription":"\\n\\nmessage markdown of empty biomarker component.\\n","modifierKind":[148]},{"name":"setScreenMode","defaultValue":"dispatch(ScreenModeAction.Set)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>A dispatcher function to set the screen mode</p>\\n","line":191,"rawdescription":"\\nA dispatcher function to set the screen mode","modifierKind":[123,148]},{"name":"setSelectedSources","defaultValue":"dispatch(SourceRefsActions.SetSelectedSources)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Sets currently selected sources</p>\\n","line":188,"rawdescription":"\\nSets currently selected sources","modifierKind":[148]},{"name":"sizeHoverInfo","defaultValue":"selectQuerySnapshot(RR.anyText, Ids.SizeLegendInfo)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Info to be shown on the tooltip for Size Legend</p>\\n","line":122,"rawdescription":"\\nInfo to be shown on the tooltip for Size Legend","modifierKind":[148]},{"name":"sizes","defaultValue":"selectQuerySnapshot(RR.field, Ids.SizeLegend, RTypes.Size, \'sizes\' as const, [])<SizeLegend[]>","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Taking input for the radius of the circle and the label to be displayed.</p>\\n","line":133,"rawdescription":"\\nTaking input for the radius of the circle and the label to be displayed.","modifierKind":[148]},{"name":"source","defaultValue":"selectSnapshot(SourceRefsSelectors.sourceReferences)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>List of sources with titles and links displayed to the user</p>\\n","line":136,"rawdescription":"\\nList of sources with titles and links displayed to the user","modifierKind":[148]},{"name":"table","deprecated":false,"deprecationMessage":"","type":"BiomarkerTableComponent<DataCell>","indexKey":"","optional":false,"description":"<p>Reference to the biomarker table component</p>\\n","line":74,"rawdescription":"\\n\\nReference to the biomarker table component\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"\'table\'"}],"modifierKind":[170]},{"name":"tabs_","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"CellSummaryAggregate[]","indexKey":"","optional":false,"description":"<p>Tabs reference</p>\\n","line":204,"rawdescription":"\\nTabs reference","modifierKind":[123]},{"name":"tissues","defaultValue":"selectSnapshot(TissueLibrarySelectors.tissues)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Get all tissues</p>\\n","line":94,"rawdescription":"\\n\\nGet all tissues\\n","modifierKind":[148]},{"name":"updateNodeOnClicked","defaultValue":"dispatch(IllustratorActions.SetClicked)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Updates the active node on node click</p>\\n","line":113,"rawdescription":"\\n\\nUpdates the active node on node click\\n","modifierKind":[148]},{"name":"updateNodeOnHover","defaultValue":"dispatch(IllustratorActions.SetHover)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Updates the active node on node hover</p>\\n","line":108,"rawdescription":"\\n\\nUpdates the active node on node hover\\n","modifierKind":[148]}],"methodsClass":[{"name":"collaborate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":224,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nA function which opens the contact modal dialog box","description":"<p>A function which opens the contact modal dialog box</p>\\n"},{"name":"logTabChange","args":[{"name":"event","type":"MatTabChangeEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":235,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nLogs tab change event\\n","description":"<p>Logs tab change event</p>\\n","jsdoctags":[{"name":{"pos":6874,"end":6879,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"event"},"type":"MatTabChangeEvent","deprecated":false,"deprecationMessage":"","tagName":{"pos":6868,"end":6873,"kind":80,"id":0,"flags":16842752,"transformFlags":0,"escapedText":"param"},"comment":"<p>tab change event</p>\\n"}]},{"name":"toggleFullscreen","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":214,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nA function that toggles isTableFullScreen and\\ncalls the setScreenMode function.\\n","description":"<p>A function that toggles isTableFullScreen and\\ncalls the setScreenMode function.</p>\\n"},{"name":"trackByIndex","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"number","typeParameters":[],"line":207,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nReturns the index number","description":"<p>Returns the index number</p>\\n","jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"MatIconModule","type":"module"},{"name":"MatTabsModule","type":"module"},{"name":"BiomarkerTableComponent","type":"component"},{"name":"BiomarkerTableDataCardComponent","type":"component"},{"name":"GradientLegendComponent","type":"component"},{"name":"HoverDirective","type":"directive"},{"name":"LabelBoxComponent","type":"component"},{"name":"SizeLegendComponent","type":"component"},{"name":"SourceListComponent","type":"component"},{"name":"EmptyBiomarkerComponent","type":"component"},{"name":"InteractiveSvgComponent","type":"component"}],"description":"<p>Component for Biomarker Table Details Web component</p>\\n","rawdescription":"\\nComponent for Biomarker Table Details Web component","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { ChangeDetectionStrategy, Component, inject, ViewChild } from \'@angular/core\';\\nimport { MatDialog, MatDialogConfig } from \'@angular/material/dialog\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatTabChangeEvent, MatTabsModule } from \'@angular/material/tabs\';\\nimport { HoverDirective } from \'@hra-ui/cdk\';\\nimport { dispatch, selectQuerySnapshot, selectSnapshot } from \'@hra-ui/cdk/injectors\';\\nimport { ResourceRegistrySelectors as RR } from \'@hra-ui/cdk/state\';\\nimport {\\n  EmptyBiomarkerComponent,\\n  GradientLegendComponent,\\n  GradientPoint,\\n  LabelBoxComponent,\\n  SizeLegend,\\n  SizeLegendComponent,\\n} from \'@hra-ui/components/atoms\';\\nimport {\\n  BiomarkerTableDataCardComponent,\\n  InteractiveSvgComponent,\\n  SourceListComponent,\\n} from \'@hra-ui/components/molecules\';\\nimport { BiomarkerTableComponent, DataCell, TissueInfo } from \'@hra-ui/components/organisms\';\\nimport { IllustrationMappingItem } from \'@hra-ui/services\';\\nimport {\\n  ActiveFtuSelectors,\\n  CellSummaryAggregate,\\n  CellSummarySelectors,\\n  IllustratorActions,\\n  IllustratorSelectors,\\n  ResourceIds as Ids,\\n  ResourceTypes as RTypes,\\n  ScreenModeAction,\\n  SourceRefsActions,\\n  SourceRefsSelectors,\\n  TissueLibrarySelectors,\\n} from \'@hra-ui/state\';\\nimport { GoogleAnalyticsService } from \'ngx-google-analytics\';\\n\\nimport { ContactBehaviorComponent } from \'../contact-behavior/contact-behavior.component\';\\n\\n/**\\n * PlaceHolder for Empty Tissue Info\\n */\\nconst EMPTY_TISSUE_INFO: TissueInfo = {\\n  id: \'\',\\n  label: \'\',\\n};\\n\\n/** Component for Biomarker Table Details Web component */\\n@Component({\\n  selector: \'ftu-wc-biomarker-details\',\\n  imports: [\\n    CommonModule,\\n    MatIconModule,\\n    MatTabsModule,\\n    BiomarkerTableComponent,\\n    BiomarkerTableDataCardComponent,\\n    GradientLegendComponent,\\n    HoverDirective,\\n    LabelBoxComponent,\\n    SizeLegendComponent,\\n    SourceListComponent,\\n    EmptyBiomarkerComponent,\\n    InteractiveSvgComponent,\\n  ],\\n  templateUrl: \'./biomarker-details-wc.component.html\',\\n  styleUrls: [\'./biomarker-details-wc.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class BiomarkerDetailsWcComponent {\\n  /**\\n   * Reference to the biomarker table component\\n   */\\n  @ViewChild(\'table\') table!: BiomarkerTableComponent<DataCell>;\\n\\n  /**\\n   * Current illustration url\\n   */\\n  readonly currentUrl = selectSnapshot(IllustratorSelectors.url);\\n\\n  /**\\n   * Current mapping file\\n   */\\n  readonly mapping = selectSnapshot(IllustratorSelectors.mapping);\\n\\n  /**\\n   * Iri  of medical illustration behavior component\\n   */\\n  readonly iri = selectSnapshot(ActiveFtuSelectors.iri);\\n\\n  /**\\n   * Get all tissues\\n   */\\n  readonly tissues = selectSnapshot(TissueLibrarySelectors.tissues);\\n\\n  /**\\n   * Gets tissue title from the list of tissues\\n   */\\n  get tissueTitle(): string {\\n    const iri = this.iri();\\n    const tissues = this.tissues();\\n    return iri ? tissues[iri].label : \'\';\\n  }\\n\\n  /**\\n   * Updates the active node on node hover\\n   */\\n  readonly updateNodeOnHover = dispatch(IllustratorActions.SetHover);\\n\\n  /**\\n   * Updates the active node on node click\\n   */\\n  readonly updateNodeOnClicked = dispatch(IllustratorActions.SetClicked);\\n\\n  /** Table tabs */\\n  readonly getTabs = selectSnapshot(CellSummarySelectors.aggregates);\\n\\n  /** Info to be shown on the tooltip for Gradient Legend */\\n  readonly gradientHoverInfo = selectQuerySnapshot(RR.anyText, Ids.GradientLegendInfo);\\n\\n  /** Info to be shown on the tooltip for Size Legend */\\n  readonly sizeHoverInfo = selectQuerySnapshot(RR.anyText, Ids.SizeLegendInfo);\\n\\n  /** Indicates if the table is fully shown, defaults to false*/\\n  isTableFullScreen = false;\\n\\n  /** Gradient colors along with their stop points */\\n  readonly gradients = selectQuerySnapshot(RR.field, Ids.GradientLegend, RTypes.Gradient, \'points\' as const, [])<\\n    GradientPoint[]\\n  >;\\n\\n  /** Taking input for the radius of the circle and the label to be displayed. */\\n  readonly sizes = selectQuerySnapshot(RR.field, Ids.SizeLegend, RTypes.Size, \'sizes\' as const, [])<SizeLegend[]>;\\n\\n  /** List of sources with titles and links displayed to the user */\\n  readonly source = selectSnapshot(SourceRefsSelectors.sourceReferences);\\n\\n  /**\\n   * Gets tissue title from the list of tissues\\n   */\\n  get tissueInfo(): TissueInfo {\\n    const iri = this.iri();\\n    const tissues = this.tissues();\\n    if (iri === undefined) {\\n      return EMPTY_TISSUE_INFO;\\n    }\\n    const { id, label } = tissues[iri];\\n    return { id, label };\\n  }\\n\\n  /**\\n   * Gets tabs containing cell summary aggregate data\\n   */\\n  get tabs(): CellSummaryAggregate[] {\\n    const tabs = this.getTabs();\\n    if (tabs !== this.tabs_ && tabs.length !== 0) {\\n      this.tabs_ = tabs;\\n    }\\n\\n    return this.tabs_;\\n  }\\n\\n  /**\\n   * Gets ids for cells in the illustration\\n   */\\n  get illustrationIds(): string[] {\\n    const mapping = this.mapping();\\n    if (mapping !== this.mapping_) {\\n      this.mapping_ = mapping;\\n      this.illustrationIds_ = Array.from(new Set(this.mapping().map((data) => data.ontologyId)));\\n    }\\n\\n    return this.illustrationIds_;\\n  }\\n\\n  /**\\n   * button text of empty biomarker component.\\n   */\\n  readonly collaborateText = \'Collaborate with the HRA Team\';\\n\\n  /**\\n   * message markdown of empty biomarker component.\\n   */\\n  readonly message = `We currently do not have cell type data for this biomarker.\\n<br><br> Please contact us to discuss your dataset.`;\\n\\n  /** Sets currently selected sources */\\n  readonly setSelectedSources = dispatch(SourceRefsActions.SetSelectedSources);\\n\\n  /** A dispatcher function to set the screen mode */\\n  private readonly setScreenMode = dispatch(ScreenModeAction.Set);\\n\\n  /** A dialog box which shows contact modal after clicking on contact */\\n  private readonly dialog = inject(MatDialog);\\n\\n  /** Google analytics tracking service */\\n  private readonly ga = inject(GoogleAnalyticsService);\\n\\n  /** Mapping item reference */\\n  private mapping_: IllustrationMappingItem[] = [];\\n  /** Illustration ids reference */\\n  private illustrationIds_: string[] = [];\\n  /** Tabs reference */\\n  private tabs_: CellSummaryAggregate[] = [];\\n\\n  /** Returns the index number */\\n  trackByIndex(index: number): number {\\n    return index;\\n  }\\n\\n  /** A function that toggles isTableFullScreen and\\n   * calls the setScreenMode function.\\n   */\\n  toggleFullscreen(): void {\\n    setTimeout(() => {\\n      this.table.checkDisplayedColumns();\\n    }, 250);\\n\\n    this.isTableFullScreen = !this.isTableFullScreen;\\n    this.setScreenMode(this.isTableFullScreen);\\n  }\\n\\n  /** A function which opens the contact modal dialog box */\\n  collaborate(): void {\\n    const dialogConfig = new MatDialogConfig();\\n    dialogConfig.disableClose = true;\\n    this.ga.event(\'contact_open\', \'modal\');\\n    this.dialog.open(ContactBehaviorComponent, dialogConfig);\\n  }\\n\\n  /**\\n   * Logs tab change event\\n   * @param event tab change event\\n   */\\n  logTabChange(event: MatTabChangeEvent) {\\n    this.ga.event(\'biomarker_tab_change\', event.tab ? event.tab.textLabel : \'\');\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@use \'variables\' as vars;\\n\\n:host {\\n  display: flex;\\n  flex-direction: column;\\n\\n  ::ng-deep .extraTab {\\n    padding-left: 1rem;\\n    padding-right: 1rem;\\n    letter-spacing: 0;\\n    font-weight: 500;\\n\\n    &:last-child {\\n      border-right: 1px solid rgba(vars.$light-dividers);\\n      border-left: 1px solid rgba(vars.$light-dividers);\\n    }\\n\\n    &.mdc-tab-indicator--active {\\n      background-color: rgba(vars.$primary-lighter);\\n    }\\n\\n    &:hover {\\n      background-color: rgba(vars.$primary-lighter);\\n    }\\n    .mat-tab__text-label {\\n      --palette-accent-500-rgb: #243142;\\n    }\\n  }\\n\\n  .table-header {\\n    grid-area: table-header;\\n    border: 1px solid rgba(vars.$light-dividers);\\n    border-bottom: none;\\n    width: 43rem;\\n    height: 2.5rem;\\n\\n    @media (min-height: 49.5rem) {\\n      height: 3rem;\\n    }\\n\\n    @media (min-height: 60.75rem) {\\n      font-size: 1.25rem;\\n    }\\n\\n    span {\\n      cursor: pointer;\\n      padding: 0.4rem;\\n      &:hover {\\n        background-color: rgba(vars.$light-dividers);\\n        border-radius: 5px;\\n      }\\n    }\\n  }\\n\\n  .table {\\n    grid-area: table;\\n    max-width: 100%;\\n    overflow: auto;\\n    border: 1px solid rgba(vars.$light-dividers);\\n    flex-grow: 1;\\n\\n    ::ng-deep .table-tab-header {\\n      padding-left: 1rem;\\n      padding-right: 1rem;\\n      border-left: 1px solid rgba(vars.$light-dividers);\\n      background-color: white;\\n      font-weight: 500;\\n      letter-spacing: 0;\\n\\n      &:last-child {\\n        border-right: 1px solid rgba(vars.$light-dividers);\\n      }\\n\\n      &.mdc-tab-indicator--active {\\n        background-color: rgba(vars.$primary-lighter);\\n      }\\n\\n      &:hover {\\n        background-color: rgba(vars.$primary-lighter);\\n      }\\n    }\\n  }\\n\\n  hra-interactive-svg {\\n    display: block;\\n    height: calc(100% - 3px);\\n  }\\n\\n  hra-biomarker-table {\\n    overflow-y: auto;\\n    overflow-x: auto;\\n  }\\n\\n  .legends {\\n    display: inline-flex;\\n    width: 100%;\\n    height: 8rem;\\n\\n    .legends-right {\\n      width: 50%;\\n    }\\n    .legends-left {\\n      width: 50%;\\n    }\\n  }\\n\\n  .legend-header {\\n    color: vars.$dark-primary-text;\\n    border-bottom: 1px solid rgba(vars.$light-dividers);\\n    gap: 0.5rem;\\n    min-width: max-content;\\n    line-height: normal;\\n    height: 3rem;\\n\\n    &.gradient {\\n      grid-area: gradient-legend-header;\\n      border-right: 1px solid rgba(vars.$light-dividers);\\n    }\\n\\n    &.size {\\n      grid-area: size-legend-header;\\n    }\\n\\n    .icon {\\n      font-size: 1.125rem;\\n      height: 1.125rem;\\n      width: 1.125rem;\\n    }\\n  }\\n\\n  .legend {\\n    padding: 1rem 1.5rem;\\n    height: 5rem;\\n\\n    &.gradient {\\n      grid-area: gradient-legend-header;\\n      border-right: 1px solid rgba(vars.$light-dividers);\\n\\n      hra-gradient-legend {\\n        width: 10rem !important;\\n      }\\n    }\\n\\n    &.size {\\n      grid-area: size-legend;\\n      font-size: 0.75rem;\\n    }\\n\\n    .icon {\\n      margin-left: 0.6rem;\\n      width: unset;\\n    }\\n  }\\n\\n  .source-list {\\n    grid-area: source-list;\\n\\n    .content {\\n      width: min-content;\\n    }\\n  }\\n  .cursor {\\n    cursor: default;\\n  }\\n}\\n\\n::ng-deep .biomarker-details.info-tooltip {\\n  display: flex;\\n  padding: 1rem 1.5rem;\\n  border-radius: 0.5rem;\\n  box-shadow: 1px 0.125rem 1rem 0.125rem rgba(0, 0, 0, 0.16);\\n  background-color: vars.$primary-contrast-rgb;\\n  max-width: 21rem;\\n  font-family: Metropolis;\\n  font-weight: 500;\\n  font-size: 0.75rem;\\n  line-height: 1.375rem;\\n}\\n\\n::ng-deep {\\n  .table-tab-header,\\n  .extraTab > .mdc-tab__content > span {\\n    color: rgba(vars.$primary-600);\\n    user-select: none;\\n    font-weight: 500;\\n  }\\n\\n  mat-tab-header {\\n    border-bottom: 1px solid rgba(vars.$light-dividers);\\n  }\\n\\n  .mat-mdc-tab-body-wrapper {\\n    height: calc(100% - 3rem);\\n  }\\n\\n  .mat-mdc-tab-group.mat-accent .mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label {\\n    color: vars.$primary;\\n  }\\n\\n  .mdc-tab__text-label {\\n    color: rgba(vars.$primary-600) !important;\\n  }\\n\\n  .mdc-tab-indicator__content--underline {\\n    border-color: rgba(vars.$accent-lighter) !important;\\n  }\\n\\n  .mdc-tab__ripple::before {\\n    opacity: 0 !important;\\n  }\\n\\n  cdk-virtual-scroll-viewport {\\n    height: 100% !important;\\n  }\\n}\\n\\n::ng-deep .biomarker-table-hover.full-column-name {\\n  display: flex;\\n  padding: 1rem 1.5rem;\\n  border-radius: 0.5rem;\\n  box-shadow: 1px 0.125rem 1rem 0.125rem rgba(0, 0, 0, 0.16);\\n  background-color: vars.$primary-contrast-rgb;\\n  overflow: auto;\\n  max-width: fit-content;\\n  font-family: Metropolis;\\n  font-size: 0.75rem;\\n\\n  &.empty {\\n    display: none;\\n  }\\n}\\n","styleUrl":"./biomarker-details-wc.component.scss"}],"stylesData":"","extends":[],"accessors":{"tissueTitle":{"name":"tissueTitle","getSignature":{"name":"tissueTitle","type":"string","returnType":"string","line":99,"rawdescription":"\\n\\nGets tissue title from the list of tissues\\n","description":"<p>Gets tissue title from the list of tissues</p>\\n"}},"tissueInfo":{"name":"tissueInfo","getSignature":{"name":"tissueInfo","type":"","returnType":"TissueInfo","line":141,"rawdescription":"\\n\\nGets tissue title from the list of tissues\\n","description":"<p>Gets tissue title from the list of tissues</p>\\n"}},"tabs":{"name":"tabs","getSignature":{"name":"tabs","type":"[]","returnType":"CellSummaryAggregate[]","line":154,"rawdescription":"\\n\\nGets tabs containing cell summary aggregate data\\n","description":"<p>Gets tabs containing cell summary aggregate data</p>\\n"}},"illustrationIds":{"name":"illustrationIds","getSignature":{"name":"illustrationIds","type":"[]","returnType":"string[]","line":166,"rawdescription":"\\n\\nGets ids for cells in the illustration\\n","description":"<p>Gets ids for cells in the illustration</p>\\n"}}},"templateData":"<hra-label-box class=\\"table-header\\">\\n  {{ tissueTitle }}: FTU Illustration\\n  <span (click)=\\"toggleFullscreen()\\" class=\\"end material-symbols-outlined cursor\\">\\n    {{ isTableFullScreen ? \'close_fullscreen\' : \'open_in_full\' }}\\n  </span>\\n</hra-label-box>\\n\\n<mat-tab-group\\n  class=\\"table\\"\\n  [class.table-fullscreen]=\\"isTableFullScreen\\"\\n  mat-stretch-tabs=\\"true\\"\\n  color=\\"accent\\"\\n  (selectedTabChange)=\\"logTabChange($event)\\"\\n  disablePagination=\\"true\\"\\n  disableRipple=\\"true\\"\\n>\\n  <mat-tab labelClass=\\"extraTab\\" label=\\"FTU Illustration\\">\\n    <hra-interactive-svg\\n      [url]=\\"currentUrl()\\"\\n      [mapping]=\\"mapping()\\"\\n      (nodeHover)=\\"updateNodeOnHover($event)\\"\\n      (nodeClick)=\\"updateNodeOnClicked($event)\\"\\n    >\\n    </hra-interactive-svg>\\n  </mat-tab>\\n  <mat-tab\\n    *ngFor=\\"let tab of tabs; trackBy: trackByIndex\\"\\n    labelClass=\\"table-tab-header\\"\\n    [label]=\\"\'Cell Types by \' + tab.label\\"\\n  >\\n    <ng-template matTabContent>\\n      <hra-biomarker-table\\n        *ngIf=\\"tab.rows.length !== 0\\"\\n        [data]=\\"$any(tab.rows)\\"\\n        [columns]=\\"tab.columns\\"\\n        [gradient]=\\"gradients()\\"\\n        [sizes]=\\"sizes()\\"\\n        [tissueInfo]=\\"tissueInfo\\"\\n        [illustrationIds]=\\"illustrationIds\\"\\n        [dataSources]=\\"source()\\"\\n      ></hra-biomarker-table>\\n\\n      <div *ngIf=\\"tab.rows.length !== 0\\" class=\\"legends\\">\\n        <div class=\\"legends-left\\">\\n          <hra-label-box class=\\"legend-header gradient\\">\\n            <mat-icon class=\\"icon\\" [hraHover]=\\"infoTooltip\\" [hraHoverData]=\\"gradientHoverInfo()\\"\\n              >info_outlined</mat-icon\\n            >\\n            Biomarker Expression Mean in FTU\\n          </hra-label-box>\\n          <div class=\\"legend gradient\\">\\n            <hra-gradient-legend [gradient]=\\"gradients()\\" class=\\"content\\"></hra-gradient-legend>\\n          </div>\\n        </div>\\n\\n        <div class=\\"legends-right\\">\\n          <hra-label-box class=\\"legend-header size\\">\\n            <mat-icon class=\\"icon\\" [hraHover]=\\"infoTooltip\\" [hraHoverData]=\\"sizeHoverInfo()\\">info_outlined</mat-icon>\\n            Percentage of Cells in FTU\\n          </hra-label-box>\\n          <div class=\\"legend size\\">\\n            <hra-size-legend [sizes]=\\"sizes()\\" class=\\"content\\"></hra-size-legend>\\n          </div>\\n        </div>\\n      </div>\\n      <hra-empty-biomarker\\n        *ngIf=\\"tab.rows.length === 0\\"\\n        [collaborateText]=\\"collaborateText\\"\\n        [message]=\\"message\\"\\n        (collaborateClick)=\\"collaborate()\\"\\n      ></hra-empty-biomarker>\\n    </ng-template>\\n  </mat-tab>\\n  <mat-tab labelClass=\\"extraTab\\" label=\\"Source Data\\">\\n    <div class=\\"source-list\\">\\n      <hra-source-list\\n        [collaborateText]=\\"collaborateText\\"\\n        [message]=\\"message\\"\\n        (collaborateClick)=\\"collaborate()\\"\\n        [sources]=\\"source()\\"\\n        (selectionChanged)=\\"setSelectedSources($event)\\"\\n        class=\\"content\\"\\n      ></hra-source-list>\\n    </div>\\n\\n    <ng-template #infoTooltip let-tooltip>\\n      <div class=\\"biomarker-details info-tooltip\\">\\n        {{ tooltip }}\\n      </div>\\n    </ng-template>\\n  </mat-tab>\\n</mat-tab-group>\\n"},{"name":"ContactBehaviorComponent","id":"component-ContactBehaviorComponent-8ff8cf0dc240f4305f9c1a8d48b70b08c8d96a49011f50900541e857286ec146004aaa905309d0d4ea445e4fc82a4f112280874e2eefa732c755dd45891bf4ed","file":"libs/components/behavioral/src/lib/contact-behavior/contact-behavior.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ftu-contact-behavior","styleUrls":["./contact-behavior.component.scss"],"styles":[],"templateUrl":["./contact-behavior.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"description","defaultValue":"selectQuerySnapshot(RR.anyText, Ids.ContactAcknowledgement)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Information modal message to the user</p>\\n","line":29,"rawdescription":"\\nInformation modal message to the user","modifierKind":[148]},{"name":"dialog","defaultValue":"inject(MatDialog)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>A dialog box which shows user an acknowledgement after clicking on submit</p>\\n","line":35,"rawdescription":"\\nA dialog box which shows user an acknowledgement after clicking on submit","modifierKind":[123,148]},{"name":"ga","defaultValue":"inject(GoogleAnalyticsService)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Google analytics tracking service</p>\\n","line":44,"rawdescription":"\\nGoogle analytics tracking service","modifierKind":[123,148]},{"name":"postMessageTemplate","deprecated":false,"deprecationMessage":"","type":"TemplateRef<void>","indexKey":"","optional":false,"description":"<p>A template to post a message</p>\\n","line":20,"rawdescription":"\\nA template to post a message","decorators":[{"name":"ViewChild","stringifiedArguments":"\'postMessage\'"}],"modifierKind":[170,148]},{"name":"postRef","deprecated":false,"deprecationMessage":"","type":"MatDialogRef<void>","indexKey":"","optional":true,"description":"<p>Dialog box which references the acknowledgement dialog box</p>\\n","line":41,"rawdescription":"\\nDialog box which references the acknowledgement dialog box","modifierKind":[123]},{"name":"productLogoUrl","defaultValue":"selectQuerySnapshot(RR.url, Ids.ProductLogoUrl)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Input for product logo URL to displayed on the left side.</p>\\n","line":23,"rawdescription":"\\nInput for product logo URL to displayed on the left side.","modifierKind":[148]},{"name":"productTitle","defaultValue":"selectQuerySnapshot(RR.anyText, Ids.ProductTitle)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Input for product title to displayed on the left side.</p>\\n","line":26,"rawdescription":"\\nInput for product title to displayed on the left side.","modifierKind":[148]},{"name":"selfRef","defaultValue":"inject(MatDialogRef, { optional: true })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>A mat form field dialog which accepts the email, subject, and message of user and validates it</p>\\n","line":38,"rawdescription":"\\nA mat form field dialog which accepts the email, subject, and message of user and validates it","modifierKind":[123,148]},{"name":"sendMessage","defaultValue":"dispatch(ContactActions.SendMessage)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>A dispatcher function to send message entered by user</p>\\n","line":32,"rawdescription":"\\nA dispatcher function to send message entered by user","modifierKind":[148]}],"methodsClass":[{"name":"close","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nA function which closes the \'Contact us\' dialog and the acknowledgement dialog.","description":"<p>A function which closes the &#39;Contact us&#39; dialog and the acknowledgement dialog.</p>\\n"},{"name":"submit","args":[{"name":"message","type":"ContactData","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nA function which sends/dispatches a message which contains email, subject, and message. And also opens the acknowledgement dialog box.","description":"<p>A function which sends/dispatches a message which contains email, subject, and message. And also opens the acknowledgement dialog box.</p>\\n","jsdoctags":[{"name":"message","type":"ContactData","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"MatDialogModule","type":"module"},{"name":"ContactModalComponent","type":"component"},{"name":"InfoModalComponent","type":"component"}],"description":"<p>A Component for contact behavior which sends the message entered by the user and shows an acknowledgement</p>\\n","rawdescription":"\\nA Component for contact behavior which sends the message entered by the user and shows an acknowledgement","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { ChangeDetectionStrategy, Component, inject, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { MatDialog, MatDialogModule, MatDialogRef } from \'@angular/material/dialog\';\\nimport { dispatch, selectQuerySnapshot } from \'@hra-ui/cdk/injectors\';\\nimport { ResourceRegistrySelectors as RR } from \'@hra-ui/cdk/state\';\\nimport { ContactData, ContactModalComponent, InfoModalComponent } from \'@hra-ui/components/molecules\';\\nimport { ResourceIds as Ids, ContactActions } from \'@hra-ui/state\';\\nimport { GoogleAnalyticsService } from \'ngx-google-analytics\';\\n\\n/** A Component for contact behavior which sends the message entered by the user and shows an acknowledgement */\\n@Component({\\n  selector: \'ftu-contact-behavior\',\\n  imports: [CommonModule, MatDialogModule, ContactModalComponent, InfoModalComponent],\\n  templateUrl: \'./contact-behavior.component.html\',\\n  styleUrls: [\'./contact-behavior.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ContactBehaviorComponent {\\n  /** A template to post a message */\\n  @ViewChild(\'postMessage\') readonly postMessageTemplate!: TemplateRef<void>;\\n\\n  /** Input for product logo URL to displayed on the left side. */\\n  readonly productLogoUrl = selectQuerySnapshot(RR.url, Ids.ProductLogoUrl);\\n\\n  /** Input for product title to displayed on the left side. */\\n  readonly productTitle = selectQuerySnapshot(RR.anyText, Ids.ProductTitle);\\n\\n  /** Information modal message to the user */\\n  readonly description = selectQuerySnapshot(RR.anyText, Ids.ContactAcknowledgement);\\n\\n  /** A dispatcher function to send message entered by user */\\n  readonly sendMessage = dispatch(ContactActions.SendMessage);\\n\\n  /** A dialog box which shows user an acknowledgement after clicking on submit */\\n  private readonly dialog = inject(MatDialog);\\n\\n  /** A mat form field dialog which accepts the email, subject, and message of user and validates it */\\n  private readonly selfRef = inject(MatDialogRef, { optional: true });\\n\\n  /** Dialog box which references the acknowledgement dialog box */\\n  private postRef?: MatDialogRef<void>;\\n\\n  /** Google analytics tracking service */\\n  private readonly ga = inject(GoogleAnalyticsService);\\n\\n  /** A function which sends/dispatches a message which contains email, subject, and message. And also opens the acknowledgement dialog box. */\\n  submit(message: ContactData): void {\\n    this.sendMessage(message);\\n    this.selfRef?.close();\\n    this.postRef = this.dialog.open(this.postMessageTemplate);\\n  }\\n\\n  /** A function which closes the \'Contact us\' dialog and the acknowledgement dialog.  */\\n  close(): void {\\n    if (this.postRef) {\\n      this.postRef.close();\\n      this.ga.event(\'acknowedgement_close\', \'modal\');\\n    }\\n    if (this.selfRef) {\\n      this.selfRef.close();\\n      this.ga.event(\'contact_close\', \'modal\');\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n\\n  .contact-modal {\\n    width: 41rem;\\n    height: 40rem;\\n  }\\n\\n  .info-modal {\\n    width: 35rem;\\n    height: 11.8rem;\\n  }\\n\\n  @media screen and (max-height: 20.5rem) {\\n    .contact-modal {\\n      height: calc(100vh - 2rem);\\n    }\\n  }\\n}\\n","styleUrl":"./contact-behavior.component.scss"}],"stylesData":"","extends":[],"templateData":"<hra-contact-modal\\n  class=\\"contact-modal\\"\\n  [productLogoUrl]=\\"productLogoUrl()\\"\\n  [productTitle]=\\"productTitle()\\"\\n  (submitClick)=\\"submit($event)\\"\\n  (closeClick)=\\"close()\\"\\n>\\n</hra-contact-modal>\\n\\n<ng-template #postMessage>\\n  <hra-info-modal\\n    class=\\"info-modal\\"\\n    [productLogoUrl]=\\"productLogoUrl()\\"\\n    [productTitle]=\\"productTitle()\\"\\n    [description]=\\"description()\\"\\n    (closeClick)=\\"close()\\"\\n  >\\n  </hra-info-modal>\\n</ng-template>\\n"},{"name":"FooterBehaviorComponent","id":"component-FooterBehaviorComponent-d8c500474c354b0250dc3728c26e98d2605beb57763a74f5558eba94163e733313830c08917b9becdf7567042dabcf243b127ed1056ce95cceb2ac713f73e4bd","file":"libs/components/behavioral/src/lib/footer-behavior/footer-behavior.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ftu-footer-behavior","styleUrls":["./footer-behavior.component.scss"],"styles":[],"templateUrl":["./footer-behavior.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"aboutLink","defaultValue":"LinkIds.About","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Input for about link for user click action.</p>\\n","line":36,"rawdescription":"\\nInput for about link for user click action.","modifierKind":[148]},{"name":"download","defaultValue":"dispatch(DownloadActions.Download)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>A dispatcher function to download file in specified format</p>\\n","line":42,"rawdescription":"\\nA dispatcher function to download file in specified format","modifierKind":[148]},{"name":"downloadFormats","defaultValue":"selectSnapshot(DownloadSelectors.formats)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Selects a snapshot of the current value of the available download formats</p>\\n","line":27,"rawdescription":"\\nSelects a snapshot of the current value of the available download formats","modifierKind":[148]},{"name":"embed","defaultValue":"LinkIds.Embed","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Embed link routing after clicking on Embed</p>\\n","line":39,"rawdescription":"\\nEmbed link routing after clicking on Embed","modifierKind":[148]},{"name":"hraPortal","defaultValue":"LinkIds.Portal","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Hra portal link routing after clicking on HRA Portal</p>\\n","line":30,"rawdescription":"\\nHra portal link routing after clicking on HRA Portal","modifierKind":[148]},{"name":"illustrationMetadata","defaultValue":"LinkIds.Illustration","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Metadata page link routing after clicking on Illustration</p>\\n","line":33,"rawdescription":"\\nMetadata page link routing after clicking on Illustration","modifierKind":[148]},{"name":"productLogoUrl","defaultValue":"selectQuerySnapshot(RR.url, Ids.ProductLogoUrl)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Input for product logo URL to displayed on the left side.</p>\\n","line":21,"rawdescription":"\\nInput for product logo URL to displayed on the left side.","modifierKind":[148]},{"name":"productTitle","defaultValue":"selectQuerySnapshot(RR.anyText, Ids.ProductTitle)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Input for product title to displayed on the left side.</p>\\n","line":24,"rawdescription":"\\nInput for product title to displayed on the left side.","modifierKind":[148]},{"name":"size","defaultValue":"selectSnapshot(ScreenModeSelectors.size)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Selects the current value of the available ScreenMode Size</p>\\n","line":44,"rawdescription":"\\nSelects the current value of the available ScreenMode Size","modifierKind":[148]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"MatDialogModule","type":"module"},{"name":"FooterComponent","type":"component"},{"name":"ContactBehaviorComponent","type":"component"}],"description":"<p>A component for footer behavior which provides functionality for various buttons in footer</p>\\n","rawdescription":"\\nA component for footer behavior which provides functionality for various buttons in footer","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { ChangeDetectionStrategy, Component } from \'@angular/core\';\\nimport { MatDialogModule } from \'@angular/material/dialog\';\\nimport { dispatch, selectQuerySnapshot, selectSnapshot } from \'@hra-ui/cdk/injectors\';\\nimport { ResourceRegistrySelectors as RR } from \'@hra-ui/cdk/state\';\\nimport { FooterComponent } from \'@hra-ui/components/molecules\';\\nimport { DownloadActions, DownloadSelectors, ResourceIds as Ids, LinkIds, ScreenModeSelectors } from \'@hra-ui/state\';\\n\\nimport { ContactBehaviorComponent } from \'../contact-behavior/contact-behavior.component\';\\n\\n/** A component for footer behavior which provides functionality for various buttons in footer */\\n@Component({\\n  selector: \'ftu-footer-behavior\',\\n  imports: [CommonModule, MatDialogModule, FooterComponent, ContactBehaviorComponent],\\n  templateUrl: \'./footer-behavior.component.html\',\\n  styleUrls: [\'./footer-behavior.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FooterBehaviorComponent {\\n  /** Input for product logo URL to displayed on the left side. */\\n  readonly productLogoUrl = selectQuerySnapshot(RR.url, Ids.ProductLogoUrl);\\n\\n  /** Input for product title to displayed on the left side. */\\n  readonly productTitle = selectQuerySnapshot(RR.anyText, Ids.ProductTitle);\\n\\n  /** Selects a snapshot of the current value of the available download formats */\\n  readonly downloadFormats = selectSnapshot(DownloadSelectors.formats);\\n\\n  /** Hra portal link routing after clicking on HRA Portal */\\n  readonly hraPortal = LinkIds.Portal;\\n\\n  /** Metadata page link routing after clicking on Illustration */\\n  readonly illustrationMetadata = LinkIds.Illustration;\\n\\n  /** Input for about link for user click action. */\\n  readonly aboutLink = LinkIds.About;\\n\\n  /** Embed link routing after clicking on Embed */\\n  readonly embed = LinkIds.Embed;\\n\\n  /** A dispatcher function to download file in specified format */\\n  readonly download = dispatch(DownloadActions.Download);\\n  /** Selects the current value of the available ScreenMode Size */\\n  readonly size = selectSnapshot(ScreenModeSelectors.size);\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n  overflow: hidden;\\n}\\n","styleUrl":"./footer-behavior.component.scss"}],"stylesData":"","extends":[],"templateData":"<hra-footer\\n  [productLogoUrl]=\\"productLogoUrl()\\"\\n  [productTitle]=\\"productTitle()\\"\\n  [illustrationMetadata]=\\"illustrationMetadata\\"\\n  [embed]=\\"embed\\"\\n  [downloadFormats]=\\"downloadFormats()\\"\\n  (download)=\\"download($event.id)\\"\\n  [size]=\\"size()\\"\\n  [aboutLink]=\\"aboutLink\\"\\n>\\n</hra-footer>\\n"},{"name":"HeaderBehaviorComponent","id":"component-HeaderBehaviorComponent-eeaaf12c4d6e328ba58245417592b06ae5875e7ec660ceb05ae4496c476f7a1d505045177788469b37bf0927ed5f38a228f167ff9af042548f6f935dd1e366cc","file":"libs/components/behavioral/src/lib/header-behavior/header-behavior.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ftu-header-behavior","styleUrls":["./header-behavior.component.scss"],"styles":[],"templateUrl":["./header-behavior.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"aboutLink","defaultValue":"LinkIds.About","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Input for about link for user click action.</p>\\n","line":43,"rawdescription":"\\n\\nInput for about link for user click action.\\n","modifierKind":[148]},{"name":"appTitle","defaultValue":"selectQuerySnapshot(RR.anyText, Ids.AppTitle)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Input for app title to show on the left side.</p>\\n","line":33,"rawdescription":"\\n\\nInput for app title to show on the left side.\\n","modifierKind":[148]},{"name":"dialog","defaultValue":"inject(MatDialog)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>A dialog box which shows contact modal after clicking on contact</p>\\n","line":46,"rawdescription":"\\nA dialog box which shows contact modal after clicking on contact","modifierKind":[123,148]},{"name":"ga","defaultValue":"inject(GoogleAnalyticsService)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Google analytics tracking service</p>\\n","line":49,"rawdescription":"\\nGoogle analytics tracking service","modifierKind":[123,148]},{"name":"productLogoUrl","defaultValue":"selectQuerySnapshot(RR.url, Ids.ProductLogoUrl)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Input for product logo URL to displayed on the left side.</p>\\n","line":23,"rawdescription":"\\n\\nInput for product logo URL to displayed on the left side.\\n","modifierKind":[148]},{"name":"productTitle","defaultValue":"selectQuerySnapshot(RR.anyText, Ids.ProductTitle)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Input for product title to displayed on the left side.</p>\\n","line":28,"rawdescription":"\\n\\nInput for product title to displayed on the left side.\\n","modifierKind":[148]},{"name":"productTitleLink","defaultValue":"LinkIds.ProductTitle","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Input for product title link for user click action</p>\\n","line":38,"rawdescription":"\\n\\nInput for product title link for user click action\\n","modifierKind":[148]}],"methodsClass":[{"name":"contact","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nA function which opens the contact modal dialog box","description":"<p>A function which opens the contact modal dialog box</p>\\n"}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"HeaderComponent","type":"component"}],"description":"<p>Component for Header Behavior</p>\\n","rawdescription":"\\nComponent for Header Behavior","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { ChangeDetectionStrategy, Component, inject } from \'@angular/core\';\\nimport { MatDialog, MatDialogConfig } from \'@angular/material/dialog\';\\nimport { selectQuerySnapshot } from \'@hra-ui/cdk/injectors\';\\nimport { ResourceRegistrySelectors as RR } from \'@hra-ui/cdk/state\';\\nimport { HeaderComponent } from \'@hra-ui/components/molecules\';\\nimport { ResourceIds as Ids, LinkIds } from \'@hra-ui/state\';\\nimport { GoogleAnalyticsService } from \'ngx-google-analytics\';\\nimport { ContactBehaviorComponent } from \'../contact-behavior/contact-behavior.component\';\\n\\n/** Component for Header Behavior */\\n@Component({\\n  selector: \'ftu-header-behavior\',\\n  imports: [CommonModule, HeaderComponent],\\n  templateUrl: \'./header-behavior.component.html\',\\n  styleUrls: [\'./header-behavior.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class HeaderBehaviorComponent {\\n  /**\\n   * Input for product logo URL to displayed on the left side.\\n   */\\n  readonly productLogoUrl = selectQuerySnapshot(RR.url, Ids.ProductLogoUrl);\\n\\n  /**\\n   * Input for product title to displayed on the left side.\\n   */\\n  readonly productTitle = selectQuerySnapshot(RR.anyText, Ids.ProductTitle);\\n\\n  /**\\n   * Input for app title to show on the left side.\\n   */\\n  readonly appTitle = selectQuerySnapshot(RR.anyText, Ids.AppTitle);\\n\\n  /**\\n   * Input for product title link for user click action\\n   */\\n  readonly productTitleLink = LinkIds.ProductTitle;\\n\\n  /**\\n   * Input for about link for user click action.\\n   */\\n  readonly aboutLink = LinkIds.About;\\n\\n  /** A dialog box which shows contact modal after clicking on contact */\\n  private readonly dialog = inject(MatDialog);\\n\\n  /** Google analytics tracking service */\\n  private readonly ga = inject(GoogleAnalyticsService);\\n\\n  /** A function which opens the contact modal dialog box */\\n  contact(): void {\\n    const dialogConfig = new MatDialogConfig();\\n    dialogConfig.disableClose = true;\\n    this.dialog.open(ContactBehaviorComponent, dialogConfig);\\n    this.ga.event(\'contact_open\', \'modal\');\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n  position: fixed;\\n}\\n","styleUrl":"./header-behavior.component.scss"}],"stylesData":"","extends":[],"templateData":"<hra-header\\n  [productLogoUrl]=\\"productLogoUrl()\\"\\n  [productTitle]=\\"productTitle()\\"\\n  [appTitle]=\\"appTitle()\\"\\n  [productTitleLink]=\\"productTitleLink\\"\\n  [aboutLink]=\\"aboutLink\\"\\n  (contactClick)=\\"contact()\\"\\n>\\n</hra-header>\\n"},{"name":"HraLandingPageIntroWcBehaviourComponent","id":"component-HraLandingPageIntroWcBehaviourComponent-68b9d8cd667b427ebef6b83b05b8cc64c18899e5b144c2d5bf2ef1b91aae9b098f738687da1b6703eadb4c4abdf4013cf33aee7db8dc5a700f079bc5703ee17c","file":"libs/components/behavioral/src/lib/hra-landing-page-intro-wc-behaviour/hra-landing-page-intro-wc-behaviour.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ftu-wc-intro","styleUrls":["./hra-landing-page-intro-wc-behaviour.component.scss"],"styles":[],"templateUrl":["./hra-landing-page-intro-wc-behaviour.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"landingPageIntroDescription","defaultValue":"selectQuerySnapshot(RRS.markdown, RIds.LandingPageDescription)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot for landing page intro description</p>\\n","line":20,"rawdescription":"\\nselect snapshot for landing page intro description","modifierKind":[148]},{"name":"landingPageIntroPartners","defaultValue":"selectQuerySnapshot(RRS.markdown, RIds.LandingPagePartners)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot for landing page intro partners</p>\\n","line":24,"rawdescription":"\\nselect snapshot for landing page intro partners","modifierKind":[148]},{"name":"landingPageIntroReadMore","defaultValue":"selectQuerySnapshot(RRS.markdown, RIds.LandingPageIntroReadMore)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot for landing page intro partners</p>\\n","line":22,"rawdescription":"\\nselect snapshot for landing page intro partners","modifierKind":[148]},{"name":"landingPageIntroTitle","defaultValue":"selectQuerySnapshot(RRS.anyText, RIds.LandingPageTitle)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot for Landing Page title</p>\\n","line":18,"rawdescription":"\\nselect snapshot for Landing Page title","modifierKind":[148]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"HraLandingPageIntroWcComponent","type":"component"}],"description":"<p>Component for LandingPage Intro Behaviour: Web component</p>\\n","rawdescription":"\\nComponent for LandingPage Intro Behaviour: Web component","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { HraLandingPageIntroWcComponent } from \'@hra-ui/components/molecules\';\\nimport { ResourceRegistrySelectors as RRS } from \'@hra-ui/cdk/state\';\\nimport { selectQuerySnapshot } from \'@hra-ui/cdk/injectors\';\\nimport { ResourceIds as RIds } from \'@hra-ui/state\';\\n\\n/** Component for LandingPage Intro Behaviour: Web component */\\n@Component({\\n  selector: \'ftu-wc-intro\',\\n  imports: [CommonModule, HraLandingPageIntroWcComponent],\\n  templateUrl: \'./hra-landing-page-intro-wc-behaviour.component.html\',\\n  styleUrls: [\'./hra-landing-page-intro-wc-behaviour.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class HraLandingPageIntroWcBehaviourComponent {\\n  /** select snapshot for Landing Page title */\\n  readonly landingPageIntroTitle = selectQuerySnapshot(RRS.anyText, RIds.LandingPageTitle);\\n  /** select snapshot for landing page intro description */\\n  readonly landingPageIntroDescription = selectQuerySnapshot(RRS.markdown, RIds.LandingPageDescription);\\n  /** select snapshot for landing page intro partners */\\n  readonly landingPageIntroReadMore = selectQuerySnapshot(RRS.markdown, RIds.LandingPageIntroReadMore);\\n  /** select snapshot for landing page intro partners */\\n  readonly landingPageIntroPartners = selectQuerySnapshot(RRS.markdown, RIds.LandingPagePartners);\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@use \'variables\' as vars;\\n\\n:host {\\n  display: block;\\n\\n  .intro {\\n    border: 1px solid rgba(vars.$light-dividers);\\n    width: 100%;\\n  }\\n}\\n","styleUrl":"./hra-landing-page-intro-wc-behaviour.component.scss"}],"stylesData":"","extends":[],"templateData":"<hra-ui-hra-landing-page-intro-wc\\n  class=\\"intro\\"\\n  [description]=\\"landingPageIntroDescription()\\"\\n  [partners]=\\"landingPageIntroPartners()\\"\\n  [readMore]=\\"landingPageIntroReadMore()\\"\\n  [title]=\\"landingPageIntroTitle()\\"\\n></hra-ui-hra-landing-page-intro-wc>\\n"},{"name":"LandingPageContentComponent","id":"component-LandingPageContentComponent-20cf3e7e003939e49779bb6a6b0299fc59e314e0697ef7d59a071ebe899c845b3e20c09894168a36f76ab286d677055b11cd16334e6a7bfca2ade80a6855db1e","file":"libs/components/behavioral/src/lib/landing-page-content/landing-page-content.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ftu-landing-page-content","styleUrls":["./landing-page-content.component.scss"],"styles":[],"templateUrl":["./landing-page-content.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"baseHref","defaultValue":"selectSnapshot(BaseHrefSelectors.baseHref)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Base href</p>\\n","line":36,"rawdescription":"\\nBase href","modifierKind":[148]},{"name":"destroy$","defaultValue":"injectDestroy$()","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>destroys observer</p>\\n","line":68,"rawdescription":"\\ndestroys observer","modifierKind":[123,148]},{"name":"intersectableEls","deprecated":false,"deprecationMessage":"","type":"QueryList<ElementRef>","indexKey":"","optional":false,"description":"<p>array of element refs for intersectables</p>\\n","line":33,"rawdescription":"\\narray of element refs for intersectables","decorators":[{"name":"ViewChildren","stringifiedArguments":"\'intersectable\', {read: ElementRef}"}],"modifierKind":[170,148]},{"name":"landingPageDepthDescription","defaultValue":"selectQuerySnapshot(RRS.markdown, RIds.LandingPageDepthDescription)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot for landing page depth description</p>\\n","line":56,"rawdescription":"\\nselect snapshot for landing page depth description","modifierKind":[148]},{"name":"landingPageDepthImg","defaultValue":"selectQuerySnapshot(RRS.url, RIds.LandingPageDepthImg)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot for landing page depth img</p>\\n","line":60,"rawdescription":"\\nselect snapshot for landing page depth img","modifierKind":[148]},{"name":"landingPageDepthMoreText","defaultValue":"selectQuerySnapshot(RRS.anyText, RIds.LandingPageDepthMoreText)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot forlanding page depth more text</p>\\n","line":58,"rawdescription":"\\nselect snapshot forlanding page depth more text","modifierKind":[148]},{"name":"landingPageDepthTitle","defaultValue":"selectQuerySnapshot(RRS.anyText, RIds.LandingPageDepthTitle)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot for landing page depth title</p>\\n","line":54,"rawdescription":"\\nselect snapshot for landing page depth title","modifierKind":[148]},{"name":"landingPageIntroDescription","defaultValue":"selectQuerySnapshot(RRS.markdown, RIds.LandingPageDescription)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot for landing page intro description</p>\\n","line":40,"rawdescription":"\\nselect snapshot for landing page intro description","modifierKind":[148]},{"name":"landingPageIntroImg","defaultValue":"selectQuerySnapshot(RRS.url, RIds.LandingPageIntroImg)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot for landing page intro img</p>\\n","line":46,"rawdescription":"\\nselect snapshot for landing page intro img","modifierKind":[148]},{"name":"landingPageIntroMoreText","defaultValue":"selectQuerySnapshot(RRS.anyText, RIds.LandingPageIntroMoreText)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot for landing page intro more text</p>\\n","line":44,"rawdescription":"\\nselect snapshot for landing page intro more text","modifierKind":[148]},{"name":"landingPageIntroPartners","defaultValue":"selectQuerySnapshot(RRS.markdown, RIds.LandingPagePartners)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot for landing page intro partners</p>\\n","line":42,"rawdescription":"\\nselect snapshot for landing page intro partners","modifierKind":[148]},{"name":"landingPageIntroTitle","defaultValue":"selectQuerySnapshot(RRS.anyText, RIds.LandingPageTitle)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot for Landing Page title</p>\\n","line":38,"rawdescription":"\\nselect snapshot for Landing Page title","modifierKind":[148]},{"name":"LinkIds","defaultValue":"LinkIds","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Expose links for use it template</p>\\n","line":63,"rawdescription":"\\nExpose links for use it template","modifierKind":[148]},{"name":"metrics","defaultValue":"selectQuerySnapshot(RRS.field, RIds.Metrics, RTypes.Metrics, \'metrics\' as const, [])<MetricItem[]>","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot for metrics</p>\\n","line":48,"rawdescription":"\\nselect snapshot for metrics","modifierKind":[148]},{"name":"metricsLogo","defaultValue":"selectQuerySnapshot(RRS.url, RIds.MetricsLogo)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot for metrics logo</p>\\n","line":52,"rawdescription":"\\nselect snapshot for metrics logo","modifierKind":[148]},{"name":"metricsTitle","defaultValue":"selectQuerySnapshot(RRS.anyText, RIds.MetricsTitle)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>select snapshot for metrics title</p>\\n","line":50,"rawdescription":"\\nselect snapshot for metrics title","modifierKind":[148]},{"name":"renderer","defaultValue":"inject(Renderer2)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Renderer to add class for animation</p>\\n","line":66,"rawdescription":"\\nRenderer to add class for animation","modifierKind":[123,148]}],"methodsClass":[{"name":"handleIntersection","args":[{"name":"entries","type":"IntersectionObserverEntry[]","deprecated":false,"deprecationMessage":""},{"name":"observer","type":"IntersectionObserver","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","rawdescription":"\\ncallback function for intersection observer","description":"<p>callback function for intersection observer</p>\\n","jsdoctags":[{"name":"entries","type":"IntersectionObserverEntry[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"observer","type":"IntersectionObserver","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","rawdescription":"\\ncreates an observer after view init","description":"<p>creates an observer after view init</p>\\n"}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"LandingPageIntroComponent","type":"component"},{"name":"MetricsComponent","type":"component"},{"name":"LandingPageInDepthComponent","type":"component"}],"description":"<p>Component for LandingPageContent Behavior</p>\\n","rawdescription":"\\nComponent for LandingPageContent Behavior","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport {\\n  AfterViewInit,\\n  ChangeDetectionStrategy,\\n  Component,\\n  ElementRef,\\n  inject,\\n  QueryList,\\n  Renderer2,\\n  ViewChildren,\\n} from \'@angular/core\';\\nimport { injectDestroy$, selectQuerySnapshot, selectSnapshot } from \'@hra-ui/cdk/injectors\';\\nimport { BaseHrefSelectors, ResourceRegistrySelectors as RRS } from \'@hra-ui/cdk/state\';\\nimport {\\n  LandingPageInDepthComponent,\\n  LandingPageIntroComponent,\\n  MetricItem,\\n  MetricsComponent,\\n} from \'@hra-ui/components/molecules\';\\nimport { LinkIds, ResourceIds as RIds, ResourceTypes as RTypes } from \'@hra-ui/state\';\\n\\n/** Component for LandingPageContent Behavior */\\n@Component({\\n  selector: \'ftu-landing-page-content\',\\n  imports: [CommonModule, LandingPageIntroComponent, MetricsComponent, LandingPageInDepthComponent],\\n  templateUrl: \'./landing-page-content.component.html\',\\n  styleUrls: [\'./landing-page-content.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class LandingPageContentComponent implements AfterViewInit {\\n  /** array of element refs for intersectables */\\n  @ViewChildren(\'intersectable\', { read: ElementRef })\\n  readonly intersectableEls!: QueryList<ElementRef>;\\n\\n  /** Base href */\\n  readonly baseHref = selectSnapshot(BaseHrefSelectors.baseHref);\\n  /** select snapshot for Landing Page title */\\n  readonly landingPageIntroTitle = selectQuerySnapshot(RRS.anyText, RIds.LandingPageTitle);\\n  /** select snapshot for landing page intro description */\\n  readonly landingPageIntroDescription = selectQuerySnapshot(RRS.markdown, RIds.LandingPageDescription);\\n  /** select snapshot for landing page intro partners */\\n  readonly landingPageIntroPartners = selectQuerySnapshot(RRS.markdown, RIds.LandingPagePartners);\\n  /** select snapshot for landing page intro more text */\\n  readonly landingPageIntroMoreText = selectQuerySnapshot(RRS.anyText, RIds.LandingPageIntroMoreText);\\n  /** select snapshot for landing page intro img */\\n  readonly landingPageIntroImg = selectQuerySnapshot(RRS.url, RIds.LandingPageIntroImg);\\n  /** select snapshot for metrics */\\n  readonly metrics = selectQuerySnapshot(RRS.field, RIds.Metrics, RTypes.Metrics, \'metrics\' as const, [])<MetricItem[]>;\\n  /** select snapshot for metrics title */\\n  readonly metricsTitle = selectQuerySnapshot(RRS.anyText, RIds.MetricsTitle);\\n  /** select snapshot for metrics logo */\\n  readonly metricsLogo = selectQuerySnapshot(RRS.url, RIds.MetricsLogo);\\n  /** select snapshot for landing page depth title */\\n  readonly landingPageDepthTitle = selectQuerySnapshot(RRS.anyText, RIds.LandingPageDepthTitle);\\n  /** select snapshot for landing page depth description */\\n  readonly landingPageDepthDescription = selectQuerySnapshot(RRS.markdown, RIds.LandingPageDepthDescription);\\n  /** select snapshot forlanding page depth more text */\\n  readonly landingPageDepthMoreText = selectQuerySnapshot(RRS.anyText, RIds.LandingPageDepthMoreText);\\n  /** select snapshot for landing page depth img */\\n  readonly landingPageDepthImg = selectQuerySnapshot(RRS.url, RIds.LandingPageDepthImg);\\n\\n  /** Expose links for use it template */\\n  readonly LinkIds = LinkIds;\\n\\n  /** Renderer to add class for animation */\\n  private readonly renderer = inject(Renderer2);\\n  /** destroys observer */\\n  private readonly destroy$ = injectDestroy$();\\n\\n  /** creates an observer after view init */\\n  ngAfterViewInit(): void {\\n    const observer = new IntersectionObserver(this.handleIntersection.bind(this), {\\n      threshold: 0.18,\\n    });\\n\\n    this.intersectableEls.forEach((el) => observer.observe(el.nativeElement));\\n    this.destroy$.subscribe(() => observer.disconnect());\\n  }\\n\\n  /** callback function for intersection observer */\\n  handleIntersection(entries: IntersectionObserverEntry[], observer: IntersectionObserver): void {\\n    for (const { isIntersecting, target } of entries) {\\n      if (isIntersecting) {\\n        this.renderer.addClass(target, \'visible\');\\n        observer.unobserve(target);\\n      }\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n  overflow-x: hidden;\\n\\n  .intro {\\n    margin: 3.5rem 2rem;\\n  }\\n\\n  .metrics {\\n    opacity: 0;\\n\\n    &.visible {\\n      animation: fadeIn 2s ease-in forwards;\\n    }\\n  }\\n\\n  .in-depth {\\n    opacity: 0;\\n\\n    &.visible {\\n      overflow: hidden;\\n      animation: slideIn 2s ease-in-out forwards;\\n    }\\n  }\\n}\\n\\n@keyframes fadeIn {\\n  0% {\\n    opacity: 0;\\n  }\\n\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes slideIn {\\n  0% {\\n    transform: translateX(200%);\\n    opacity: 1;\\n  }\\n\\n  100% {\\n    transform: translateX(0);\\n    opacity: 1;\\n  }\\n}\\n","styleUrl":"./landing-page-content.component.scss"}],"stylesData":"","extends":[],"implements":["AfterViewInit"],"templateData":"<hra-landing-page-intro\\n  class=\\"intro\\"\\n  [title]=\\"landingPageIntroTitle()\\"\\n  [img]=\\"landingPageIntroImg()\\"\\n  [partners]=\\"landingPageIntroPartners()\\"\\n  [description]=\\"landingPageIntroDescription()\\"\\n  [moreText]=\\"landingPageIntroMoreText()\\"\\n  [moreLink]=\\"LinkIds.ExploreFTU\\"\\n>\\n</hra-landing-page-intro>\\n<hra-metrics\\n  class=\\"metrics\\"\\n  [title]=\\"metricsTitle()\\"\\n  [metrics]=\\"metrics()\\"\\n  [logo]=\\"metricsLogo()\\"\\n  [baseHref]=\\"baseHref()\\"\\n  #intersectable\\n>\\n</hra-metrics>\\n<hra-landing-page-in-depth\\n  class=\\"in-depth\\"\\n  [title]=\\"landingPageDepthTitle()\\"\\n  [description]=\\"landingPageDepthDescription()\\"\\n  [moreText]=\\"landingPageDepthMoreText()\\"\\n  [img]=\\"landingPageDepthImg()\\"\\n  [moreLink]=\\"LinkIds.LandingPageReadMore\\"\\n  #intersectable\\n>\\n</hra-landing-page-in-depth>\\n"},{"name":"MedicalIllustrationBehaviorComponent","id":"component-MedicalIllustrationBehaviorComponent-3fa9009f9a8b3bd6194dcfeda7ba257fe434f482cde1449b5c7b9ebb9e6e83c51b9b63f7d3284cf2ca6552493ba61772cf0ae6d21f6b0fd0116222754208bb96","file":"libs/components/behavioral/src/lib/medical-illustration-behavior/medical-illustration-behavior.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ftu-medical-illustration-behavior","styleUrls":["./medical-illustration-behavior.component.scss"],"styles":[],"templateUrl":["./medical-illustration-behavior.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"currentUrl","defaultValue":"selectSnapshot(IllustratorSelectors.url)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Current illustration url</p>\\n","line":22,"rawdescription":"\\n\\nCurrent illustration url\\n","modifierKind":[148]},{"name":"highlightId","defaultValue":"selectSnapshot(IllustratorSelectors.highlightedCell)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Curent highlighted cell id</p>\\n","line":32,"rawdescription":"\\n\\nCurent highlighted cell id\\n","modifierKind":[148]},{"name":"iri","defaultValue":"selectSnapshot(ActiveFtuSelectors.iri)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Iri  of medical illustration behavior component</p>\\n","line":37,"rawdescription":"\\n\\nIri  of medical illustration behavior component\\n","modifierKind":[148]},{"name":"mapping","defaultValue":"selectSnapshot(IllustratorSelectors.mapping)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Current mapping file</p>\\n","line":27,"rawdescription":"\\n\\nCurrent mapping file\\n","modifierKind":[148]},{"name":"tissues","defaultValue":"selectSnapshot(TissueLibrarySelectors.tissues)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Get all tissues</p>\\n","line":42,"rawdescription":"\\n\\nGet all tissues\\n","modifierKind":[148]},{"name":"updateNodeOnClicked","defaultValue":"dispatch(IllustratorActions.SetClicked)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Updates the active node on node click</p>\\n","line":61,"rawdescription":"\\n\\nUpdates the active node on node click\\n","modifierKind":[148]},{"name":"updateNodeOnHover","defaultValue":"dispatch(IllustratorActions.SetHover)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Updates the active node on node hover</p>\\n","line":56,"rawdescription":"\\n\\nUpdates the active node on node hover\\n","modifierKind":[148]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"InteractiveSvgComponent","type":"component"},{"name":"LabelBoxComponent","type":"component"}],"description":"<p>Behavior component for medical illustration component</p>\\n","rawdescription":"\\n\\nBehavior component for medical illustration component\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { ChangeDetectionStrategy, Component } from \'@angular/core\';\\nimport { dispatch, selectSnapshot } from \'@hra-ui/cdk/injectors\';\\nimport { LabelBoxComponent } from \'@hra-ui/components/atoms\';\\nimport { InteractiveSvgComponent } from \'@hra-ui/components/molecules\';\\nimport { ActiveFtuSelectors, IllustratorActions, IllustratorSelectors, TissueLibrarySelectors } from \'@hra-ui/state\';\\n\\n/**\\n * Behavior component for medical illustration component\\n */\\n@Component({\\n  selector: \'ftu-medical-illustration-behavior\',\\n  imports: [CommonModule, InteractiveSvgComponent, LabelBoxComponent],\\n  templateUrl: \'./medical-illustration-behavior.component.html\',\\n  styleUrls: [\'./medical-illustration-behavior.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class MedicalIllustrationBehaviorComponent {\\n  /**\\n   * Current illustration url\\n   */\\n  readonly currentUrl = selectSnapshot(IllustratorSelectors.url);\\n\\n  /**\\n   * Current mapping file\\n   */\\n  readonly mapping = selectSnapshot(IllustratorSelectors.mapping);\\n\\n  /**\\n   * Curent highlighted cell id\\n   */\\n  readonly highlightId = selectSnapshot(IllustratorSelectors.highlightedCell);\\n\\n  /**\\n   * Iri  of medical illustration behavior component\\n   */\\n  readonly iri = selectSnapshot(ActiveFtuSelectors.iri);\\n\\n  /**\\n   * Get all tissues\\n   */\\n  readonly tissues = selectSnapshot(TissueLibrarySelectors.tissues);\\n\\n  /**\\n   * Gets tissue title from the list of tissues\\n   */\\n  get tissueTitle(): string {\\n    const iri = this.iri();\\n    const tissues = this.tissues();\\n    return iri && tissues ? tissues[iri].label : \'\';\\n  }\\n\\n  /**\\n   * Updates the active node on node hover\\n   */\\n  readonly updateNodeOnHover = dispatch(IllustratorActions.SetHover);\\n\\n  /**\\n   * Updates the active node on node click\\n   */\\n  readonly updateNodeOnClicked = dispatch(IllustratorActions.SetClicked);\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@use \'variables\' as vars;\\n\\n:host {\\n  flex-grow: 1;\\n\\n  hra-label-box {\\n    border-bottom: 1px solid rgba(vars.$light-dividers);\\n    width: 100%;\\n    height: 2.5rem;\\n    font-size: 15px;\\n  }\\n\\n  @media (min-height: 49.5rem) {\\n    hra-label-box {\\n      font-size: 15px;\\n      height: 3rem;\\n    }\\n  }\\n\\n  @media (min-height: 60.75rem) {\\n    hra-label-box {\\n      font-size: 1.25rem;\\n    }\\n  }\\n}\\n","styleUrl":"./medical-illustration-behavior.component.scss"}],"stylesData":"","extends":[],"accessors":{"tissueTitle":{"name":"tissueTitle","getSignature":{"name":"tissueTitle","type":"string","returnType":"string","line":47,"rawdescription":"\\n\\nGets tissue title from the list of tissues\\n","description":"<p>Gets tissue title from the list of tissues</p>\\n"}}},"templateData":"<hra-label-box>{{ tissueTitle }}</hra-label-box>\\n<hra-interactive-svg\\n  [url]=\\"currentUrl()\\"\\n  [mapping]=\\"mapping()\\"\\n  [highlightId]=\\"highlightId()\\"\\n  (nodeHover)=\\"updateNodeOnHover($event)\\"\\n  (nodeClick)=\\"updateNodeOnClicked($event)\\"\\n>\\n</hra-interactive-svg>\\n"},{"name":"ScreenNoticeBehaviorComponent","id":"component-ScreenNoticeBehaviorComponent-14e97ac8afe2c956b3d6fa71baad59c79b4f032e4e76f310164417ec522b65c484831d81e686fdf7902aeefb193cf2918badfa7f9f3791b0f70893ac3e8aedbe","file":"libs/components/behavioral/src/lib/screen-notice-behavior/screen-notice-behavior.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ftu-ui-screen-notice-behavior","styleUrls":["./screen-notice-behavior.component.scss"],"styles":[],"templateUrl":["./screen-notice-behavior.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"content","defaultValue":"selectQuerySnapshot(RR.anyText, ResourceIds.ScreenSizeNoticeContent)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Content  of screen notice behavior component</p>\\n","line":20,"rawdescription":"\\nContent  of screen notice behavior component","modifierKind":[148]},{"name":"portal","defaultValue":"LinkIds.Portal","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Hra portal link routing after clicking on HRA Portal</p>\\n","line":23,"rawdescription":"\\nHra portal link routing after clicking on HRA Portal","modifierKind":[148]},{"name":"ref","defaultValue":"inject(MatDialogRef, { optional: true })","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Reference for the screen size notice dialog box</p>\\n","line":26,"rawdescription":"\\nReference for the screen size notice dialog box","modifierKind":[123,148]},{"name":"setScreenNoticeShown","defaultValue":"dispatch(StorageActions.Set, StorageId.Local, \'screen-size-notice\', \'shown\')","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>A dispatcher function that sets the Local Storage as &#39;shown&#39;</p>\\n","line":29,"rawdescription":"\\nA dispatcher function that sets the Local Storage as \'shown\'","modifierKind":[123,148]}],"methodsClass":[{"name":"close","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","rawdescription":"\\nA function which closes the screen size notice dialog box","description":"<p>A function which closes the screen size notice dialog box</p>\\n"}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"ScreenSizeNoticeComponent","type":"component"}],"description":"<p>A component for screen size notice behavior which provides the content to be displayed and provides functionality\\nfor the buttons on the notice modal</p>\\n","rawdescription":"\\nA component for screen size notice behavior which provides the content to be displayed and provides functionality\\nfor the buttons on the notice modal","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, inject } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { dispatch, selectQuerySnapshot } from \'@hra-ui/cdk/injectors\';\\nimport { ResourceRegistrySelectors as RR, StorageActions, StorageId } from \'@hra-ui/cdk/state\';\\nimport { ResourceIds, LinkIds } from \'@hra-ui/state\';\\nimport { ScreenSizeNoticeComponent } from \'@hra-ui/components/molecules\';\\nimport { MatDialogRef } from \'@angular/material/dialog\';\\n\\n/** A component for screen size notice behavior which provides the content to be displayed and provides functionality\\n * for the buttons on the notice modal */\\n@Component({\\n  selector: \'ftu-ui-screen-notice-behavior\',\\n  imports: [CommonModule, ScreenSizeNoticeComponent],\\n  templateUrl: \'./screen-notice-behavior.component.html\',\\n  styleUrls: [\'./screen-notice-behavior.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ScreenNoticeBehaviorComponent {\\n  /** Content  of screen notice behavior component*/\\n  readonly content = selectQuerySnapshot(RR.anyText, ResourceIds.ScreenSizeNoticeContent);\\n\\n  /** Hra portal link routing after clicking on HRA Portal*/\\n  readonly portal = LinkIds.Portal;\\n\\n  /** Reference for the screen size notice dialog box*/\\n  private readonly ref = inject(MatDialogRef, { optional: true });\\n\\n  /** A dispatcher function that sets the Local Storage as \'shown\'*/\\n  private readonly setScreenNoticeShown = dispatch(StorageActions.Set, StorageId.Local, \'screen-size-notice\', \'shown\');\\n\\n  /** A function which closes the screen size notice dialog box*/\\n  close(): void {\\n    this.setScreenNoticeShown();\\n    this.ref?.close();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n}\\n","styleUrl":"./screen-notice-behavior.component.scss"}],"stylesData":"","extends":[],"templateData":"<hra-screen-size-notice [content]=\\"content()\\" [portal]=\\"portal\\" (proceedClick)=\\"close()\\"> </hra-screen-size-notice>\\n"},{"name":"TissueLibraryBehaviorComponent","id":"component-TissueLibraryBehaviorComponent-e1118ef49a639ca159419d4b9d97db954a3e7a7c7c30766d85678be487f797f5cac5eeefb4047407649b754de258cb69ba5ae670558e49ffe0c8aabc7cc81747","file":"libs/components/behavioral/src/lib/tissue-library-behavior/tissue-library-behavior.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ftu-tissue-library-behavior","styleUrls":["./tissue-library-behavior.component.scss"],"styles":[],"templateUrl":["./tissue-library-behavior.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"list","deprecated":false,"deprecationMessage":"","type":"TissueTreeListComponent<never | never>","indexKey":"","optional":true,"description":"<p>Reference to the TissueTreeListComponent.</p>\\n","line":25,"rawdescription":"\\n\\nReference to the TissueTreeListComponent.\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"\'list\', {static: true}"}],"modifierKind":[170,148]},{"name":"navigate","defaultValue":"dispatch(LinkRegistryActions.Navigate)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Navigates to a tissue page</p>\\n","line":40,"rawdescription":"\\n\\nNavigates to a tissue page\\n"},{"name":"selected","deprecated":false,"deprecationMessage":"","type":"Tissue","indexKey":"","optional":true,"description":"<p>Selected  of tissue library behavior component</p>\\n","line":35,"rawdescription":"\\n\\nSelected  of tissue library behavior component\\n"},{"name":"tissues","defaultValue":"selectSnapshot(TissueLibrarySelectors.tissues)","deprecated":false,"deprecationMessage":"","type":"","indexKey":"","optional":false,"description":"<p>Input for tissues data</p>\\n","line":30,"rawdescription":"\\n\\nInput for tissues data\\n","modifierKind":[148]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"},{"name":"LabelBoxComponent","type":"component"},{"name":"TissueTreeListComponent","type":"component"}],"description":"<p>Component for Tissue Library Behavior</p>\\n","rawdescription":"\\n\\nComponent for Tissue Library Behavior\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\nimport { ChangeDetectionStrategy, Component, ViewChild } from \'@angular/core\';\\nimport { dispatch, select$, selectSnapshot } from \'@hra-ui/cdk/injectors\';\\nimport { LinkRegistryActions } from \'@hra-ui/cdk/state\';\\nimport { LabelBoxComponent } from \'@hra-ui/components/atoms\';\\nimport { TissueTreeListComponent } from \'@hra-ui/components/molecules\';\\nimport { Tissue } from \'@hra-ui/services\';\\nimport { ActiveFtuSelectors, TissueLibrarySelectors } from \'@hra-ui/state\';\\n\\n/**\\n * Component for Tissue Library Behavior\\n */\\n@Component({\\n  selector: \'ftu-tissue-library-behavior\',\\n  imports: [CommonModule, LabelBoxComponent, TissueTreeListComponent],\\n  templateUrl: \'./tissue-library-behavior.component.html\',\\n  styleUrls: [\'./tissue-library-behavior.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class TissueLibraryBehaviorComponent {\\n  /**\\n   * Reference to the TissueTreeListComponent.\\n   */\\n  @ViewChild(\'list\', { static: true })\\n  readonly list?: TissueTreeListComponent<never, never>;\\n\\n  /**\\n   * Input for tissues data\\n   */\\n  readonly tissues = selectSnapshot(TissueLibrarySelectors.tissues);\\n\\n  /**\\n   * Selected  of tissue library behavior component\\n   */\\n  selected?: Tissue;\\n\\n  /**\\n   * Navigates to a tissue page\\n   */\\n  navigate = dispatch(LinkRegistryActions.Navigate);\\n\\n  /**\\n   * Sets the TissueItem instance as undefined if the url is undefined\\n   */\\n  constructor() {\\n    /** Get iris from the observable else reset selection if iri is undefined */\\n    select$(ActiveFtuSelectors.iri).subscribe((iri) => {\\n      this.selected = iri && this.tissues() && this.tissues()[iri];\\n      if (iri === undefined) {\\n        this.list?.resetSelection();\\n      }\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@use \'variables\' as vars;\\n\\n:host {\\n  display: flex;\\n  flex-direction: column;\\n\\n  hra-label-box {\\n    border-bottom: 1px solid rgba(vars.$light-dividers);\\n    width: 100%;\\n    height: 2.5rem;\\n    font-size: 15px;\\n  }\\n\\n  @media (min-height: 49.5rem) {\\n    hra-label-box {\\n      font-size: 15px;\\n      height: 3rem;\\n    }\\n  }\\n\\n  @media (min-height: 60.75rem) {\\n    hra-label-box {\\n      font-size: 1.25rem;\\n    }\\n  }\\n}\\n","styleUrl":"./tissue-library-behavior.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"<p>Sets the TissueItem instance as undefined if the url is undefined</p>\\n","deprecated":false,"deprecationMessage":"","args":[],"line":40,"rawdescription":"\\n\\nSets the TissueItem instance as undefined if the url is undefined\\n"},"extends":[],"templateData":"<hra-label-box>FTU Library</hra-label-box>\\n<hra-tissue-tree-list\\n  class=\\"tissue-tree\\"\\n  [nodes]=\\"tissues()\\"\\n  (navigate)=\\"navigate($event.link, { queryParams: { id: $event.id } })\\"\\n  [(selected)]=\\"selected\\"\\n  #list\\n>\\n</hra-tissue-tree-list>\\n"}],"modules":[],"miscellaneous":{"variables":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/hra-landing-page-intro-wc-behaviour/landing-page-content.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: Template,\\n}"},{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/landing-page-content/landing-page-content.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: Template,\\n}"},{"name":"EMPTY_TISSUE_INFO","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.ts","deprecated":false,"deprecationMessage":"","type":"TissueInfo","defaultValue":"{\\n  id: \'\',\\n  label: \'\',\\n}","rawdescription":"PlaceHolder for Empty Tissue Info","description":"<p>PlaceHolder for Empty Tissue Info</p>\\n"},{"name":"EMPTY_TISSUE_INFO","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/biomarker-details-wc/biomarker-details-wc.component.ts","deprecated":false,"deprecationMessage":"","type":"TissueInfo","defaultValue":"{\\n  id: \'\',\\n  label: \'\',\\n}","rawdescription":"PlaceHolder for Empty Tissue Info","description":"<p>PlaceHolder for Empty Tissue Info</p>\\n"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: Template,\\n  args: {},\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/contact-behavior/contact-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: Template,\\n  args: {},\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/footer-behavior/footer-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: Template,\\n  args: {},\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/header-behavior/header-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: Template,\\n  args: {},\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/medical-illustration-behavior/medical-illustration-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: Template,\\n  args: {},\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/tissue-library-behavior/tissue-library-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: TissueLibraryBehaviorComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"StoryFn<BiomarkerDetailsComponent>","defaultValue":"(args) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/contact-behavior/contact-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"StoryFn<ContactBehaviorComponent>","defaultValue":"(args) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/footer-behavior/footer-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"StoryFn<FooterBehaviorComponent>","defaultValue":"(args) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/header-behavior/header-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"StoryFn<HeaderBehaviorComponent>","defaultValue":"(args) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/hra-landing-page-intro-wc-behaviour/landing-page-content.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"StoryFn<HraLandingPageIntroWcBehaviourComponent>","defaultValue":"(args) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/landing-page-content/landing-page-content.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"StoryFn<LandingPageContentComponent>","defaultValue":"(args) => ({\\n  props: args,\\n})"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/medical-illustration-behavior/medical-illustration-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"StoryFn<MedicalIllustrationBehaviorComponent>","defaultValue":"(args) => ({\\n  props: args,\\n})"}],"functions":[{"name":"createDataItem","file":"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.stories.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"label","type":"string","deprecated":false,"deprecationMessage":""},{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"DataItem","jsdoctags":[{"name":"label","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"typealiases":[],"enumerations":[],"groupedVariables":{"libs/components/behavioral/src/lib/hra-landing-page-intro-wc-behaviour/landing-page-content.component.stories.ts":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/hra-landing-page-intro-wc-behaviour/landing-page-content.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: Template,\\n}"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/hra-landing-page-intro-wc-behaviour/landing-page-content.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"StoryFn<HraLandingPageIntroWcBehaviourComponent>","defaultValue":"(args) => ({\\n  props: args,\\n})"}],"libs/components/behavioral/src/lib/landing-page-content/landing-page-content.component.stories.ts":[{"name":"Default","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/landing-page-content/landing-page-content.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: Template,\\n}"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/landing-page-content/landing-page-content.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"StoryFn<LandingPageContentComponent>","defaultValue":"(args) => ({\\n  props: args,\\n})"}],"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.ts":[{"name":"EMPTY_TISSUE_INFO","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.ts","deprecated":false,"deprecationMessage":"","type":"TissueInfo","defaultValue":"{\\n  id: \'\',\\n  label: \'\',\\n}","rawdescription":"PlaceHolder for Empty Tissue Info","description":"<p>PlaceHolder for Empty Tissue Info</p>\\n"}],"libs/components/behavioral/src/lib/biomarker-details-wc/biomarker-details-wc.component.ts":[{"name":"EMPTY_TISSUE_INFO","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/biomarker-details-wc/biomarker-details-wc.component.ts","deprecated":false,"deprecationMessage":"","type":"TissueInfo","defaultValue":"{\\n  id: \'\',\\n  label: \'\',\\n}","rawdescription":"PlaceHolder for Empty Tissue Info","description":"<p>PlaceHolder for Empty Tissue Info</p>\\n"}],"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: Template,\\n  args: {},\\n}"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"StoryFn<BiomarkerDetailsComponent>","defaultValue":"(args) => ({\\n  props: args,\\n})"}],"libs/components/behavioral/src/lib/contact-behavior/contact-behavior.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/contact-behavior/contact-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: Template,\\n  args: {},\\n}"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/contact-behavior/contact-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"StoryFn<ContactBehaviorComponent>","defaultValue":"(args) => ({\\n  props: args,\\n})"}],"libs/components/behavioral/src/lib/footer-behavior/footer-behavior.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/footer-behavior/footer-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: Template,\\n  args: {},\\n}"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/footer-behavior/footer-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"StoryFn<FooterBehaviorComponent>","defaultValue":"(args) => ({\\n  props: args,\\n})"}],"libs/components/behavioral/src/lib/header-behavior/header-behavior.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/header-behavior/header-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: Template,\\n  args: {},\\n}"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/header-behavior/header-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"StoryFn<HeaderBehaviorComponent>","defaultValue":"(args) => ({\\n  props: args,\\n})"}],"libs/components/behavioral/src/lib/medical-illustration-behavior/medical-illustration-behavior.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/medical-illustration-behavior/medical-illustration-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: Template,\\n  args: {},\\n}"},{"name":"Template","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/medical-illustration-behavior/medical-illustration-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"StoryFn<MedicalIllustrationBehaviorComponent>","defaultValue":"(args) => ({\\n  props: args,\\n})"}],"libs/components/behavioral/src/lib/tissue-library-behavior/tissue-library-behavior.component.stories.ts":[{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"libs/components/behavioral/src/lib/tissue-library-behavior/tissue-library-behavior.component.stories.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  render: (args: TissueLibraryBehaviorComponent) => ({\\n    props: args,\\n  }),\\n  args: {},\\n}"}]},"groupedFunctions":{"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.stories.ts":[{"name":"createDataItem","file":"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.stories.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"label","type":"string","deprecated":false,"deprecationMessage":""},{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"DataItem","jsdoctags":[{"name":"label","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}]},"groupedEnumerations":{},"groupedTypeAliases":{}},"routes":[],"coverage":{"count":42,"status":"medium","files":[{"filePath":"libs/components/behavioral/src/lib/biomarker-details-wc/biomarker-details-wc.component.ts","type":"component","linktype":"component","name":"BiomarkerDetailsWcComponent","coveragePercent":100,"coverageCount":"28/28","status":"very-good"},{"filePath":"libs/components/behavioral/src/lib/biomarker-details-wc/biomarker-details-wc.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"EMPTY_TISSUE_INFO","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.stories.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"createDataItem","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.ts","type":"component","linktype":"component","name":"BiomarkerDetailsComponent","coveragePercent":100,"coverageCount":"28/28","status":"very-good"},{"filePath":"libs/components/behavioral/src/lib/biomarker-details/biomarker-details.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"EMPTY_TISSUE_INFO","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"libs/components/behavioral/src/lib/contact-behavior/contact-behavior.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/contact-behavior/contact-behavior.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/contact-behavior/contact-behavior.component.ts","type":"component","linktype":"component","name":"ContactBehaviorComponent","coveragePercent":100,"coverageCount":"12/12","status":"very-good"},{"filePath":"libs/components/behavioral/src/lib/footer-behavior/footer-behavior.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/footer-behavior/footer-behavior.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/footer-behavior/footer-behavior.component.ts","type":"component","linktype":"component","name":"FooterBehaviorComponent","coveragePercent":100,"coverageCount":"10/10","status":"very-good"},{"filePath":"libs/components/behavioral/src/lib/header-behavior/header-behavior.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/header-behavior/header-behavior.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/header-behavior/header-behavior.component.ts","type":"component","linktype":"component","name":"HeaderBehaviorComponent","coveragePercent":100,"coverageCount":"9/9","status":"very-good"},{"filePath":"libs/components/behavioral/src/lib/hra-landing-page-intro-wc-behaviour/hra-landing-page-intro-wc-behaviour.component.ts","type":"component","linktype":"component","name":"HraLandingPageIntroWcBehaviourComponent","coveragePercent":100,"coverageCount":"5/5","status":"very-good"},{"filePath":"libs/components/behavioral/src/lib/hra-landing-page-intro-wc-behaviour/landing-page-content.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/hra-landing-page-intro-wc-behaviour/landing-page-content.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/landing-page-content/landing-page-content.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Default","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/landing-page-content/landing-page-content.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/landing-page-content/landing-page-content.component.ts","type":"component","linktype":"component","name":"LandingPageContentComponent","coveragePercent":100,"coverageCount":"20/20","status":"very-good"},{"filePath":"libs/components/behavioral/src/lib/medical-illustration-behavior/medical-illustration-behavior.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/medical-illustration-behavior/medical-illustration-behavior.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Template","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/medical-illustration-behavior/medical-illustration-behavior.component.ts","type":"component","linktype":"component","name":"MedicalIllustrationBehaviorComponent","coveragePercent":100,"coverageCount":"8/8","status":"very-good"},{"filePath":"libs/components/behavioral/src/lib/screen-notice-behavior/screen-notice-behavior.component.ts","type":"component","linktype":"component","name":"ScreenNoticeBehaviorComponent","coveragePercent":100,"coverageCount":"6/6","status":"very-good"},{"filePath":"libs/components/behavioral/src/lib/tissue-library-behavior/tissue-library-behavior.component.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/components/behavioral/src/lib/tissue-library-behavior/tissue-library-behavior.component.ts","type":"component","linktype":"component","name":"TissueLibraryBehaviorComponent","coveragePercent":100,"coverageCount":"6/6","status":"very-good"}]}}');var module_Bnny_XF2=__webpack_require__("./node_modules/@angular/common/fesm2022/module-Bnny_XF2.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),animations=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),ngxs_logger_plugin=__webpack_require__("./node_modules/@ngxs/logger-plugin/fesm2022/ngxs-logger-plugin.mjs"),ngxs_store=__webpack_require__("./node_modules/@ngxs/store/fesm2022/ngxs-store.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),ngx_markdown=__webpack_require__("./node_modules/ngx-markdown/fesm2022/ngx-markdown.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),angular_material_css_vars=__webpack_require__("./node_modules/angular-material-css-vars/fesm2022/angular-material-css-vars.mjs"),js_yaml=__webpack_require__("./node_modules/js-yaml/dist/js-yaml.mjs"),map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js"),tap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/tap.js"),Observable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js");class Load{static{this.type="[Theming] Load Theming File"}constructor(url){this.url=url,this.type=Load.type}}var lib=__webpack_require__("./node_modules/zod/lib/index.mjs");const THEMING_FILE_SCHEMA=lib.z.record(lib.z.nativeEnum(angular_material_css_vars.GC),lib.z.string());let ThemingState=class ThemingState{constructor(){this.http=(0,core.inject)(module_Bnny_XF2.a),this.materialVars=(0,core.inject)(angular_material_css_vars.EH)}load(ctx,{url}){return this.http.get(url,{responseType:"text"}).pipe((0,map.T)((data=>(0,js_yaml.Hh)(data,{filename:url}))),(0,map.T)((data=>THEMING_FILE_SCHEMA.parse(data))),(0,tap.M)((data=>ctx.setState(data))),(0,tap.M)((data=>this.setVariables(data))))}setVariables(data){for(const[key,value]of Object.entries(data))this.materialVars.setVariable(key,value)}};(0,tslib_es6.Cg)([(0,ngxs_store.rc)(Load),(0,tslib_es6.Sn)("design:type",Function),(0,tslib_es6.Sn)("design:paramtypes",[Object,Load]),(0,tslib_es6.Sn)("design:returntype",Observable.c)],ThemingState.prototype,"load",null),ThemingState=(0,tslib_es6.Cg)([(0,ngxs_store.Uw)({name:"theming",defaults:{}}),(0,core.Injectable)()],ThemingState);let ThemingModule=class ThemingModule{};function parseDefaultValue(type){const{defaultValue,type:typeDef}=type;if(void 0===defaultValue||"string"!=typeof defaultValue||"string"===typeDef?.name)return defaultValue;switch(typeDef?.name){case"array":case"boolean":case"number":case"object":try{return new Function("return "+defaultValue)()}catch(_error){return}case"enum":return typeDef.value.includes(defaultValue)?defaultValue:void 0;default:return}}ThemingModule=(0,tslib_es6.Cg)([(0,core.NgModule)({imports:[angular_material_css_vars.tY.forRoot({}),ngxs_store.rK.forFeature([ThemingState])]})],ThemingModule);const parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/}},docs:{inlineStories:!0}},argTypesEnhancers=[function fixArgTypes(){return context=>{const argTypes={...context.argTypes},exclude=[...context.parameters.controls?.exclude??[]];for(const[key,type]of Object.entries(argTypes))switch(type.table?.category){case"inputs":const defaultValue=parseDefaultValue(type);defaultValue!==type.defaultValue&&(argTypes[key]={...type,defaultValue});break;case"outputs":argTypes[key]={...type,defaultValue:void 0};break;default:exclude.push(key)}return context.parameters.controls={...context.parameters.controls,exclude},argTypes}}()],decorators=[(0,dist.applicationConfig)({providers:[(0,core.importProvidersFrom)(animations.BrowserAnimationsModule,module_Bnny_XF2.o,ngxs_store.rK.forRoot([],{developmentMode:!0}),ngxs_logger_plugin.i_.forRoot(),ngx_markdown.y2.forRoot({loader:module_Bnny_XF2.a}),ThemingModule)]}),(0,dist.componentWrapperDecorator)((story=>`\n      <div class="mat-typography">${story}</div>\n      <div class="backdrop-filler" style="position: absolute; inset: 0; z-index: -1;"></div>\n    `)),function addState(){return(fn,ctx)=>{const config=ctx.parameters.state;return config?(0,dist.applicationConfig)({providers:[(0,core.importProvidersFrom)(ngxs_store.rK.forFeature(config.states)),{provide:core.APP_INITIALIZER,multi:!0,useFactory:store=>()=>{const{actions}=config;return actions&&actions.length>0?store.dispatch(actions):void 0},deps:[ngxs_store.il]}]})(fn,ctx):fn(ctx)}}()];(0,angular.$)(documentation_namespaceObject)},"./node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"./storybook-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var external_STORYBOOK_MODULE_CHANNELS_=__webpack_require__("storybook/internal/channels"),csf=__webpack_require__("./node_modules/@storybook/core/dist/csf/index.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),asyncToGenerator=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");const importers=[function(){var _ref=(0,asyncToGenerator.A)((function*(path){if(!/^\.[\\/](?:libs\/components\/behavioral(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.mdx)$/.exec(path))return;const pathRemainder=path.substring(29);return __webpack_require__("./libs/components/behavioral lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/libs\\/components\\/behavioral(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$")("./"+pathRemainder)}));return function(_x){return _ref.apply(this,arguments)}}(),function(){var _ref2=(0,asyncToGenerator.A)((function*(path){if(!/^\.[\\/](?:libs\/components\/behavioral(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|ts|tsx))$/.exec(path))return;const pathRemainder=path.substring(29);return __webpack_require__("./libs/components/behavioral lazy recursive ^\\.\\/.*$ include: (?%21.*node_modules)(?:\\/libs\\/components\\/behavioral(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cts%7Ctsx))$")("./"+pathRemainder)}));return function(_x2){return _ref2.apply(this,arguments)}}()];function _importFn(){return(_importFn=(0,asyncToGenerator.A)((function*(path){for(let i=0;i<importers.length;i++){const moduleExports=yield(x=()=>importers[i](path),x());if(moduleExports)return moduleExports}var x}))).apply(this,arguments)}const channel=(0,external_STORYBOOK_MODULE_CHANNELS_.createBrowserChannel)({page:"preview"});external_STORYBOOK_MODULE_PREVIEW_API_.addons.setChannel(channel),"DEVELOPMENT"===external_STORYBOOK_MODULE_GLOBAL_.global.CONFIG_TYPE&&(window.__STORYBOOK_SERVER_CHANNEL__=channel);const preview=new external_STORYBOOK_MODULE_PREVIEW_API_.PreviewWeb((function importFn(_x3){return _importFn.apply(this,arguments)}),(()=>{const previewAnnotations=[__webpack_require__("./node_modules/@storybook/angular/dist/client/preview-prod.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/docs/config.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/config.js"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/actions/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/docs/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/backgrounds/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/viewport/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/measure/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/outline/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/highlight/preview.mjs"),__webpack_require__("./libs/components/behavioral/.storybook/preview.ts")],userPreview=previewAnnotations[previewAnnotations.length-1]?.default;return(0,csf.bU)(userPreview)?userPreview.composed:(0,external_STORYBOOK_MODULE_PREVIEW_API_.composeConfigs)(previewAnnotations)}));window.__STORYBOOK_PREVIEW__=preview,window.__STORYBOOK_STORY_STORE__=preview.storyStore,window.__STORYBOOK_ADDONS_CHANNEL__=channel},"@storybook/global":module=>{"use strict";module.exports=__STORYBOOK_MODULE_GLOBAL__},"storybook/internal/channels":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CHANNELS__},"storybook/internal/client-logger":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CLIENT_LOGGER__},"storybook/internal/core-events":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS__},"storybook/internal/preview-api":module=>{"use strict";module.exports=__STORYBOOK_MODULE_PREVIEW_API__},"storybook/internal/preview-errors":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS__}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[784],(()=>(__webpack_exec__("./node_modules/@angular/compiler/fesm2022/compiler.mjs"),__webpack_exec__("./node_modules/zone.js/fesm2015/zone.js"),__webpack_exec__("./storybook-config-entry.js"))));__webpack_require__.O()}]);