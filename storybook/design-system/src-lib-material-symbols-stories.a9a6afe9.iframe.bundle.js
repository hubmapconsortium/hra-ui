"use strict";(self.webpackChunkhra_ui=self.webpackChunkhra_ui||[]).push([[313],{"./libs/design-system/src/lib/material-symbols.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BuiltinSymbols:()=>BuiltinSymbols,CustomSymbols:()=>CustomSymbols,OrganIcons:()=>OrganIcons,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _angular_material_icon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/material/fesm2022/icon-module-529f932b.mjs"),_storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_providers__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/design-system/src/lib/providers.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"MaterialSymbols",decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.applicationConfig)({providers:[(0,_providers__WEBPACK_IMPORTED_MODULE_1__.z)()]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_material_icon__WEBPACK_IMPORTED_MODULE_2__.M]})]},BuiltinSymbols={args:{name:"search"},argTypes:{name:{type:"string",description:"Icon name"}},render:args=>({props:args,template:`<mat-icon>${args.name}</mat-icon>`})},CustomSymbols={args:{name:"social:github"},argTypes:{name:{control:"select",options:["upload","settings_alert","social:github","social:facebook","social:instagram","social:linkedin","social:x","social:youtube"]}},render:args=>({props:args,template:`<mat-icon svgIcon=${args.name}></mat-icon>`})},OrganIcons={args:{name:"organ:all_organs",color:"black",size:4},argTypes:{name:{control:"select",options:["organ:all_organs","organ:bladder","organ:blood","organ:bone_marrow","organ:brain","organ:breast","organ:eye","organ:fallopian_tube_left","organ:fallopian_tube_right","organ:heart","organ:kidney_left","organ:kidney_right","organ:kidneys","organ:knee","organ:large_intestine","organ:liver","organ:lung_left","organ:lung_right","organ:lungs","organ:lymph_nodes","organ:neurons","organ:ovaries","organ:ovary_left","organ:ovary_right","organ:pancreas","organ:pelvis","organ:peripehral_nervous_system","organ:placenta","organ:prostate","organ:skin","organ:small_intestine","organ:spinal_cord","organ:spleen","organ:stomach","organ:thymus","organ:ureter_left","organ:ureter_right","organ:uterus","organ:vasculature_thick","organ:vasculature_thin","organ:extrapulmonary_bronchus","organ:larynx","organ:palatine_tonsil","organ:trachea"]},color:{control:"select",options:["black","red","blue","green"]},size:{control:"select",options:[2,4,6]}},render:args=>({props:args,template:`<mat-icon svgIcon=${args.name}></mat-icon>`,styles:[`mat-icon {\n        --mat-icon-color: ${args.color};\n        height: ${args.size}rem;\n        width: ${args.size}rem;\n      }`]})},__namedExportsOrder=["BuiltinSymbols","CustomSymbols","OrganIcons"];BuiltinSymbols.parameters={...BuiltinSymbols.parameters,docs:{...BuiltinSymbols.parameters?.docs,source:{originalSource:"{\n  args: {\n    name: 'search'\n  },\n  argTypes: {\n    name: {\n      type: 'string',\n      description: 'Icon name'\n    }\n  },\n  render: args => ({\n    props: args,\n    template: `<mat-icon>${args['name']}</mat-icon>`\n  })\n}",...BuiltinSymbols.parameters?.docs?.source}}},CustomSymbols.parameters={...CustomSymbols.parameters,docs:{...CustomSymbols.parameters?.docs,source:{originalSource:"{\n  args: {\n    name: 'social:github'\n  },\n  argTypes: {\n    name: {\n      control: 'select',\n      options: ['upload', 'settings_alert', 'social:github', 'social:facebook', 'social:instagram', 'social:linkedin', 'social:x', 'social:youtube']\n    }\n  },\n  render: args => ({\n    props: args,\n    template: `<mat-icon svgIcon=${args['name']}></mat-icon>`\n  })\n}",...CustomSymbols.parameters?.docs?.source}}},OrganIcons.parameters={...OrganIcons.parameters,docs:{...OrganIcons.parameters?.docs,source:{originalSource:"{\n  args: {\n    name: 'organ:all_organs',\n    color: 'black',\n    size: 4\n  },\n  argTypes: {\n    name: {\n      control: 'select',\n      options: ['organ:all_organs', 'organ:bladder', 'organ:blood', 'organ:bone_marrow', 'organ:brain', 'organ:breast', 'organ:eye', 'organ:fallopian_tube_left', 'organ:fallopian_tube_right', 'organ:heart', 'organ:kidney_left', 'organ:kidney_right', 'organ:kidneys', 'organ:knee', 'organ:large_intestine', 'organ:liver', 'organ:lung_left', 'organ:lung_right', 'organ:lungs', 'organ:lymph_nodes', 'organ:neurons', 'organ:ovaries', 'organ:ovary_left', 'organ:ovary_right', 'organ:pancreas', 'organ:pelvis', 'organ:peripehral_nervous_system', 'organ:placenta', 'organ:prostate', 'organ:skin', 'organ:small_intestine', 'organ:spinal_cord', 'organ:spleen', 'organ:stomach', 'organ:thymus', 'organ:ureter_left', 'organ:ureter_right', 'organ:uterus', 'organ:vasculature_thick', 'organ:vasculature_thin', 'organ:extrapulmonary_bronchus', 'organ:larynx', 'organ:palatine_tonsil', 'organ:trachea']\n    },\n    color: {\n      control: 'select',\n      options: ['black', 'red', 'blue', 'green']\n    },\n    size: {\n      control: 'select',\n      options: [2, 4, 6]\n    }\n  },\n  render: args => ({\n    props: args,\n    template: `<mat-icon svgIcon=${args['name']}></mat-icon>`,\n    styles: [`mat-icon {\n        --mat-icon-color: ${args['color']};\n        height: ${args['size']}rem;\n        width: ${args['size']}rem;\n      }`]\n  })\n}",...OrganIcons.parameters?.docs?.source}}}},"./node_modules/@angular/material/fesm2022/icon-module-529f932b.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>MatIconModule});var _angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/common/fesm2022/dom_tokens-CNpAxedO.mjs"),rxjs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Subscription.js"),rxjs_operators__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/take.js"),_icon_registry_718f45c4_mjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/material/fesm2022/icon-registry-718f45c4.mjs"),_common_module_5a9c16bb_mjs__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular/material/fesm2022/common-module-5a9c16bb.mjs");const _c0=["*"],MAT_ICON_DEFAULT_OPTIONS=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken("MAT_ICON_DEFAULT_OPTIONS"),MAT_ICON_LOCATION=new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken("mat-icon-location",{providedIn:"root",factory:function MAT_ICON_LOCATION_FACTORY(){const _document=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(_angular_common__WEBPACK_IMPORTED_MODULE_1__.D),_location=_document?_document.location:null;return{getPathname:()=>_location?_location.pathname+_location.search:""}}});const funcIriAttributes=["clip-path","color-profile","src","cursor","fill","filter","marker","marker-start","marker-mid","marker-end","mask","stroke"],funcIriAttributeSelector=funcIriAttributes.map((attr=>`[${attr}]`)).join(", "),funcIriPattern=/^url\(['"]?#(.*?)['"]?\)$/;class MatIcon{_elementRef=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef);_iconRegistry=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(_icon_registry_718f45c4_mjs__WEBPACK_IMPORTED_MODULE_2__.M);_location=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(MAT_ICON_LOCATION);_errorHandler=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.ErrorHandler);_defaultColor;get color(){return this._color||this._defaultColor}set color(value){this._color=value}_color;inline=!1;get svgIcon(){return this._svgIcon}set svgIcon(value){value!==this._svgIcon&&(value?this._updateSvgIcon(value):this._svgIcon&&this._clearSvgElement(),this._svgIcon=value)}_svgIcon;get fontSet(){return this._fontSet}set fontSet(value){const newValue=this._cleanupFontValue(value);newValue!==this._fontSet&&(this._fontSet=newValue,this._updateFontIconClasses())}_fontSet;get fontIcon(){return this._fontIcon}set fontIcon(value){const newValue=this._cleanupFontValue(value);newValue!==this._fontIcon&&(this._fontIcon=newValue,this._updateFontIconClasses())}_fontIcon;_previousFontSetClass=[];_previousFontIconClass;_svgName;_svgNamespace;_previousPath;_elementsWithExternalReferences;_currentIconFetch=rxjs__WEBPACK_IMPORTED_MODULE_3__.yU.EMPTY;constructor(){const ariaHidden=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(new _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostAttributeToken("aria-hidden"),{optional:!0}),defaults=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(MAT_ICON_DEFAULT_OPTIONS,{optional:!0});defaults&&(defaults.color&&(this.color=this._defaultColor=defaults.color),defaults.fontSet&&(this.fontSet=defaults.fontSet)),ariaHidden||this._elementRef.nativeElement.setAttribute("aria-hidden","true")}_splitIconName(iconName){if(!iconName)return["",""];const parts=iconName.split(":");switch(parts.length){case 1:return["",parts[0]];case 2:return parts;default:throw Error(`Invalid icon name: "${iconName}"`)}}ngOnInit(){this._updateFontIconClasses()}ngAfterViewChecked(){const cachedElements=this._elementsWithExternalReferences;if(cachedElements&&cachedElements.size){const newPath=this._location.getPathname();newPath!==this._previousPath&&(this._previousPath=newPath,this._prependPathToReferences(newPath))}}ngOnDestroy(){this._currentIconFetch.unsubscribe(),this._elementsWithExternalReferences&&this._elementsWithExternalReferences.clear()}_usingFontIcon(){return!this.svgIcon}_setSvgElement(svg){this._clearSvgElement();const path=this._location.getPathname();this._previousPath=path,this._cacheChildrenWithExternalReferences(svg),this._prependPathToReferences(path),this._elementRef.nativeElement.appendChild(svg)}_clearSvgElement(){const layoutElement=this._elementRef.nativeElement;let childCount=layoutElement.childNodes.length;for(this._elementsWithExternalReferences&&this._elementsWithExternalReferences.clear();childCount--;){const child=layoutElement.childNodes[childCount];1===child.nodeType&&"svg"!==child.nodeName.toLowerCase()||child.remove()}}_updateFontIconClasses(){if(!this._usingFontIcon())return;const elem=this._elementRef.nativeElement,fontSetClasses=(this.fontSet?this._iconRegistry.classNameForFontAlias(this.fontSet).split(/ +/):this._iconRegistry.getDefaultFontSetClass()).filter((className=>className.length>0));this._previousFontSetClass.forEach((className=>elem.classList.remove(className))),fontSetClasses.forEach((className=>elem.classList.add(className))),this._previousFontSetClass=fontSetClasses,this.fontIcon===this._previousFontIconClass||fontSetClasses.includes("mat-ligature-font")||(this._previousFontIconClass&&elem.classList.remove(this._previousFontIconClass),this.fontIcon&&elem.classList.add(this.fontIcon),this._previousFontIconClass=this.fontIcon)}_cleanupFontValue(value){return"string"==typeof value?value.trim().split(" ")[0]:value}_prependPathToReferences(path){const elements=this._elementsWithExternalReferences;elements&&elements.forEach(((attrs,element)=>{attrs.forEach((attr=>{element.setAttribute(attr.name,`url('${path}#${attr.value}')`)}))}))}_cacheChildrenWithExternalReferences(element){const elementsWithFuncIri=element.querySelectorAll(funcIriAttributeSelector),elements=this._elementsWithExternalReferences=this._elementsWithExternalReferences||new Map;for(let i=0;i<elementsWithFuncIri.length;i++)funcIriAttributes.forEach((attr=>{const elementWithReference=elementsWithFuncIri[i],value=elementWithReference.getAttribute(attr),match=value?value.match(funcIriPattern):null;if(match){let attributes=elements.get(elementWithReference);attributes||(attributes=[],elements.set(elementWithReference,attributes)),attributes.push({name:attr,value:match[1]})}}))}_updateSvgIcon(rawName){if(this._svgNamespace=null,this._svgName=null,this._currentIconFetch.unsubscribe(),rawName){const[namespace,iconName]=this._splitIconName(rawName);namespace&&(this._svgNamespace=namespace),iconName&&(this._svgName=iconName),this._currentIconFetch=this._iconRegistry.getNamedSvgIcon(iconName,namespace).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.s)(1)).subscribe((svg=>this._setSvgElement(svg)),(err=>{const errorMessage=`Error retrieving icon ${namespace}:${iconName}! ${err.message}`;this._errorHandler.handleError(new Error(errorMessage))}))}}static ɵfac=function MatIcon_Factory(__ngFactoryType__){return new(__ngFactoryType__||MatIcon)};static ɵcmp=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({type:MatIcon,selectors:[["mat-icon"]],hostAttrs:["role","img",1,"mat-icon","notranslate"],hostVars:10,hostBindings:function MatIcon_HostBindings(rf,ctx){2&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("data-mat-icon-type",ctx._usingFontIcon()?"font":"svg")("data-mat-icon-name",ctx._svgName||ctx.fontIcon)("data-mat-icon-namespace",ctx._svgNamespace||ctx.fontSet)("fontIcon",ctx._usingFontIcon()?ctx.fontIcon:null),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMap"](ctx.color?"mat-"+ctx.color:""),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("mat-icon-inline",ctx.inline)("mat-icon-no-color","primary"!==ctx.color&&"accent"!==ctx.color&&"warn"!==ctx.color))},inputs:{color:"color",inline:[2,"inline","inline",_angular_core__WEBPACK_IMPORTED_MODULE_0__.booleanAttribute],svgIcon:"svgIcon",fontSet:"fontSet",fontIcon:"fontIcon"},exportAs:["matIcon"],ngContentSelectors:_c0,decls:1,vars:0,template:function MatIcon_Template(rf,ctx){1&rf&&(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"](),_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](0))},styles:["mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color, inherit)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}"],encapsulation:2,changeDetection:0})}("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MatIcon,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,args:[{template:"<ng-content></ng-content>",selector:"mat-icon",exportAs:"matIcon",host:{role:"img",class:"mat-icon notranslate","[class]":'color ? "mat-" + color : ""',"[attr.data-mat-icon-type]":'_usingFontIcon() ? "font" : "svg"',"[attr.data-mat-icon-name]":"_svgName || fontIcon","[attr.data-mat-icon-namespace]":"_svgNamespace || fontSet","[attr.fontIcon]":"_usingFontIcon() ? fontIcon : null","[class.mat-icon-inline]":"inline","[class.mat-icon-no-color]":'color !== "primary" && color !== "accent" && color !== "warn"'},encapsulation:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None,changeDetection:_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,styles:["mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color, inherit)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}"]}]}],(()=>[]),{color:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],inline:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,args:[{transform:_angular_core__WEBPACK_IMPORTED_MODULE_0__.booleanAttribute}]}],svgIcon:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],fontSet:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}],fontIcon:[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.Input}]});class MatIconModule{static ɵfac=function MatIconModule_Factory(__ngFactoryType__){return new(__ngFactoryType__||MatIconModule)};static ɵmod=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({type:MatIconModule,imports:[_common_module_5a9c16bb_mjs__WEBPACK_IMPORTED_MODULE_5__.M,MatIcon],exports:[MatIcon,_common_module_5a9c16bb_mjs__WEBPACK_IMPORTED_MODULE_5__.M]});static ɵinj=_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({imports:[_common_module_5a9c16bb_mjs__WEBPACK_IMPORTED_MODULE_5__.M,_common_module_5a9c16bb_mjs__WEBPACK_IMPORTED_MODULE_5__.M]})}("undefined"==typeof ngDevMode||ngDevMode)&&_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MatIconModule,[{type:_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,args:[{imports:[_common_module_5a9c16bb_mjs__WEBPACK_IMPORTED_MODULE_5__.M,MatIcon],exports:[MatIcon,_common_module_5a9c16bb_mjs__WEBPACK_IMPORTED_MODULE_5__.M]}]}],null,null)}}]);