"use strict";(self.webpackChunkhra_ui=self.webpackChunkhra_ui||[]).push([[4359],{"./libs/design-system/button-toggle/src/lib/button-toggle.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MultiSelect:()=>MultiSelect,SingleSelect:()=>SingleSelect,__namedExportsOrder:()=>__namedExportsOrder,default:()=>button_toggle_component_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),button_toggle=__webpack_require__("./node_modules/@angular/material/fesm2022/button-toggle.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");const BUTTON_CONFIG={small:{lineHeight:18,font:"--sys-label-small"},medium:{lineHeight:21,font:"--sys-label-medium"},large:{lineHeight:24,font:"--sys-label-large"}};let ToggleButtonSizeDirective=class ToggleButtonSizeDirective{constructor(){this.size=core.input.required({alias:"hraButtonToggleSize"}),this.fontVar=(0,core.computed)((()=>`var(${BUTTON_CONFIG[this.size()].font})`)),this.lineHeight=(0,core.computed)((()=>`${BUTTON_CONFIG[this.size()].lineHeight}px`))}static{this.propDecorators={size:[{type:core.Input,args:[{isSignal:!0,alias:"hraButtonToggleSize",required:!0,transform:void 0}]}]}}};ToggleButtonSizeDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[hraButtonToggleSize]",standalone:!0,host:{"[style.--mat-standard-button-toggle-height]":"lineHeight()","[style.--mat-standard-button-toggle-label-text-line-height]":"lineHeight()","[style.font]":"fontVar()"}})],ToggleButtonSizeDirective);var providers=__webpack_require__("./libs/design-system/src/lib/providers.ts");const button_toggle_component_stories={title:"ButtonToggleComponent",parameters:{design:{type:"figma",url:"https://www.figma.com/design/BCEJn9KCIbBJ5MzqnojKQp/Design-System-Components?node-id=853-284"}},decorators:[(0,dist.applicationConfig)({providers:[(0,providers.z)()]}),(0,dist.moduleMetadata)({imports:[button_toggle.Vg,ToggleButtonSizeDirective]})]},SingleSelect={args:{size:"large"},argTypes:{size:{control:"select",options:["small","medium","large"]}},render:args=>({props:args,template:`\n      <mat-button-toggle-group name="singleSelect" aria-label="Single Select"\n      hideSingleSelectionIndicator\n      hraButtonToggleSize="${args.size}">\n        <mat-button-toggle value="button1" checked>Button</mat-button-toggle>\n        <mat-button-toggle value="button2">Button</mat-button-toggle>\n        <mat-button-toggle disabled value="button3">Button</mat-button-toggle>\n      </mat-button-toggle-group>\n    `})},MultiSelect={args:{size:"large"},argTypes:{size:{control:"select",options:["small","medium","large"]}},render:args=>({props:args,template:`\n      <mat-button-toggle-group multiple name="multiSelect" aria-label="Multi Select"\n      hideMultipleSelectionIndicator\n      hraButtonToggleSize="${args.size}">\n        <mat-button-toggle value="button1" checked>Button</mat-button-toggle>\n        <mat-button-toggle value="button2">Button</mat-button-toggle>\n        <mat-button-toggle value="button3">Button</mat-button-toggle>\n      </mat-button-toggle-group>\n    `})},__namedExportsOrder=["SingleSelect","MultiSelect"];SingleSelect.parameters={...SingleSelect.parameters,docs:{...SingleSelect.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'large'\n  },\n  argTypes: {\n    size: {\n      control: 'select',\n      options: ['small', 'medium', 'large']\n    }\n  },\n  render: args => ({\n    props: args,\n    template: `\n      <mat-button-toggle-group name=\"singleSelect\" aria-label=\"Single Select\"\n      hideSingleSelectionIndicator\n      hraButtonToggleSize=\"${args['size']}\">\n        <mat-button-toggle value=\"button1\" checked>Button</mat-button-toggle>\n        <mat-button-toggle value=\"button2\">Button</mat-button-toggle>\n        <mat-button-toggle disabled value=\"button3\">Button</mat-button-toggle>\n      </mat-button-toggle-group>\n    `\n  })\n}",...SingleSelect.parameters?.docs?.source}}},MultiSelect.parameters={...MultiSelect.parameters,docs:{...MultiSelect.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'large'\n  },\n  argTypes: {\n    size: {\n      control: 'select',\n      options: ['small', 'medium', 'large']\n    }\n  },\n  render: args => ({\n    props: args,\n    template: `\n      <mat-button-toggle-group multiple name=\"multiSelect\" aria-label=\"Multi Select\"\n      hideMultipleSelectionIndicator\n      hraButtonToggleSize=\"${args['size']}\">\n        <mat-button-toggle value=\"button1\" checked>Button</mat-button-toggle>\n        <mat-button-toggle value=\"button2\">Button</mat-button-toggle>\n        <mat-button-toggle value=\"button3\">Button</mat-button-toggle>\n      </mat-button-toggle-group>\n    `\n  })\n}",...MultiSelect.parameters?.docs?.source}}}}}]);