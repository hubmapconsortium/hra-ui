(self.webpackChunkhra_ui=self.webpackChunkhra_ui||[]).push([[4143],{"./libs/cdk/styling/src/lib/style-component-manager.service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{$:()=>registerStyleComponents,D:()=>StyleComponentManagerService});var tslib__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");function registerStyleComponents(components,options){options?.injector||(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.assertInInjectionContext)(registerStyleComponents);const injector=options?.injector??(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injector);return(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(StyleComponentManagerService).registerStyleComponents(components,{injector})}let StyleComponentManagerService=class StyleComponentManagerService{constructor(){this.registry=new Map}registerStyleComponents(components,options){return(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.runInInjectionContext)(options.injector,(()=>{const instanceMap=this.getInstanceMap((0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.ApplicationRef)),environmentInjector=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.EnvironmentInjector);return components.map((component=>this.getInstance(component,instanceMap,environmentInjector)))}))}getInstanceMap(appRef){let instanceMap=this.registry.get(appRef);return instanceMap||(instanceMap=new Map,this.registry.set(appRef,instanceMap),appRef.onDestroy((()=>{this.registry.delete(appRef),instanceMap?.forEach((instance=>instance.destroy()))}))),instanceMap}getInstance(component,instanceMap,environmentInjector){let instance=instanceMap.get(component);return instance||(instance=(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.createComponent)(component,{environmentInjector}),instanceMap.set(component,instance)),instance}};StyleComponentManagerService=(0,tslib__WEBPACK_IMPORTED_MODULE_1__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable)({providedIn:"root"})],StyleComponentManagerService)},"./libs/design-system/micro-tooltip/src/micro-tooltip.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Medium:()=>Medium,__namedExportsOrder:()=>__namedExportsOrder,default:()=>micro_tooltip_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),tooltip=__webpack_require__("./node_modules/@angular/material/fesm2022/tooltip.mjs"),style_component_manager_service=__webpack_require__("./libs/cdk/styling/src/lib/style-component-manager.service.ts"),micro_tooltip_styles_componentngResource=__webpack_require__("./libs/design-system/micro-tooltip/src/micro-tooltip-styles/micro-tooltip-styles.component.scss?ngResource"),micro_tooltip_styles_componentngResource_default=__webpack_require__.n(micro_tooltip_styles_componentngResource);let MicroTooltipStylesComponent=class MicroTooltipStylesComponent{};MicroTooltipStylesComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"hra-micro-tooltip-styles",standalone:!0,template:"",encapsulation:core.ViewEncapsulation.None,changeDetection:core.ChangeDetectionStrategy.OnPush,styles:[micro_tooltip_styles_componentngResource_default()]})],MicroTooltipStylesComponent);let MicroTooltipDirective=class MicroTooltipDirective{constructor(){this.size=(0,core.input)("medium",{alias:"hraMicroTooltipSize"}),this.tooltip=(0,core.inject)(tooltip.oV),(0,style_component_manager_service.$)([MicroTooltipStylesComponent]),(0,core.effect)((()=>{this.tooltip.tooltipClass=["hra-micro-tooltip",`hra-micro-tooltip-${this.size()}`]}))}static#_=this.ctorParameters=()=>[];static#_2=this.propDecorators={size:[{type:core.Input,args:[{isSignal:!0,alias:"hraMicroTooltipSize",required:!1,transform:void 0}]}]}};MicroTooltipDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[hraMicroTooltip]",standalone:!0,hostDirectives:[{directive:tooltip.oV,inputs:["matTooltip: hraMicroTooltip","matTooltipPosition: hraMicroTooltipPosition"]}]}),(0,tslib_es6.Sn)("design:paramtypes",[])],MicroTooltipDirective);var fesm2022_button=__webpack_require__("./node_modules/@angular/material/fesm2022/button.mjs");const micro_tooltip_stories={title:"MicroTooltip",args:{size:"medium"},argTypes:{size:{control:"select",options:["small","medium"]}},decorators:[(0,dist.moduleMetadata)({imports:[MicroTooltipDirective,fesm2022_button.Hl]})]},Medium={render:args=>({props:args,template:`\n      <button mat-flat-button hraMicroTooltip="This is a Micro Tooltip of ${args.size} variant"\n      hraMicroTooltipSize="${args.size}">\n        Try Me!\n      </button>\n    `})},__namedExportsOrder=["Medium"];Medium.parameters={...Medium.parameters,docs:{...Medium.parameters?.docs,source:{originalSource:"{\n  render: args => ({\n    props: args,\n    template: `\n      <button mat-flat-button hraMicroTooltip=\"This is a Micro Tooltip of ${args['size']} variant\"\n      hraMicroTooltipSize=\"${args['size']}\">\n        Try Me!\n      </button>\n    `\n  })\n}",...Medium.parameters?.docs?.source}}}},"./libs/design-system/micro-tooltip/src/micro-tooltip-styles/micro-tooltip-styles.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,".hra-micro-tooltip {\n  --mdc-plain-tooltip-supporting-text-color: var(--sys-on-primary);\n  --mdc-plain-tooltip-container-color: color-mix(in srgb, var(--sys-secondary) 96%, transparent);\n}\n.hra-micro-tooltip .mat-mdc-tooltip-surface {\n  padding: 0.25rem 0.5rem;\n  letter-spacing: unset;\n}\n\n.hra-micro-tooltip-medium .mat-mdc-tooltip-surface {\n  font: var(--sys-label-medium);\n}\n\n.hra-micro-tooltip-small .mat-mdc-tooltip-surface {\n  font: var(--sys-label-small);\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);