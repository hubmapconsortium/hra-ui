var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/DataCell.html",[0,0.755,1,1.029]],["body/interfaces/DataCell.html",[0,0.785,1,0.72,2,0.435,3,0.591,4,1.45,5,0.591,6,0.435,7,0.435,8,0.435,9,0.591,10,0.976,11,0.92,12,2.33,13,1.681,14,0.936,15,0.528,16,1.412,17,2.28,18,2.144,19,1.66,20,1.637,21,0.125,22,1.73,23,1.45,24,1.366,25,0.976,26,1.774,27,1.986,28,0.976,29,0.976,30,0.591,31,0.976,32,0.435,33,0.591,34,0.591,35,0.72,36,1.248,37,0.976,38,0.591,39,0.591,40,2.144,41,0.976,42,0.976,43,0.976,44,0.976,45,0.591,46,0.435,47,0.976,48,0.591,49,0.976,50,1.069,51,0.591,52,0.976,53,0.976,54,0.591,55,0.976,56,0.976,57,0.976,58,0.976,59,0.591,60,0.976,61,0.976,62,0.591,63,1.248,64,1.73,65,0.976,66,0.591,67,0.435,68,0.72,69,0.435,70,1.069,71,1.45,72,1.73,73,2.046,74,0.976,75,0.976,76,2.389,77,1.73,78,0.591,79,1.606,80,1.248,81,0.976,82,1.606,83,1.184,84,2.28,85,2.252,86,0.435,87,0.435,88,1.611,89,1.276,90,1.248,91,1.248,92,0.976,93,0.591,94,0.591,95,0.976,96,0.591,97,0.591,98,0.591,99,0.591,100,1.73,101,0.591,102,0.591,103,0.591,104,0.591,105,0.591,106,0.591,107,0.591,108,0.591,109,0.591,110,0.591,111,0.591,112,0.591,113,2.046,114,0.976,115,0.591,116,0.591,117,0.976,118,0.591,119,0.591,120,0.591,121,0.591,122,0.591,123,0.591,124,0.591,125,1.73,126,0.591,127,0.976,128,0.591,129,0.591,130,0.591,131,0.591,132,0.591,133,1.248,134,0.976,135,1.73,136,0.591,137,1.606,138,0.976,139,1.73,140,0.591,141,0.976,142,0.591,143,0.591,144,0.591,145,0.591,146,1.248,147,0.591,148,1.831,149,0.591,150,0.591,151,0.591,152,0.591,153,0.591,154,0.591,155,0.591,156,0.92,157,1.73,158,1.45,159,0.591,160,0.591,161,1.831,162,0.591,163,1.73,164,1.831,165,1.45,166,0.591,167,1.45,168,1.606,169,0.976,170,0.591,171,2.306,172,1.45,173,0.591,174,0.976,175,0.591,176,2.421,177,0.591,178,0.976,179,1.248,180,0.591,181,1.248,182,1.45,183,0.591,184,0.591,185,0.591,186,0.591,187,0.976,188,1.248,189,0.591,190,1.831,191,0.591,192,0.591,193,0.976,194,0.976,195,0.591,196,2.144,197,1.45,198,0.976,199,0.591,200,0.591,201,0.591,202,0.591,203,0.591,204,1.73,205,0.591,206,0.591,207,0.591,208,0.591,209,1.915,210,0.591,211,0.591,212,0.591,213,0.591,214,0.591,215,0.591,216,0.591,217,0.591,218,0.591,219,1.45,220,0.591,221,0.976,222,0.591,223,0.976,224,0.591,225,0.591,226,0.591,227,0.591,228,0.976,229,0.591,230,0.591,231,0.591,232,0.591,233,0.591,234,0.591,235,0.591,236,0.591,237,0.591,238,0.591,239,0.591,240,0.976,241,0.976,242,0.591,243,0.591,244,0.591,245,0.591,246,1.248,247,0.591,248,1.248,249,0.591,250,1.069,251,0.591,252,0.591,253,0.591,254,0.591,255,0.976,256,1.248,257,0.591,258,0.976,259,0.591,260,0.591,261,0.591,262,0.591,263,0.591,264,0.591,265,1.73,266,1.606,267,1.248,268,0.591,269,0.591,270,0.591,271,0.591,272,1.45,273,0.591,274,0.976,275,0.591,276,0.591,277,1.248,278,0.976,279,0.591,280,0.591,281,0.976,282,0.591,283,0.591,284,0.591,285,0.591,286,0.591,287,0.591,288,0.591,289,0.591,290,0.591,291,1.248,292,0.591,293,0.591,294,0.976,295,0.591,296,0.591,297,0.591,298,0.591,299,0.591,300,0.591,301,0.976,302,0.976,303,0.591,304,0.591,305,0.591,306,0.976,307,0.591,308,0.435,309,0.591,310,0.591,311,0.591,312,0.591,313,0.591,314,0.591,315,0.591,316,0.591,317,0.591,318,0.976,319,0.591,320,0.591,321,0.044,322,0.044]],["title/interfaces/TissueInfo.html",[0,0.755,83,1.029]],["body/interfaces/TissueInfo.html",[0,0.681,1,0.44,2,0.44,3,0.597,4,1.46,5,0.597,6,0.44,7,0.44,8,0.44,9,0.597,10,0.597,11,0.726,12,2.312,13,1.665,14,0.941,15,0.533,16,1.076,17,2.106,18,1.923,19,1.705,20,1.553,21,0.125,22,1.258,23,0.985,25,0.597,26,1.752,27,1.994,28,0.985,29,0.985,30,0.597,31,0.985,32,0.44,33,0.597,34,0.597,35,0.726,36,1.258,37,0.985,38,0.597,39,0.597,40,2.151,41,0.985,42,0.985,43,0.985,44,0.985,45,0.597,46,0.44,47,0.985,48,0.597,49,0.985,50,1.076,51,0.597,52,0.985,53,0.985,54,0.597,55,0.985,56,0.985,57,0.985,58,0.985,59,0.597,60,0.985,61,0.985,62,0.597,63,1.258,64,1.739,65,0.985,66,0.597,67,0.44,68,0.726,69,0.44,70,1.076,71,1.46,72,1.84,73,2.054,74,0.985,75,0.985,76,2.394,77,1.739,78,0.597,79,1.616,80,1.258,81,1.258,82,1.923,83,1.282,84,2.376,85,2.335,86,0.44,87,0.44,88,1.615,89,1.282,90,1.258,91,1.258,92,0.985,93,0.597,94,0.597,95,0.985,96,0.597,97,0.597,98,0.597,99,0.597,100,1.739,101,0.597,102,0.597,103,0.597,104,0.597,105,0.597,106,0.597,107,0.597,108,0.597,109,0.597,110,0.597,111,0.597,112,0.597,113,2.054,114,0.985,115,0.597,116,0.597,117,0.985,118,0.597,119,0.597,120,0.597,121,0.597,122,0.597,123,0.597,124,0.597,125,1.739,126,0.597,127,0.985,128,0.597,129,0.597,130,0.597,131,0.597,132,0.597,133,1.258,134,0.985,135,1.739,136,0.597,137,1.616,138,0.985,139,1.739,140,0.597,141,0.985,142,0.597,143,0.597,144,0.597,145,0.597,146,1.258,147,0.597,148,1.84,149,0.597,150,0.597,151,0.597,152,0.597,153,0.597,154,0.597,155,0.597,156,0.927,157,1.739,158,1.46,159,0.597,160,0.597,161,1.84,162,0.597,163,1.739,164,1.84,165,1.46,166,0.597,167,1.46,168,1.616,169,0.985,170,0.597,171,2.312,172,1.46,173,0.597,174,0.985,175,0.597,176,2.426,177,0.597,178,0.985,179,1.258,180,0.597,181,1.258,182,1.46,183,0.597,184,0.597,185,0.597,186,0.597,187,0.985,188,1.258,189,0.597,190,1.84,191,0.597,192,0.597,193,0.985,194,0.985,195,0.597,196,2.151,197,1.46,198,0.985,199,0.597,200,0.597,201,0.597,202,0.597,203,0.597,204,1.739,205,0.597,206,0.597,207,0.597,208,0.597,209,1.923,210,0.597,211,0.597,212,0.597,213,0.597,214,0.597,215,0.597,216,0.597,217,0.597,218,0.597,219,1.46,220,0.597,221,0.985,222,0.597,223,0.985,224,0.597,225,0.597,226,0.597,227,0.597,228,0.985,229,0.597,230,0.597,231,0.597,232,0.597,233,0.597,234,0.597,235,0.597,236,0.597,237,0.597,238,0.597,239,0.597,240,0.985,241,0.985,242,0.597,243,0.597,244,0.597,245,0.597,246,1.258,247,0.597,248,1.258,249,0.597,250,1.076,251,0.597,252,0.597,253,0.597,254,0.597,255,0.985,256,1.258,257,0.597,258,0.985,259,0.597,260,0.597,261,0.597,262,0.597,263,0.597,264,0.597,265,1.739,266,1.616,267,1.258,268,0.597,269,0.597,270,0.597,271,0.597,272,1.46,273,0.597,274,0.985,275,0.597,276,0.597,277,1.258,278,0.985,279,0.597,280,0.597,281,0.985,282,0.597,283,0.597,284,0.597,285,0.597,286,0.597,287,0.597,288,0.597,289,0.597,290,0.597,291,1.258,292,0.597,293,0.597,294,0.985,295,0.597,296,0.597,297,0.597,298,0.597,299,0.597,300,0.597,301,0.985,302,0.985,303,0.597,304,0.597,305,0.597,306,0.985,307,0.597,308,0.44,309,0.597,310,0.597,311,0.597,312,0.597,313,0.597,314,0.597,315,0.597,316,0.597,317,0.597,318,0.985,319,0.597,320,0.597,321,0.044,322,0.044]],["title/dependencies.html",[323,1.184,324,1.667]],["body/dependencies.html",[21,0.12,32,1.526,46,1.526,50,1.526,321,0.106,322,0.106,324,2.386,325,2.894,326,2.894,327,2.894,328,3.338,329,2.894]],["title/index.html",[14,0.641,330,1.656,331,1.656]],["body/index.html",[21,0.106,308,1.759,321,0.106,322,0.106,332,3.338,333,3.338,334,2.894,335,2.894,336,3.338,337,2.894,338,3.338,339,2.894,340,2.894,341,2.894]],["title/modules.html",[342,1.866]],["body/modules.html",[21,0.108,321,0.108,322,0.108,342,2.135]],["title/overview.html",[343,1.866]],["body/overview.html",[2,1.561,21,0.108,35,1.561,156,1.561,250,1.561,321,0.108,322,0.108,343,2.117]],["title/properties.html",[15,0.902,323,1.184]],["body/properties.html",[15,1.148,21,0.113,321,0.108,322,0.108,344,2.968,345,2.968]],["title/miscellaneous/typealiases.html",[346,1.184,347,2.332]],["body/miscellaneous/typealiases.html",[6,1.48,7,1.48,8,1.831,11,1.48,13,1.48,14,1.086,16,1.48,19,1.48,20,1.729,21,0.114,26,1.831,67,1.48,68,1.48,69,1.48,70,1.729,86,1.48,87,1.48,88,1.48,89,1.729,321,0.105,322,0.105,346,2.007,348,2.808,349,3.279]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":163,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["0.0.1",{"_index":345,"title":{},"body":{"properties.html":{}}}],["1",{"_index":250,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["10",{"_index":166,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["100",{"_index":293,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["15.1.0",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":277,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["2",{"_index":156,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["2.3.0",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":276,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["400",{"_index":160,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["44",{"_index":150,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["5",{"_index":280,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["7",{"_index":283,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["aliases",{"_index":348,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["along",{"_index":119,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["angular/cdk/scrolling",{"_index":30,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["angular/common",{"_index":32,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["angular/core",{"_index":46,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["angular/material/table",{"_index":48,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["arr",{"_index":289,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["b",{"_index":281,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["based",{"_index":267,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["beween",{"_index":264,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarker",{"_index":73,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertablecomponent",{"_index":109,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertabledatacardcomponent",{"_index":55,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["biomarkertabledataiconcomponent",{"_index":56,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["boolean",{"_index":240,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["card",{"_index":25,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["carrying",{"_index":111,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cdkvirtualscrollviewport",{"_index":28,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cdr",{"_index":184,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cell",{"_index":12,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cells",{"_index":95,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cellwidth",{"_index":149,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["change",{"_index":182,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetection",{"_index":106,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetectionstrategy",{"_index":33,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetectionstrategy.onpush",{"_index":107,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changedetectorref",{"_index":34,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["changes",{"_index":197,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["checkdisplayedcolumns(forceupdate",{"_index":213,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["checks",{"_index":188,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["circle",{"_index":124,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["cl",{"_index":312,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["class",{"_index":108,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["color",{"_index":16,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["colors",{"_index":118,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["column",{"_index":164,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["columns",{"_index":113,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["columns.push('prefiller",{"_index":232,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["columns.push(...displayedcolumns",{"_index":235,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["commonmodule",{"_index":31,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["component",{"_index":35,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["components",{"_index":332,"title":{},"body":{"index.html":{}}}],["composition",{"_index":87,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["consisting",{"_index":199,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["const",{"_index":176,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["converts",{"_index":270,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["count",{"_index":79,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["count}px",{"_index":180,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["current",{"_index":157,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["data",{"_index":17,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["data.slice(2).find((entry",{"_index":259,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["data].sort((row1",{"_index":244,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datacell",{"_index":1,"title":{"interfaces/DataCell.html":{}},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["dataitem",{"_index":57,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datarow",{"_index":89,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["dataset",{"_index":78,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["dataset_count",{"_index":80,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datasets",{"_index":310,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datasource",{"_index":181,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["datasources",{"_index":115,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["dependencies",{"_index":324,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["describes",{"_index":86,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["describing",{"_index":93,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["details",{"_index":81,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["detection",{"_index":183,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["displayed",{"_index":125,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["displayedcolumncount",{"_index":165,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["displayedcolumnoffset",{"_index":167,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["displayedcolumns",{"_index":233,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["elementref",{"_index":36,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["emits",{"_index":134,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["entry",{"_index":258,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["entry?.data.cell",{"_index":260,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["event",{"_index":187,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["eventemitter",{"_index":37,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["execute",{"_index":341,"title":{},"body":{"index.html":{}}}],["export",{"_index":71,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["expression",{"_index":75,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["extra",{"_index":151,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["extradisplayedcolumncount",{"_index":155,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["false",{"_index":214,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["forceupdate",{"_index":220,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["function",{"_index":262,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["functional",{"_index":307,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["g",{"_index":278,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gene",{"_index":314,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["generated",{"_index":335,"title":{},"body":{"index.html":{}}}],["gethoverdata([index",{"_index":305,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gethoverid(data",{"_index":257,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getminmaxcolor(meanexpression",{"_index":285,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gets",{"_index":168,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getsize(value",{"_index":300,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["getting",{"_index":330,"title":{"index.html":{}},"body":{}}],["give",{"_index":263,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["given",{"_index":268,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["grade",{"_index":284,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gradient",{"_index":117,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["gradientpoint",{"_index":52,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hex",{"_index":272,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hex.length",{"_index":298,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hex2rgb(hex",{"_index":273,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hexcode",{"_index":271,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hgnc",{"_index":316,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["highlighted",{"_index":253,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["highlightedcellid",{"_index":130,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["highlighting",{"_index":129,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["horizontal",{"_index":158,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["horizontalscrolloffset",{"_index":162,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["horizontalviewportsize",{"_index":159,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hostlistener",{"_index":38,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hostlistener('window:mousemove",{"_index":207,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hover",{"_index":256,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hoverdirective",{"_index":49,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hovered",{"_index":127,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hoverid",{"_index":318,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["hra",{"_index":50,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{}}}],["icon",{"_index":23,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["id",{"_index":84,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ids",{"_index":131,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["illustration",{"_index":132,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["illustrationids",{"_index":133,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["illustrationidsset",{"_index":236,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["illustrationidsset.has(id",{"_index":243,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["implements",{"_index":110,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["import",{"_index":27,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["imports",{"_index":101,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["in1",{"_index":246,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["in2",{"_index":248,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["inillustration",{"_index":238,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["inillustration.get(row1",{"_index":247,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["inillustration.get(row2",{"_index":249,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["inillustration.set(row",{"_index":242,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["inject",{"_index":39,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["inject(changedetectorref",{"_index":185,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["input",{"_index":40,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["interface",{"_index":0,"title":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"overview.html":{}}}],["ishighlighted(row",{"_index":254,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["item.percentage",{"_index":290,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["join",{"_index":299,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["label",{"_index":85,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["lerp",{"_index":261,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["lerp(value",{"_index":269,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["library",{"_index":334,"title":{},"body":{"index.html":{}}}],["list",{"_index":114,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["literal",{"_index":24,"title":{},"body":{"interfaces/DataCell.html":{}}}],["map",{"_index":239,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["map((component",{"_index":296,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["matches",{"_index":252,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["matching",{"_index":322,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.ceil(this.horizontalviewportsize",{"_index":227,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["math.max(math.floor(offset",{"_index":230,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["math.round(component).tostring(16",{"_index":297,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mattablemodule",{"_index":47,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["max",{"_index":266,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxcolor",{"_index":287,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxcolor[index",{"_index":295,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["maxsize",{"_index":302,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mean",{"_index":74,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["meanexpression",{"_index":77,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["meanexpression.tofixed(6",{"_index":317,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["min",{"_index":265,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["mincolor",{"_index":286,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["minsize",{"_index":301,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["miscellaneous",{"_index":346,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["modules",{"_index":342,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mouse",{"_index":205,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["move",{"_index":206,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["name",{"_index":72,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["new",{"_index":137,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ng",{"_index":62,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ngonchanges(changes",{"_index":200,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ngoninit",{"_index":189,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["number",{"_index":26,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["nx",{"_index":336,"title":{},"body":{"index.html":{}}}],["object",{"_index":198,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["offset",{"_index":161,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["onchanges",{"_index":41,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["oninit",{"_index":42,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["onmousemove",{"_index":208,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["open",{"_index":112,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["organ",{"_index":97,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["organisms",{"_index":333,"title":{},"body":{"index.html":{}}}],["output",{"_index":43,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["outside",{"_index":153,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["overview",{"_index":343,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":323,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":196,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parsefloat(item.label",{"_index":292,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(1",{"_index":275,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(3",{"_index":279,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["parseint(hex.slice(5",{"_index":282,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["peer",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["percentage",{"_index":291,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["points",{"_index":121,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["postfiller",{"_index":174,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["postfillerwidth",{"_index":175,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["prefiller",{"_index":169,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["prefillerwidth",{"_index":170,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["private",{"_index":148,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["processes",{"_index":304,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["properties",{"_index":15,"title":{"properties.html":{}},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"properties.html":{}}}],["px",{"_index":147,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["quanitites",{"_index":94,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["r",{"_index":274,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["radius",{"_index":123,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["read",{"_index":144,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["readonly",{"_index":135,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["reference",{"_index":138,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["render",{"_index":152,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["replaysubject",{"_index":65,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["replaysubject(1",{"_index":145,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["representing",{"_index":10,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["represents",{"_index":22,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["results",{"_index":321,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":171,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["returns",{"_index":209,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rgb",{"_index":68,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["rgbtriblet",{"_index":67,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["rgbtriplet",{"_index":70,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["row",{"_index":88,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["row1[0].localecompare(row2[0",{"_index":251,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row2",{"_index":245,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row[0",{"_index":311,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row[1",{"_index":313,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["row[index",{"_index":306,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rowhover",{"_index":136,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["rows",{"_index":116,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["run",{"_index":339,"title":{},"body":{"index.html":{}}}],["running",{"_index":337,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":66,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["scroll",{"_index":64,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["scroll$.subscribe",{"_index":192,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["scrollable",{"_index":215,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["scrollable.measurescrolloffset('start",{"_index":218,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["scrollable.measureviewportsize('horizontal",{"_index":217,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["scrollingmodule",{"_index":29,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["see",{"_index":211,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["selector",{"_index":98,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["set(this.illustrationids",{"_index":237,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sethoverid(hoverid",{"_index":319,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sets",{"_index":194,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["shouldupdate",{"_index":219,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["simplechanges",{"_index":44,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["single",{"_index":11,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["size",{"_index":18,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sizelegend",{"_index":53,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sizes",{"_index":126,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sorts",{"_index":195,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["sourcelistitem",{"_index":58,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["specific",{"_index":96,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["src/.../biomarker",{"_index":349,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/biomarker",{"_index":6,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["standalone",{"_index":99,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["started",{"_index":331,"title":{"index.html":{}},"body":{}}],["static",{"_index":141,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["stop",{"_index":120,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["store",{"_index":69,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["string",{"_index":19,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["styleurls",{"_index":104,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["subscribes",{"_index":186,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["t",{"_index":91,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["table",{"_index":13,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["table.component.html",{"_index":103,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["table.component.scss",{"_index":105,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["table.component.ts",{"_index":8,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["table/biomarker",{"_index":7,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["tablevirtualscrolldatasource",{"_index":60,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tablevirtualscrollmodule",{"_index":61,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["taking",{"_index":122,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["templateurl",{"_index":102,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["test",{"_index":340,"title":{},"body":{"index.html":{}}}],["tests",{"_index":338,"title":{},"body":{"index.html":{}}}],["this.cellwidth",{"_index":172,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.checkdisplayedcolumns",{"_index":193,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.checkdisplayedcolumns('columns",{"_index":201,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.columns.length",{"_index":177,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.columns.slice(displayedcolumnoffset",{"_index":234,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.columns[index",{"_index":315,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.datasource.data",{"_index":202,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.displayedcolumncount",{"_index":178,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.displayedcolumnoffset",{"_index":179,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.displayedcolumnoffset}px",{"_index":173,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.extradisplayedcolumncount",{"_index":228,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.gethoverid(row",{"_index":241,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.getminmaxsize(value",{"_index":303,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.gradient.findindex((item",{"_index":288,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.highlightedcellid",{"_index":255,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.horizontalscrolloffset",{"_index":223,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.horizontalviewportsize",{"_index":221,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.lerp(value",{"_index":294,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.rowhover.emit(hoverid",{"_index":320,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.sorttabledata(this.data",{"_index":203,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.updatecolumns",{"_index":225,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.updatehorizontalviewportoffset(offset",{"_index":224,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.updatehorizontalviewportsize(size",{"_index":222,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.vscroll.scrollable",{"_index":216,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["this.vscroll.scrollable.elementscrolled",{"_index":191,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tissue",{"_index":82,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tissueinfo",{"_index":83,"title":{"interfaces/TissueInfo.html":{}},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["trackbyindex(index",{"_index":210,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["true",{"_index":100,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["tslib",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":20,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":347,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":92,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["uberon",{"_index":309,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/cdk",{"_index":51,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/components/atoms",{"_index":54,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/components/molecules",{"_index":59,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["ui/theming",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":90,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["unit",{"_index":308,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{},"index.html":{}}}],["updatecolumns",{"_index":231,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["updated",{"_index":212,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["updatehorizontalviewportoffset(offset",{"_index":229,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["updatehorizontalviewportsize(size",{"_index":226,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["updates",{"_index":204,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["used",{"_index":128,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["value",{"_index":76,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["version",{"_index":344,"title":{},"body":{"properties.html":{}}}],["viewchild",{"_index":45,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["viewchild('table",{"_index":143,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["viewchild(cdkvirtualscrollviewport",{"_index":140,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["viewport",{"_index":139,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["virtual",{"_index":63,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["visible",{"_index":154,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["void",{"_index":190,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["vscroll",{"_index":142,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}],["width",{"_index":146,"title":{},"body":{"interfaces/DataCell.html":{},"interfaces/TissueInfo.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/DataCell.html":{"url":"interfaces/DataCell.html","title":"interface - DataCell","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataCell\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/biomarker-table/biomarker-table.component.ts\n        \n\n\n            \n                Description\n            \n            \n                An interface representing a single cell of the table.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the color of the icon\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the data for the data card\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represents the size of the icon\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n  SourceListItem,\n} from '@hra-ui/components/molecules';\nimport { TableVirtualScrollDataSource, TableVirtualScrollModule } from 'ng-table-virtual-scroll';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    /** Cell name */\n    cell: string;\n    /** Biomarker name */\n    biomarker: string;\n    /** Mean expression value */\n    meanExpression: number;\n    /** Dataset count */\n    dataset_count?: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n    ScrollingModule,\n    TableVirtualScrollModule,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnInit, OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Source list for biomarker table */\n  @Input() dataSources: SourceListItem[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Cell id which is hovered, used for highlighting */\n  @Input() highlightedCellId = '';\n\n  /** List of cell ids in the illustration */\n  @Input() illustrationIds: string[] = [];\n\n  /** Emits cell type label when row is hovered */\n  @Output() readonly rowHover = new EventEmitter();\n\n  /** Reference to virtual scroll viewport */\n  @ViewChild(CdkVirtualScrollViewport, { static: true }) vscroll!: CdkVirtualScrollViewport;\n\n  /** Reference to biomarker table */\n  @ViewChild('table', { static: true, read: ElementRef }) table!: ElementRef;\n\n  /** Columns replaysubject */\n  readonly columns$ = new ReplaySubject(1);\n\n  /** Cell width (px) */\n  private readonly cellWidth = 44;\n  /** Extra columns to render outside the visible viewport */\n  private readonly extraDisplayedColumnCount = 2;\n\n  /** Current horizontal viewport size */\n  private horizontalViewportSize = 400;\n  /** Current horizontal scroll offset */\n  private horizontalScrollOffset = 0;\n  /** Current displayed column count */\n  private displayedColumnCount = 10;\n  /** Current displayed column offset */\n  private displayedColumnOffset = 0;\n\n  /** Gets the current width of the prefiller column */\n  get preFillerWidth(): string {\n    return `${this.cellWidth * this.displayedColumnOffset}px`;\n  }\n\n  /** Gets the current width of the postfiller column */\n  get postFillerWidth(): string {\n    const count = this.columns.length - this.displayedColumnCount - this.displayedColumnOffset;\n    return `${this.cellWidth * count}px`;\n  }\n\n  /** Source for the table */\n  readonly dataSource = new TableVirtualScrollDataSource>([]);\n\n  /** Change detection */\n  private readonly cdr = inject(ChangeDetectorRef);\n\n  /**\n   * Subscribes to scroll event on virtual scroll viewport and checks displayed columns\n   */\n  ngOnInit(): void {\n    const scroll$ = this.vscroll.scrollable.elementScrolled();\n    scroll$.subscribe(() => this.checkDisplayedColumns());\n  }\n\n  /**\n   * Sets the data source for the table on every change\n   * Sorts the biomarker table on illustrationIds change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    this.checkDisplayedColumns('columns' in changes);\n    if ('data' in changes || 'illustrationIds' in changes) {\n      this.dataSource.data = this.sortTableData(this.data);\n    }\n  }\n\n  /**\n   * Checks for column updates on mouse move\n   */\n  @HostListener('window:mousemove', ['$event'])\n  onMouseMove() {\n    this.checkDisplayedColumns();\n  }\n\n  /**\n   * Returns index value\n   */\n  trackByIndex(index: number): number {\n    return index;\n  }\n\n  /**\n   * Checks to see if columns should be updated\n   */\n  checkDisplayedColumns(forceUpdate = false): void {\n    const scrollable = this.vscroll.scrollable;\n    const size = scrollable.measureViewportSize('horizontal');\n    const offset = scrollable.measureScrollOffset('start');\n    let shouldUpdate = forceUpdate;\n\n    if (size !== this.horizontalViewportSize) {\n      this.updateHorizontalViewportSize(size);\n      shouldUpdate = true;\n    }\n    if (offset !== this.horizontalScrollOffset) {\n      this.updateHorizontalViewportOffset(offset);\n      shouldUpdate = true;\n    }\n\n    if (shouldUpdate) {\n      this.updateColumns();\n    }\n  }\n\n  /**\n   * Updates horizontal viewport size and updates displayed column count\n   */\n  updateHorizontalViewportSize(size: number): void {\n    this.horizontalViewportSize = size;\n    this.displayedColumnCount =\n      Math.ceil(this.horizontalViewportSize / this.cellWidth) + this.extraDisplayedColumnCount;\n  }\n\n  /**\n   * Updates horizontal viewport offset and updates displayed column offset\n   */\n  updateHorizontalViewportOffset(offset: number): void {\n    this.horizontalScrollOffset = offset;\n    this.displayedColumnOffset = Math.max(Math.floor(offset / this.cellWidth) - this.extraDisplayedColumnCount / 2, 0);\n  }\n\n  /**\n   * Updates table columns with prefiller and postfiller columns\n   */\n  updateColumns(): void {\n    const { displayedColumnCount, displayedColumnOffset } = this;\n    const columns = ['type', 'count'];\n    if (this.displayedColumnOffset > 0) {\n      columns.push('preFiller');\n    }\n\n    const displayedColumns = this.columns.slice(displayedColumnOffset, displayedColumnOffset + displayedColumnCount);\n    columns.push(...displayedColumns);\n\n    if (displayedColumnOffset + displayedColumnCount []): DataRow[] {\n    const illustrationIdsSet = new Set(this.illustrationIds);\n    const inIllustration = new Map, boolean>();\n    for (const row of data) {\n      const id = this.getHoverId(row);\n      inIllustration.set(row, illustrationIdsSet.has(id));\n    }\n\n    return [...data].sort((row1, row2) => {\n      const in1 = inIllustration.get(row1);\n      const in2 = inIllustration.get(row2);\n\n      if (in1 && !in2) {\n        return -1;\n      } else if (!in1 && in2) {\n        return 1;\n      }\n\n      return row1[0].localeCompare(row2[0]);\n    });\n  }\n\n  /**\n   * Returns true if id matches the cell id of the row\n   * @param row Highlighted row\n   */\n  isHighlighted(row: DataRow): boolean {\n    return this.getHoverId(row) === this.highlightedCellId;\n  }\n\n  /**\n   * Gets hover id from row\n   * @param data row data\n   * @returns cell type id\n   */\n  getHoverId(data: DataRow): string {\n    const entry = data.slice(2).find((entry) => entry) as T;\n    return entry?.data.cell;\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => {\n          const hex = Math.round(component).toString(16);\n          return hex.length == 1 ? '0' + hex : hex;\n        })\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * Processes the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression, dataset_count },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${dataset_count ?? 0}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n\n  /**\n   * Sets and emits cell type id on row hover\n   * @param hoverId cell type id\n   */\n  setHoverId(hoverId?: string): void {\n    this.highlightedCellId = hoverId ?? '';\n    this.rowHover.emit(hoverId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TissueInfo.html":{"url":"interfaces/TissueInfo.html","title":"interface - TissueInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TissueInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/biomarker-table/biomarker-table.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Details of the Tissue\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ID of the Tissue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the Tissue\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  inject,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { HoverDirective } from '@hra-ui/cdk';\nimport { GradientPoint, SizeLegend } from '@hra-ui/components/atoms';\nimport {\n  BiomarkerTableDataCardComponent,\n  BiomarkerTableDataIconComponent,\n  DataItem,\n  SourceListItem,\n} from '@hra-ui/components/molecules';\nimport { TableVirtualScrollDataSource, TableVirtualScrollModule } from 'ng-table-virtual-scroll';\nimport { ReplaySubject } from 'rxjs';\n\n/**\n * RGBTriblet of type RGB to store color\n */\ntype RGBTriplet = [number, number, number];\n\n/**\n * An interface representing a single cell of the table.\n */\nexport interface DataCell {\n  /** Represents the color of the icon */\n  color: string;\n  /** Represents the size of the icon */\n  size: number;\n  /** Represents the data for the data card */\n  data: {\n    /** Cell name */\n    cell: string;\n    /** Biomarker name */\n    biomarker: string;\n    /** Mean expression value */\n    meanExpression: number;\n    /** Dataset count */\n    dataset_count?: number;\n  };\n}\n\n/**\n * Details of the Tissue\n */\nexport interface TissueInfo {\n  /** ID of the Tissue */\n  id: string;\n  /** Name of the Tissue */\n  label: string;\n}\n\n/** Describes the composition of a single row in the table */\nexport type DataRow = [string, number | undefined, ...(T | undefined)[]];\n\n/** Cell types table, describing the types and quanitites of cells for a specific organ */\n@Component({\n  selector: 'hra-biomarker-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatTableModule,\n    BiomarkerTableDataIconComponent,\n    HoverDirective,\n    BiomarkerTableDataCardComponent,\n    ScrollingModule,\n    TableVirtualScrollModule,\n  ],\n  templateUrl: './biomarker-table.component.html',\n  styleUrls: ['./biomarker-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BiomarkerTableComponent implements OnInit, OnChanges {\n  /**\n   * Input: TissueInfo carrying the details of the tissue open\n   */\n  @Input() tissueInfo: TissueInfo = {\n    id: '',\n    label: '',\n  };\n\n  /** Columns for the table */\n  @Input() columns: string[] = [];\n\n  /** Source list for biomarker table */\n  @Input() dataSources: SourceListItem[] = [];\n\n  /** Rows of the table */\n  @Input() data: DataRow[] = [];\n\n  /** Gradient colors along with their stop points */\n  @Input() gradient: GradientPoint[] = [];\n\n  /** Taking input for the radius of the circle and the label to be displayed. */\n  @Input() sizes: SizeLegend[] = [];\n\n  /** Cell id which is hovered, used for highlighting */\n  @Input() highlightedCellId = '';\n\n  /** List of cell ids in the illustration */\n  @Input() illustrationIds: string[] = [];\n\n  /** Emits cell type label when row is hovered */\n  @Output() readonly rowHover = new EventEmitter();\n\n  /** Reference to virtual scroll viewport */\n  @ViewChild(CdkVirtualScrollViewport, { static: true }) vscroll!: CdkVirtualScrollViewport;\n\n  /** Reference to biomarker table */\n  @ViewChild('table', { static: true, read: ElementRef }) table!: ElementRef;\n\n  /** Columns replaysubject */\n  readonly columns$ = new ReplaySubject(1);\n\n  /** Cell width (px) */\n  private readonly cellWidth = 44;\n  /** Extra columns to render outside the visible viewport */\n  private readonly extraDisplayedColumnCount = 2;\n\n  /** Current horizontal viewport size */\n  private horizontalViewportSize = 400;\n  /** Current horizontal scroll offset */\n  private horizontalScrollOffset = 0;\n  /** Current displayed column count */\n  private displayedColumnCount = 10;\n  /** Current displayed column offset */\n  private displayedColumnOffset = 0;\n\n  /** Gets the current width of the prefiller column */\n  get preFillerWidth(): string {\n    return `${this.cellWidth * this.displayedColumnOffset}px`;\n  }\n\n  /** Gets the current width of the postfiller column */\n  get postFillerWidth(): string {\n    const count = this.columns.length - this.displayedColumnCount - this.displayedColumnOffset;\n    return `${this.cellWidth * count}px`;\n  }\n\n  /** Source for the table */\n  readonly dataSource = new TableVirtualScrollDataSource>([]);\n\n  /** Change detection */\n  private readonly cdr = inject(ChangeDetectorRef);\n\n  /**\n   * Subscribes to scroll event on virtual scroll viewport and checks displayed columns\n   */\n  ngOnInit(): void {\n    const scroll$ = this.vscroll.scrollable.elementScrolled();\n    scroll$.subscribe(() => this.checkDisplayedColumns());\n  }\n\n  /**\n   * Sets the data source for the table on every change\n   * Sorts the biomarker table on illustrationIds change\n   * @param changes object consisting of change in the Input\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    this.checkDisplayedColumns('columns' in changes);\n    if ('data' in changes || 'illustrationIds' in changes) {\n      this.dataSource.data = this.sortTableData(this.data);\n    }\n  }\n\n  /**\n   * Checks for column updates on mouse move\n   */\n  @HostListener('window:mousemove', ['$event'])\n  onMouseMove() {\n    this.checkDisplayedColumns();\n  }\n\n  /**\n   * Returns index value\n   */\n  trackByIndex(index: number): number {\n    return index;\n  }\n\n  /**\n   * Checks to see if columns should be updated\n   */\n  checkDisplayedColumns(forceUpdate = false): void {\n    const scrollable = this.vscroll.scrollable;\n    const size = scrollable.measureViewportSize('horizontal');\n    const offset = scrollable.measureScrollOffset('start');\n    let shouldUpdate = forceUpdate;\n\n    if (size !== this.horizontalViewportSize) {\n      this.updateHorizontalViewportSize(size);\n      shouldUpdate = true;\n    }\n    if (offset !== this.horizontalScrollOffset) {\n      this.updateHorizontalViewportOffset(offset);\n      shouldUpdate = true;\n    }\n\n    if (shouldUpdate) {\n      this.updateColumns();\n    }\n  }\n\n  /**\n   * Updates horizontal viewport size and updates displayed column count\n   */\n  updateHorizontalViewportSize(size: number): void {\n    this.horizontalViewportSize = size;\n    this.displayedColumnCount =\n      Math.ceil(this.horizontalViewportSize / this.cellWidth) + this.extraDisplayedColumnCount;\n  }\n\n  /**\n   * Updates horizontal viewport offset and updates displayed column offset\n   */\n  updateHorizontalViewportOffset(offset: number): void {\n    this.horizontalScrollOffset = offset;\n    this.displayedColumnOffset = Math.max(Math.floor(offset / this.cellWidth) - this.extraDisplayedColumnCount / 2, 0);\n  }\n\n  /**\n   * Updates table columns with prefiller and postfiller columns\n   */\n  updateColumns(): void {\n    const { displayedColumnCount, displayedColumnOffset } = this;\n    const columns = ['type', 'count'];\n    if (this.displayedColumnOffset > 0) {\n      columns.push('preFiller');\n    }\n\n    const displayedColumns = this.columns.slice(displayedColumnOffset, displayedColumnOffset + displayedColumnCount);\n    columns.push(...displayedColumns);\n\n    if (displayedColumnOffset + displayedColumnCount []): DataRow[] {\n    const illustrationIdsSet = new Set(this.illustrationIds);\n    const inIllustration = new Map, boolean>();\n    for (const row of data) {\n      const id = this.getHoverId(row);\n      inIllustration.set(row, illustrationIdsSet.has(id));\n    }\n\n    return [...data].sort((row1, row2) => {\n      const in1 = inIllustration.get(row1);\n      const in2 = inIllustration.get(row2);\n\n      if (in1 && !in2) {\n        return -1;\n      } else if (!in1 && in2) {\n        return 1;\n      }\n\n      return row1[0].localeCompare(row2[0]);\n    });\n  }\n\n  /**\n   * Returns true if id matches the cell id of the row\n   * @param row Highlighted row\n   */\n  isHighlighted(row: DataRow): boolean {\n    return this.getHoverId(row) === this.highlightedCellId;\n  }\n\n  /**\n   * Gets hover id from row\n   * @param data row data\n   * @returns cell type id\n   */\n  getHoverId(data: DataRow): string {\n    const entry = data.slice(2).find((entry) => entry) as T;\n    return entry?.data.cell;\n  }\n\n  /** Lerp function to give value beween min and max value based on the given value\n   *\n   * @param value\n   * @param min\n   * @param max\n   * @returns\n   */\n  lerp(value: number, min: number, max: number): number {\n    return min * (1 - value) + max * value;\n  }\n\n  /**\n   * Converts HexCode to RGB\n   * @param hex\n   * @returns\n   */\n  hex2rgb(hex: string): RGBTriplet {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return [r, g, b];\n  }\n\n  /**\n   * Gets Min and Max color grade based on the meanExpression value\n   * @param meanExpression\n   * @returns\n   */\n  getMinMaxColor(meanExpression: number): { minColor: RGBTriplet; maxColor: RGBTriplet } {\n    const index = this.gradient.findIndex((item, i, arr) => {\n      return meanExpression >= item.percentage && meanExpression  {\n      return percentage >= parseFloat(item.label) / 100 && percentage  this.lerp(value, min, maxColor[index]))\n        .map((component) => {\n          const hex = Math.round(component).toString(16);\n          return hex.length == 1 ? '0' + hex : hex;\n        })\n        .join('')\n    );\n  }\n\n  /**\n   * gets Size of the Cell based on the percentage value\n   * @param value\n   * @returns\n   */\n  getSize(value: number): number {\n    const { minSize, maxSize } = this.getMinMaxSize(value);\n    return this.lerp(value, minSize, maxSize);\n  }\n\n  /**\n   * Processes the object for hover data for Table Cell\n   * @param index index of the row of the datasource\n   * @param row row of the datasource\n   * @returns\n   */\n  getHoverData([index, row]: [number, DataRow]): DataItem[][] {\n    if (row[index] === undefined) {\n      return [];\n    }\n\n    const {\n      tissueInfo: { id, label },\n    } = this;\n    const {\n      data: { cell, biomarker, meanExpression, dataset_count },\n    } = row[index] as T;\n\n    return [\n      [\n        { label: 'Functional Tissue Unit Name', value: label },\n        { label: 'Uberon ID', value: id },\n        { label: '#Datasets', value: `${dataset_count ?? 0}` },\n      ],\n      [\n        { label: 'Cell Type Name', value: row[0] },\n        { label: 'CL ID', value: cell },\n        { label: 'Number of Cells', value: `${row[1]}` },\n      ],\n      [\n        { label: 'Gene Name', value: this.columns[index - 2] },\n        { label: 'HGNC ID', value: biomarker },\n        { label: 'Mean Expression Value', value: meanExpression.toFixed(6) },\n      ],\n    ];\n  }\n\n  /**\n   * Sets and emits cell type id on row hover\n   * @param hoverId cell type id\n   */\n  setHoverId(hoverId?: string): void {\n    this.highlightedCellId = hoverId ?? '';\n    this.rowHover.emit(hoverId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^15.1.0\n        \n            @angular/core : ^15.1.0\n        \n            @hra-ui/theming : *\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ncomponents-organisms\nThis library was generated with Nx.\nRunning unit tests\nRun nx test components-organisms to execute the unit tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataRow   (src/.../biomarker-table.component.ts)\n                        \n                        \n                            RGBTriplet   (src/.../biomarker-table.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/biomarker-table/biomarker-table.component.ts\n    \n    \n        \n            \n                \n                    \n                    DataRow\n                \n            \n            \n                \n                    Describes the composition of a single row in the table\n\n                \n            \n            \n                \n                        [string, , ...[]]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RGBTriplet\n                \n            \n            \n                \n                    RGBTriblet of type RGB to store color\n\n                \n            \n            \n                \n                        [number, number, number]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
